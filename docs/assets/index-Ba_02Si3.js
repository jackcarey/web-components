var u=e=>{throw TypeError(e)};var c=(e,r,t)=>r.has(e)||u("Cannot "+t);var o=(e,r,t)=>(c(e,r,"read from private field"),t?t.call(e):r.get(e)),l=(e,r,t)=>r.has(e)?u("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(e):r.set(e,t),m=(e,r,t,n)=>(c(e,r,"write to private field"),n?n.call(e,t):r.set(e,t),t),h=(e,r,t)=>(c(e,r,"access private method"),t);var s,i,d;class b extends HTMLElement{constructor(){super(...arguments);l(this,i);l(this,s)}static get observedAttributes(){return["selector","strip-ids"]}connectedCallback(){h(this,i,d).call(this),this.render()}disconnectedCallback(){var t;(t=o(this,s))==null||t.disconnect()}attributeChangedCallback(t){t==="selector"&&h(this,i,d).call(this),this.render()}get selector(){return this.getAttribute("selector")}set selector(t){t!=null&&t.length?this.setAttribute("selector",t):this.removeAttribute("selector")}get stripIds(){return this.hasAttribute("strip-ids")}set stripIds(t){t?this.setAttribute("strip-ids",""):this.removeAttribute("strip-ids")}render(){if(this.innerHTML="",!this.selector)return;const t=document.querySelector(this.selector);t&&(this.innerHTML=t.innerHTML,this.stripIds&&this.querySelectorAll("[id]").forEach(n=>{n.removeAttribute("id")}))}}s=new WeakMap,i=new WeakSet,d=function(){var t;o(this,s)||m(this,s,new MutationObserver(()=>{this.render()})),(t=o(this,s))==null||t.disconnect()};customElements&&!customElements.get("mirror-element")&&customElements.define("mirror-element",b);export{b as MirrorElement};
//# sourceMappingURL=index-Ba_02Si3.js.map
