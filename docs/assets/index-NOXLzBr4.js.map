{"version":3,"file":"index-NOXLzBr4.js","sources":["../../packages/kbd-click/index.ts"],"sourcesContent":["\n/**\n * Listens on the `document` for key presses then fires clicks on any inner `kbd` elements where the `data-key` or `innerText` match. This is useful for implementing keyboard shortcuts.\n * Example usage:\n * ```html\n * <kbd-click filter=\"a, b, c\">\n *   <kbd data-key=\"a\">A</kbd>\n *   <kbd data-key=\"b\">B</kbd>\n *   <kbd data-key=\"c\">C</kbd>\n * </kbd-click>\n * ```\n * This will trigger a click on the respective `kbd` element when the corresponding key is pressed, but ignore all keypresses that are not 'a', 'b', or 'c'.\n */\nclass KBDClick extends HTMLElement {\n\n    static get observedAttributes(): string[] {\n        return ['allow-repeat', 'filter', 'capture', 'passive', 'case-sensitive', 'ignore-visibility', 'disabled'];\n    }\n\n    #setupListener(): void {\n        document.removeEventListener('keydown', this.#handleKeyDown);\n\n        const options: AddEventListenerOptions = {\n            capture: this.hasAttribute('capture'),\n            passive: this.hasAttribute('passive'),\n            once: false,\n        };\n        if (!this.disabled) {\n            document.addEventListener('keydown', this.#handleKeyDown, options);\n        }\n    }\n\n    #handleKeyDown = (event: KeyboardEvent): void => {\n        if (this.disabled) return;\n        const { type, key, repeat } = event;\n        if (type !== 'keydown' || !key) {\n            return;\n        }\n        if (!this.allowRepeat && repeat) {\n            return;\n        }\n        const usingFilter = this.caseSensitive ? this.filter : this.filter.toLowerCase();\n        const usingKey = this.caseSensitive ? key : key.toLowerCase();\n        const filterArray = usingFilter.split(',').map(item => item.trim()).filter(Boolean);\n        const isFilteredIn = !(filterArray?.length) || filterArray.includes(usingKey);\n        if (!isFilteredIn) {\n            return;\n        }\n        const els = this.querySelectorAll('kbd,[accesskey]');\n        if (els.length === 0) {\n            return;\n        }\n        const ignoreVisibility = this.ignoreVisibility;\n        els.forEach(el => {\n            const isKbd = el.tagName.toLowerCase() === 'kbd';\n            const elCode = (el.getAttribute('accesskey') ?? isKbd ? (el as HTMLElement).innerText.trim() : '').trim();\n            const usingElCode = this.caseSensitive ? elCode : elCode.toLowerCase();\n            const matchesEvent = usingElCode === usingKey;\n            const isVisible = ignoreVisibility || el.checkVisibility();\n            if (matchesEvent && isVisible) {\n                el.dispatchEvent(new MouseEvent('click', {\n                    bubbles: true,\n                    cancelable: true,\n                    composed: true,\n                }));\n                (el as HTMLElement).focus();\n            }\n        });\n    }\n\n    connectedCallback(): void {\n        this.#setupListener();\n    }\n\n    disconnectedCallback(): void {\n        document.removeEventListener('keydown', this.#handleKeyDown);\n    }\n\n    attributeChangedCallback(name: string): void {\n        const setupAttrs = ['capture', 'passive', 'disabled'];\n        if (setupAttrs.includes(name)) {\n            this.#setupListener();\n        }\n    }\n\n    get allowRepeat(): boolean {\n        return this.hasAttribute('allow-repeat');\n    }\n\n    set allowRepeat(value: boolean) {\n        if (value) {\n            this.setAttribute('allow-repeat', '');\n        } else {\n            this.removeAttribute('allow-repeat');\n        }\n    }\n\n    get filter(): string {\n        return this.getAttribute('filter') || '';\n    }\n\n    set filter(value: string | null | undefined) {\n        if (value?.length) {\n            this.setAttribute('filter', value);\n        } else {\n            this.removeAttribute('filter');\n        }\n    }\n\n    get capture(): boolean {\n        return this.hasAttribute('capture');\n    }\n\n    set capture(value: boolean) {\n        if (value) {\n            this.setAttribute('capture', '');\n        } else {\n            this.removeAttribute('capture');\n        }\n    }\n\n    get passive(): boolean {\n        return this.hasAttribute('passive');\n    }\n\n    set passive(value: boolean) {\n        if (value) {\n            this.setAttribute('passive', '');\n        } else {\n            this.removeAttribute('passive');\n        }\n    }\n\n    get caseSensitive(): boolean {\n        return this.hasAttribute('case-sensitive');\n    }\n\n    set caseSensitive(value: boolean) {\n        if (value) {\n            this.setAttribute('case-sensitive', '');\n        } else {\n            this.removeAttribute('case-sensitive');\n        }\n    }\n\n    get ignoreVisibility(): boolean {\n        return this.hasAttribute('ignore-visibility');\n    }\n\n    set ignoreVisibility(value: boolean) {\n        if (value) {\n            this.setAttribute('ignore-visibility', '');\n        } else {\n            this.removeAttribute('ignore-visibility');\n        }\n    }\n\n    get disabled(): boolean {\n        return this.hasAttribute('disabled');\n    }\n\n    set disabled(value: boolean) {\n        if (value) {\n            this.setAttribute('disabled', '');\n        } else {\n            this.removeAttribute('disabled');\n        }\n    }\n\n}\n\nexport default KBDClick;\n\nif (!customElements.get('kbd-click')) {\n    customElements.define('kbd-click', KBDClick);\n}"],"names":["_KBDClick_instances","setupListener_fn","_handleKeyDown","KBDClick","__privateAdd","event","type","key","repeat","usingFilter","usingKey","filterArray","item","els","ignoreVisibility","el","isKbd","elCode","matchesEvent","isVisible","__privateMethod","__privateGet","name","value","options"],"mappings":"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"}