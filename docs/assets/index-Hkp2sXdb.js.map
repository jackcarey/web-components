{"version":3,"file":"index-Hkp2sXdb.js","sources":["../../node_modules/ical.js/dist/ical.js","../../packages/i-cal/index.ts"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Represents the BINARY value type, which contains extra methods for encoding and decoding.\n *\n * @memberof ICAL\n */\nclass Binary {\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {Binary}               The binary value instance\n   */\n  static fromString(aString) {\n    return new Binary(aString);\n  }\n\n  /**\n   * Creates a new ICAL.Binary instance\n   *\n   * @param {String} aValue     The binary data for this value\n   */\n  constructor(aValue) {\n    this.value = aValue;\n  }\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @default \"binary\"\n   * @constant\n   */\n  icaltype = \"binary\";\n\n  /**\n   * Base64 decode the current value\n   *\n   * @return {String}         The base64-decoded value\n   */\n  decodeValue() {\n    return this._b64_decode(this.value);\n  }\n\n  /**\n   * Encodes the passed parameter with base64 and sets the internal\n   * value to the result.\n   *\n   * @param {String} aValue      The raw binary value to encode\n   */\n  setEncodedValue(aValue) {\n    this.value = this._b64_encode(aValue);\n  }\n\n  _b64_encode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Bayron Guevara\n    // +   improved by: Thunder.m\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Rafa≈Ç Kukawski (http://kukawski.pl)\n    // *     example 1: base64_encode('Kevin van Zonneveld');\n    // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['atob'] == 'function') {\n    //    return atob(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      enc = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    do { // pack three octets into four hexets\n      o1 = data.charCodeAt(i++);\n      o2 = data.charCodeAt(i++);\n      o3 = data.charCodeAt(i++);\n\n      bits = o1 << 16 | o2 << 8 | o3;\n\n      h1 = bits >> 18 & 0x3f;\n      h2 = bits >> 12 & 0x3f;\n      h3 = bits >> 6 & 0x3f;\n      h4 = bits & 0x3f;\n\n      // use hexets to index into b64, and append result to encoded string\n      tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    let r = data.length % 3;\n\n    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n  }\n\n  _b64_decode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Thunder.m\n    // +      input by: Aman Gupta\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n    // *     returns 1: 'Kevin van Zonneveld'\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['btoa'] == 'function') {\n    //    return btoa(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      dec = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    data += '';\n\n    do { // unpack four hexets into three octets using index points in b64\n      h1 = b64.indexOf(data.charAt(i++));\n      h2 = b64.indexOf(data.charAt(i++));\n      h3 = b64.indexOf(data.charAt(i++));\n      h4 = b64.indexOf(data.charAt(i++));\n\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n      o1 = bits >> 16 & 0xff;\n      o2 = bits >> 8 & 0xff;\n      o3 = bits & 0xff;\n\n      if (h3 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1);\n      } else if (h4 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2);\n      } else {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n      }\n    } while (i < data.length);\n\n    dec = tmp_arr.join('');\n\n    return dec;\n  }\n\n  /**\n   * The string representation of this value\n   * @return {String}\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nconst DURATION_LETTERS = /([PDWHMTS]{1,1})/;\nconst DATA_PROPS_TO_COPY = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"isNegative\"];\n\n/**\n * This class represents the \"duration\" value type, with various calculation\n * and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Duration {\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {Duration}             The newly created duration instance\n   */\n  static fromSeconds(aSeconds) {\n    return (new Duration()).fromSeconds(aSeconds);\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  static isValueString(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  }\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {Duration}         The created duration instance\n   */\n  static fromString(aStr) {\n    let pos = 0;\n    let dict = Object.create(null);\n    let chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      let type = aStr[pos];\n      let numeric = aStr.slice(0, Math.max(0, pos));\n      aStr = aStr.slice(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new Duration(dict);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   * @return {Duration}                   The createad duration instance\n   */\n  static fromData(aData) {\n    return new Duration(aData);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance.\n   *\n   * @param {Object} data                 An object with members of the duration\n   * @param {Number=} data.weeks          Duration in weeks\n   * @param {Number=} data.days           Duration in days\n   * @param {Number=} data.hours          Duration in hours\n   * @param {Number=} data.minutes        Duration in minutes\n   * @param {Number=} data.seconds        Duration in seconds\n   * @param {Boolean=} data.isNegative    If true, the duration is negative\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n  /**\n   * The weeks in this duration\n   * @type {Number}\n   * @default 0\n   */\n  weeks = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  days = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  hours = 0;\n\n  /**\n   * The minutes in this duration\n   * @type {Number}\n   * @default 0\n   */\n  minutes = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Number}\n   * @default 0\n   */\n  seconds = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Boolean}\n   * @default false\n   */\n  isNegative = false;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalduration\"\n   */\n  icalclass = \"icalduration\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"duration\"\n   */\n  icaltype = \"duration\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Duration}      The cloned object\n   */\n  clone() {\n    return Duration.fromData(this);\n  }\n\n  /**\n   * The duration value expressed as a number of seconds.\n   *\n   * @return {Number}             The duration value in seconds\n   */\n  toSeconds() {\n    let seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                  86400 * this.days + 7 * 86400 * this.weeks;\n    return (this.isNegative ? -seconds : seconds);\n  }\n\n  /**\n   * Reads the passed seconds value into this duration object. Afterwards,\n   * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n   * accordingly.\n   *\n   * @param {Number} aSeconds     The duration value in seconds\n   * @return {Duration}           Returns this instance\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.isNegative = (aSeconds < 0);\n    this.days = trunc(secs / 86400);\n\n    // If we have a flat number of weeks, use them.\n    if (this.days % 7 == 0) {\n      this.weeks = this.days / 7;\n      this.days = 0;\n    } else {\n      this.weeks = 0;\n    }\n\n    secs -= (this.days + 7 * this.weeks) * 86400;\n\n    this.hours = trunc(secs / 3600);\n    secs -= this.hours * 3600;\n\n    this.minutes = trunc(secs / 60);\n    secs -= this.minutes * 60;\n\n    this.seconds = secs;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   */\n  fromData(aData) {\n    for (let prop of DATA_PROPS_TO_COPY) {\n      if (aData && prop in aData) {\n        this[prop] = aData[prop];\n      } else {\n        this[prop] = 0;\n      }\n    }\n  }\n\n  /**\n   * Resets the duration instance to the default values, i.e. PT0S\n   */\n  reset() {\n    this.isNegative = false;\n    this.weeks = 0;\n    this.days = 0;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n  }\n\n  /**\n   * Compares the duration instance with another one.\n   *\n   * @param {Duration} aOther             The instance to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(aOther) {\n    let thisSeconds = this.toSeconds();\n    let otherSeconds = aOther.toSeconds();\n    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n  }\n\n  /**\n   * Normalizes the duration instance. For example, a duration with a value\n   * of 61 seconds will be normalized to 1 minute and 1 second.\n   */\n  normalize() {\n    this.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * The string representation of this duration.\n   * @return {String}\n   */\n  toString() {\n    if (this.toSeconds() == 0) {\n      return \"PT0S\";\n    } else {\n      let str = \"\";\n      if (this.isNegative) str += \"-\";\n      str += \"P\";\n      let hasWeeks = false;\n      if (this.weeks) {\n        if (this.days || this.hours || this.minutes || this.seconds) {\n          str += (this.weeks * 7 + this.days) + \"D\";\n        } else {\n          str += (this.weeks + \"W\");\n          hasWeeks = true;\n        }\n      } else if (this.days) {\n        str += (this.days + \"D\");\n      }\n\n      if (!hasWeeks) {\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) {\n            str += this.hours + \"H\";\n          }\n\n          if (this.minutes) {\n            str += this.minutes + \"M\";\n          }\n\n          if (this.seconds) {\n            str += this.seconds + \"S\";\n          }\n        }\n      }\n\n      return str;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this duration.\n   * @return {String}\n   */\n  toICALString() {\n    return this.toString();\n  }\n}\n\n/**\n * Internal helper function to handle a chunk of a duration.\n *\n * @private\n * @param {String} letter type of duration chunk\n * @param {String} number numeric value or -/+\n * @param {Object} dict target to assign values to\n */\nfunction parseDurationChunk(letter, number, object) {\n  let type;\n  switch (letter) {\n    case 'P':\n      if (number && number === '-') {\n        object.isNegative = true;\n      } else {\n        object.isNegative = false;\n      }\n      // period\n      break;\n    case 'D':\n      type = 'days';\n      break;\n    case 'W':\n      type = 'weeks';\n      break;\n    case 'H':\n      type = 'hours';\n      break;\n    case 'M':\n      type = 'minutes';\n      break;\n    case 'S':\n      type = 'seconds';\n      break;\n    default:\n      // Not a valid chunk\n      return 0;\n  }\n\n  if (type) {\n    if (!number && number !== 0) {\n      throw new Error(\n        'invalid duration value: Missing number before \"' + letter + '\"'\n      );\n    }\n    let num = parseInt(number, 10);\n    if (isStrictlyNaN(num)) {\n      throw new Error(\n        'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n      );\n    }\n    object[type] = num;\n  }\n\n  return 1;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").jCalComponent} jCalComponent\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * This class represents the \"period\" value type, with various calculation and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Period {\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {Property} prop         The property this period will be on\n   * @return {Period}               The created period instance\n   */\n  static fromString(str, prop) {\n    let parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    let options = {\n      start: Time.fromDateTimeString(parts[0], prop)\n    };\n\n    let end = parts[1];\n\n    if (Duration.isValueString(end)) {\n      options.duration = Duration.fromString(end);\n    } else {\n      options.end = Time.fromDateTimeString(end, prop);\n    }\n\n    return new Period(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   * @return {Period}                       The period instance\n   */\n  static fromData(aData) {\n    return new Period(aData);\n  }\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {jCalComponent} aData           The jCal data array\n   * @param {Property} aProp                The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {Period}                       The period instance\n   */\n  static fromJSON(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, dateProp) {\n      if (aLenient) {\n        return Time.fromString(aValue, dateProp);\n      } else {\n        return Time.fromDateTimeString(aValue, dateProp);\n      }\n    }\n\n    if (Duration.isValueString(aData[1])) {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: Duration.fromString(aData[1])\n      });\n    } else {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Period instance. The passed data object cannot contain both and end date and\n   * a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   */\n  constructor(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  }\n\n\n  /**\n   * The start of the period\n   * @type {Time}\n   */\n  start = null;\n\n  /**\n   * The end of the period\n   * @type {Time}\n   */\n  end = null;\n\n  /**\n   * The duration of the period\n   * @type {Duration}\n   */\n  duration = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalperiod\"\n   */\n  icalclass = \"icalperiod\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"period\"\n   */\n  icaltype = \"period\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Period}      The cloned object\n   */\n  clone() {\n    return Period.fromData({\n      start: this.start ? this.start.clone() : null,\n      end: this.end ? this.end.clone() : null,\n      duration: this.duration ? this.duration.clone() : null\n    });\n  }\n\n  /**\n   * Calculates the duration of the period, either directly or by subtracting\n   * start from end date.\n   *\n   * @return {Duration}      The calculated duration\n   */\n  getDuration() {\n    if (this.duration) {\n      return this.duration;\n    } else {\n      return this.end.subtractDate(this.start);\n    }\n  }\n\n  /**\n   * Calculates the end date of the period, either directly or by adding\n   * duration to start date.\n   *\n   * @return {Time}          The calculated end date\n   */\n  getEnd() {\n    if (this.end) {\n      return this.end;\n    } else {\n      let end = this.start.clone();\n      end.addDuration(this.duration);\n      return end;\n    }\n  }\n\n  /**\n   * Compare this period with a date or other period. To maintain the logic where a.compare(b)\n   * returns 1 when a > b, this function will return 1 when the period is after the date, 0 when the\n   * date is within the period, and -1 when the period is before the date. When comparing two\n   * periods, as soon as they overlap in any way this will return 0.\n   *\n   * @param {ICAL.Time|ICAL.Period} dt    The date or other period to compare with\n   */\n  compare(dt) {\n    if (dt.compare(this.start) < 0) {\n      return 1;\n    } else if (dt.compare(this.getEnd()) > 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * The string representation of this period.\n   * @return {String}\n   */\n  toString() {\n    return this.start + \"/\" + (this.end || this.duration);\n  }\n\n  /**\n   * The jCal representation of this period type.\n   * @return {Object}\n   */\n  toJSON() {\n    return [this.start.toString(), (this.end || this.duration).toString()];\n  }\n\n  /**\n   * The iCalendar string representation of this period.\n   * @return {String}\n   */\n  toICALString() {\n    return this.start.toICALString() + \"/\" +\n           (this.end || this.duration).toICALString();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n *\n * @ignore\n * @typedef {import(\"./types.js\").timeInit} timeInit\n * Imports the 'timeInit' type from the \"types.js\" module\n */\n\n/**\n * @classdesc\n * iCalendar Time representation (similar to JS Date object).  Fully\n * independent of system (OS) timezone / time.  Unlike JS Date, the month\n * January is 1, not zero.\n *\n * @example\n * var time = new ICAL.Time({\n *   year: 2012,\n *   month: 10,\n *   day: 11\n *   minute: 0,\n *   second: 0,\n *   isDate: false\n * });\n *\n *\n * @memberof ICAL\n*/\nclass Time {\n  static _dowCache = {};\n  static _wnCache = {};\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  static daysInMonth(month, year) {\n    let _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += Time.isLeapYear(year);\n    }\n\n    return days;\n  }\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  static isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  }\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {Time}                 The created instance with the calculated date\n   */\n  static fromDayOfYear(aDayOfYear, aYear) {\n    let year = aYear;\n    let doy = aDayOfYear;\n    let tt = new Time();\n    tt.auto_normalize = false;\n    let is_leap = (Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy += Time.daysInYearPassedMonth[is_leap][12];\n      return Time.fromDayOfYear(doy, year);\n    } else if (doy > Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy -= Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (let month = 11; month >= 0; month--) {\n      if (doy > Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromStringv2(str) {\n    return new Time({\n      year: parseInt(str.slice(0, 4), 10),\n      month: parseInt(str.slice(5, 7), 10),\n      day: parseInt(str.slice(8, 10), 10),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromDateString(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new Time({\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromDateTimeString(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    let zone;\n    let zoneId;\n\n    if (aValue.slice(-1) === 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (prop) {\n      zoneId = prop.getParameter('tzid');\n\n      if (prop.parent) {\n        if (prop.parent.name === 'standard' || prop.parent.name === 'daylight') {\n          // Per RFC 5545 3.8.2.4 and 3.8.2.2, start/end date-times within\n          // these components MUST be specified in local time.\n          zone = Timezone.localTimezone;\n        } else if (zoneId) {\n          // If the desired time zone is defined within the component tree,\n          // fetch its definition and prefer that.\n          zone = prop.parent.getTimeZoneByID(zoneId);\n        }\n      }\n    }\n\n    const timeData = {\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      hour: strictParseInt(aValue.slice(11, 13)),\n      minute: strictParseInt(aValue.slice(14, 16)),\n      second: strictParseInt(aValue.slice(17, 19)),\n    };\n\n    // Although RFC 5545 requires that all TZIDs used within a file have a\n    // corresponding time zone definition, we may not be parsing the full file\n    // or we may be dealing with a non-compliant file; in either case, we can\n    // check our own time zone service for the TZID in a last-ditch effort.\n    if (zoneId && !zone) {\n      timeData.timezone = zoneId;\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    return new Time(timeData, zone);\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return Time.fromDateString(aValue);\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  static fromJSDate(aDate, useUTC) {\n    let tt = new Time();\n    return tt.fromJSDate(aDate, useUTC);\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {timeInit} aData          Time initialization\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  static fromData = function fromData(aData, aZone) {\n    let t = new Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is ‚Äúfloating‚Äù - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {Time}\n   */\n  static now() {\n    return Time.fromJSDate(new Date(), false);\n  }\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {weekDay=} aWeekStart           The week start weekday, used for calculation.\n   * @return {Time}                         The date on which week number 1 starts\n   */\n  static weekOneStarts(aYear, aWeekStart) {\n    let t = Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    let dow = t.dayOfWeek();\n    let wkst = aWeekStart || Time.DEFAULT_WEEK_START;\n    if (dow > Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  }\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  static getDominicalLetter(yr) {\n    let LTRS = \"GFEDCBA\";\n    let dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    let isLeap = Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  }\n\n  static #epochTime = null;\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {Time}\n   * @constant\n   * @instance\n   */\n  static get epochTime() {\n    if (!this.#epochTime) {\n      this.#epochTime = Time.fromData({\n        year: 1970,\n        month: 1,\n        day: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        isDate: false,\n        timezone: \"Z\"\n      });\n    }\n    return this.#epochTime;\n  }\n\n  static _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  }\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  static daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  static SUNDAY = 1;\n  static MONDAY = 2;\n  static TUESDAY = 3;\n  static WEDNESDAY = 4;\n  static THURSDAY = 5;\n  static FRIDAY = 6;\n  static SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  static DEFAULT_WEEK_START = 2; // MONDAY\n\n  /**\n   * Creates a new ICAL.Time instance.\n   *\n   * @param {timeInit} data           Time initialization\n   * @param {Timezone} zone           timezone this position occurs in\n   */\n  constructor(data, zone) {\n    this.wrappedJSObject = this;\n\n    /**\n     * @type {timeInit}\n     * @private\n     */\n    this._time = Object.create(null);\n\n    /* time defaults */\n    this._time.year = 0;\n    this._time.month = 1;\n    this._time.day = 1;\n    this._time.hour = 0;\n    this._time.minute = 0;\n    this._time.second = 0;\n    this._time.isDate = false;\n\n    this.fromData(data, zone);\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltime\"\n   */\n  icalclass = \"icaltime\";\n  _cachedUnixTime = null;\n\n  /**\n   * The type name, to be used in the jCal object. This value may change and\n   * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n   * @type {String}\n   * @default \"date-time\"\n   */\n  get icaltype() {\n    return this.isDate ? 'date' : 'date-time';\n  }\n\n  /**\n   * The timezone for this time.\n   * @type {Timezone}\n   */\n  zone = null;\n\n  /**\n   * Internal uses to indicate that a change has been made and the next read\n   * operation must attempt to normalize the value (for example changing the\n   * day to 33).\n   *\n   * @type {Boolean}\n   * @private\n   */\n  _pendingNormalization = false;\n\n  /**\n   * The year of this date.\n   * @type {Number}\n   */\n  get year() {\n    return this._getTimeAttr('year');\n  }\n\n  set year(val) {\n    this._setTimeAttr('year', val);\n  }\n\n  /**\n   * The month of this date.\n   * @type {Number}\n   */\n  get month() {\n    return this._getTimeAttr('month');\n  }\n\n  set month(val) {\n    this._setTimeAttr('month', val);\n  }\n\n  /**\n   * The day of this date.\n   * @type {Number}\n   */\n  get day() {\n    return this._getTimeAttr('day');\n  }\n\n  set day(val) {\n    this._setTimeAttr('day', val);\n  }\n\n  /**\n   * The hour of this date-time.\n   * @type {Number}\n   */\n  get hour() {\n    return this._getTimeAttr('hour');\n  }\n\n  set hour(val) {\n    this._setTimeAttr('hour', val);\n  }\n\n  /**\n   * The minute of this date-time.\n   * @type {Number}\n   */\n  get minute() {\n    return this._getTimeAttr('minute');\n  }\n\n  set minute(val) {\n    this._setTimeAttr('minute', val);\n  }\n\n  /**\n   * The second of this date-time.\n   * @type {Number}\n   */\n  get second() {\n    return this._getTimeAttr('second');\n  }\n\n  set second(val) {\n    this._setTimeAttr('second', val);\n  }\n\n  /**\n   * If true, the instance represents a date (as opposed to a date-time)\n   * @type {Boolean}\n   */\n  get isDate() {\n    return this._getTimeAttr('isDate');\n  }\n\n  set isDate(val) {\n    this._setTimeAttr('isDate', val);\n  }\n\n  /**\n   * @private\n   * @param {String} attr             Attribute to get (one of: year, month,\n   *                                  day, hour, minute, second, isDate)\n   * @return {Number|Boolean}         Current value for the attribute\n   */\n  _getTimeAttr(attr) {\n    if (this._pendingNormalization) {\n      this._normalize();\n      this._pendingNormalization = false;\n    }\n\n    return this._time[attr];\n  }\n\n  /**\n   * @private\n   * @param {String} attr             Attribute to set (one of: year, month,\n   *                                  day, hour, minute, second, isDate)\n   * @param {Number|Boolean} val      New value for the attribute\n   */\n  _setTimeAttr(attr, val) {\n    // Check if isDate will be set and if was not set to normalize date.\n    // This avoids losing days when seconds, minutes and hours are zeroed\n    // what normalize will do when time is a date.\n    if (attr === \"isDate\" && val && !this._time.isDate) {\n      this.adjust(0, 0, 0, 0);\n    }\n    this._cachedUnixTime = null;\n    this._pendingNormalization = true;\n    this._time[attr] = val;\n  }\n\n  /**\n   * Returns a clone of the time object.\n   *\n   * @return {Time}              The cloned object\n   */\n  clone() {\n    return new Time(this._time, this.zone);\n  }\n\n  /**\n   * Reset the time instance to epoch time\n   */\n  reset() {\n    this.fromData(Time.epochTime);\n    this.zone = Timezone.utcTimezone;\n  }\n\n  /**\n   * Reset the time instance to the given date/time values.\n   *\n   * @param {Number} year             The year to set\n   * @param {Number} month            The month to set\n   * @param {Number} day              The day to set\n   * @param {Number} hour             The hour to set\n   * @param {Number} minute           The minute to set\n   * @param {Number} second           The second to set\n   * @param {Timezone} timezone       The timezone to set\n   */\n  resetTo(year, month, day, hour, minute, second, timezone) {\n    this.fromData({\n      year: year,\n      month: month,\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second,\n      zone: timezone\n    });\n  }\n\n  /**\n   * Set up the current instance from the Javascript date value.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  fromJSDate(aDate, useUTC) {\n    if (!aDate) {\n      this.reset();\n    } else {\n      if (useUTC) {\n        this.zone = Timezone.utcTimezone;\n        this.year = aDate.getUTCFullYear();\n        this.month = aDate.getUTCMonth() + 1;\n        this.day = aDate.getUTCDate();\n        this.hour = aDate.getUTCHours();\n        this.minute = aDate.getUTCMinutes();\n        this.second = aDate.getUTCSeconds();\n      } else {\n        this.zone = Timezone.localTimezone;\n        this.year = aDate.getFullYear();\n        this.month = aDate.getMonth() + 1;\n        this.day = aDate.getDate();\n        this.hour = aDate.getHours();\n        this.minute = aDate.getMinutes();\n        this.second = aDate.getSeconds();\n      }\n    }\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {timeInit} aData          Time initialization\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  fromData(aData, aZone) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n          // ical type cannot be set\n          if (key === 'icaltype') continue;\n        this[key] = value;\n      }\n    }\n\n    if (aZone) {\n      this.zone = aZone;\n    }\n\n    if (aData && !(\"isDate\" in aData)) {\n      this.isDate = !(\"hour\" in aData);\n    } else if (aData && (\"isDate\" in aData)) {\n      this.isDate = aData.isDate;\n    }\n\n    if (aData && \"timezone\" in aData) {\n      let zone = TimezoneService.get(\n        aData.timezone\n      );\n\n      this.zone = zone || Timezone.localTimezone;\n    }\n\n    if (aData && \"zone\" in aData) {\n      this.zone = aData.zone;\n    }\n\n    if (!this.zone) {\n      this.zone = Timezone.localTimezone;\n    }\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Calculate the day of week.\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {weekDay}\n   */\n  dayOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n    if (dowCacheKey in Time._dowCache) {\n      return Time._dowCache[dowCacheKey];\n    }\n\n    // Using Zeller's algorithm\n    let q = this.day;\n    let m = this.month + (this.month < 3 ? 12 : 0);\n    let Y = this.year - (this.month < 3 ? 1 : 0);\n\n    let h = (q + Y + trunc(((m + 1) * 26) / 10) + trunc(Y / 4));\n    { // eslint-disable-line no-constant-condition\n      h += trunc(Y / 100) * 6 + trunc(Y / 400);\n    }\n\n    // Normalize to 1 = wkst\n    h = ((h + 7 - firstDow) % 7) + 1;\n    Time._dowCache[dowCacheKey] = h;\n    return h;\n  }\n\n  /**\n   * Calculate the day of year.\n   * @return {Number}\n   */\n  dayOfYear() {\n    let is_leap = (Time.isLeapYear(this.year) ? 1 : 0);\n    let diypm = Time.daysInYearPassedMonth;\n    return diypm[is_leap][this.month - 1] + this.day;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * week. The resulting ICAL.Time instance is of icaltype date, even if this\n   * is a date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The start of the week (cloned)\n   */\n  startOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the week.\n   * The resulting ICAL.Time instance is of icaltype date, even if this is a\n   * date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The end of the week (cloned)\n   */\n  endOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day += (7 - this.dayOfWeek() + firstDow - Time.SUNDAY) % 7;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * month. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the month (cloned)\n   */\n  startOfMonth() {\n    let result = this.clone();\n    result.day = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * month.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the month (cloned)\n   */\n  endOfMonth() {\n    let result = this.clone();\n    result.day = Time.daysInMonth(result.month, result.year);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * year. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the year (cloned)\n   */\n  startOfYear() {\n    let result = this.clone();\n    result.day = 1;\n    result.month = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * year.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the year (cloned)\n   */\n  endOfYear() {\n    let result = this.clone();\n    result.day = 31;\n    result.month = 12;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * First calculates the start of the week, then returns the day of year for\n   * this date. If the day falls into the previous year, the day is zero or negative.\n   *\n   * @param {weekDay=} aFirstDayOfWeek\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}     The calculated day of year\n   */\n  startDoyWeek(aFirstDayOfWeek) {\n    let firstDow = aFirstDayOfWeek || Time.SUNDAY;\n    let delta = this.dayOfWeek() - firstDow;\n    if (delta < 0) delta += 7;\n    return this.dayOfYear() - delta;\n  }\n\n  /**\n   * Get the dominical letter for the current year. Letters range from A - G\n   * for common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  getDominicalLetter() {\n    return Time.getDominicalLetter(this.year);\n  }\n\n  /**\n   * Finds the nthWeekDay relative to the current month (not day).  The\n   * returned value is a day relative the month that this month belongs to so\n   * 1 would indicate the first of the month and 40 would indicate a day in\n   * the following month.\n   *\n   * @param {Number} aDayOfWeek   Day of the week see the day name constants\n   * @param {Number} aPos         Nth occurrence of a given week day values\n   *        of 1 and 0 both indicate the first weekday of that type. aPos may\n   *        be either positive or negative\n   *\n   * @return {Number} numeric value indicating a day relative\n   *                   to the current month of this time object\n   */\n  nthWeekDay(aDayOfWeek, aPos) {\n    let daysInMonth = Time.daysInMonth(this.month, this.year);\n    let weekday;\n    let pos = aPos;\n\n    let start = 0;\n\n    let otherDay = this.clone();\n\n    if (pos >= 0) {\n      otherDay.day = 1;\n\n      // because 0 means no position has been given\n      // 1 and 0 indicate the same day.\n      if (pos != 0) {\n        // remove the extra numeric value\n        pos--;\n      }\n\n      // set current start offset to current day.\n      start = otherDay.day;\n\n      // find the current day of week\n      let startDow = otherDay.dayOfWeek();\n\n      // calculate the difference between current\n      // day of the week and desired day of the week\n      let offset = aDayOfWeek - startDow;\n\n\n      // if the offset goes into the past\n      // week we add 7 so it goes into the next\n      // week. We only want to go forward in time here.\n      if (offset < 0)\n        // this is really important otherwise we would\n        // end up with dates from in the past.\n        offset += 7;\n\n      // add offset to start so start is the same\n      // day of the week as the desired day of week.\n      start += offset;\n\n      // because we are going to add (and multiply)\n      // the numeric value of the day we subtract it\n      // from the start position so not to add it twice.\n      start -= aDayOfWeek;\n\n      // set week day\n      weekday = aDayOfWeek;\n    } else {\n\n      // then we set it to the last day in the current month\n      otherDay.day = daysInMonth;\n\n      // find the ends weekday\n      let endDow = otherDay.dayOfWeek();\n\n      pos++;\n\n      weekday = (endDow - aDayOfWeek);\n\n      if (weekday < 0) {\n        weekday += 7;\n      }\n\n      weekday = daysInMonth - weekday;\n    }\n\n    weekday += pos * 7;\n\n    return start + weekday;\n  }\n\n  /**\n   * Checks if current time is the nth weekday, relative to the current\n   * month.  Will always return false when rule resolves outside of current\n   * month.\n   *\n   * @param {weekDay} aDayOfWeek                 Day of week to check\n   * @param {Number} aPos                        Relative position\n   * @return {Boolean}                           True, if it is the nth weekday\n   */\n  isNthWeekDay(aDayOfWeek, aPos) {\n    let dow = this.dayOfWeek();\n\n    if (aPos === 0 && dow === aDayOfWeek) {\n      return true;\n    }\n\n    // get pos\n    let day = this.nthWeekDay(aDayOfWeek, aPos);\n\n    if (day === this.day) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Calculates the ISO 8601 week number. The first week of a year is the\n   * week that contains the first Thursday. The year can have 53 weeks, if\n   * January 1st is a Friday.\n   *\n   * Note there are regions where the first week of the year is the one that\n   * starts on January 1st, which may offset the week number. Also, if a\n   * different week start is specified, this will also affect the week\n   * number.\n   *\n   * @see Time.weekOneStarts\n   * @param {weekDay} aWeekStart                  The weekday the week starts with\n   * @return {Number}                             The ISO week number\n   */\n  weekNumber(aWeekStart) {\n    let wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n    if (wnCacheKey in Time._wnCache) {\n      return Time._wnCache[wnCacheKey];\n    }\n    // This function courtesty of Julian Bucknall, published under the MIT license\n    // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n    // plus some fixes to be able to use different week starts.\n    let week1;\n\n    let dt = this.clone();\n    dt.isDate = true;\n    let isoyear = this.year;\n\n    if (dt.month == 12 && dt.day > 25) {\n      week1 = Time.weekOneStarts(isoyear + 1, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      } else {\n        isoyear++;\n      }\n    } else {\n      week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(--isoyear, aWeekStart);\n      }\n    }\n\n    let daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n    let answer = trunc(daysBetween / 7) + 1;\n    Time._wnCache[wnCacheKey] = answer;\n    return answer;\n  }\n\n  /**\n   * Adds the duration to the current time. The instance is modified in\n   * place.\n   *\n   * @param {Duration} aDuration         The duration to add\n   */\n  addDuration(aDuration) {\n    let mult = (aDuration.isNegative ? -1 : 1);\n\n    // because of the duration optimizations it is much\n    // more efficient to grab all the values up front\n    // then set them directly (which will avoid a normalization call).\n    // So we don't actually normalize until we need it.\n    let second = this.second;\n    let minute = this.minute;\n    let hour = this.hour;\n    let day = this.day;\n\n    second += mult * aDuration.seconds;\n    minute += mult * aDuration.minutes;\n    hour += mult * aDuration.hours;\n    day += mult * aDuration.days;\n    day += mult * 7 * aDuration.weeks;\n\n    this.second = second;\n    this.minute = minute;\n    this.hour = hour;\n    this.day = day;\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Subtract the date details (_excluding_ timezone).  Useful for finding\n   * the relative difference between two time objects excluding their\n   * timezone differences.\n   *\n   * @param {Time} aDate     The date to subtract\n   * @return {Duration}      The difference as a duration\n   */\n  subtractDate(aDate) {\n    let unixTime = this.toUnixTime() + this.utcOffset();\n    let other = aDate.toUnixTime() + aDate.utcOffset();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Subtract the date details, taking timezones into account.\n   *\n   * @param {Time} aDate  The date to subtract\n   * @return {Duration}   The difference in duration\n   */\n  subtractDateTz(aDate) {\n    let unixTime = this.toUnixTime();\n    let other = aDate.toUnixTime();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Compares the ICAL.Time instance with another one, or a period.\n   *\n   * @param {ICAL.Time|ICAL.Period} aOther        The instance to compare with\n   * @return {Number}                             -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    if (other instanceof Period) {\n      return -1 * other.compare(this);\n    } else {\n      let a = this.toUnixTime();\n      let b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    }\n  }\n\n  /**\n   * Compares only the date part of this instance with another one.\n   *\n   * @param {Time} other                  The instance to compare with\n   * @param {Timezone} tz                 The timezone to compare in\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compareDateOnlyTz(other, tz) {\n    let a = this.convertToZone(tz);\n    let b = other.convertToZone(tz);\n    let rc = 0;\n\n    if ((rc = Time._cmp_attr(a, b, \"year\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"month\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"day\")) != 0) return rc;\n\n    return rc;\n  }\n\n  /**\n   * Convert the instance into another timezone. The returned ICAL.Time\n   * instance is always a copy.\n   *\n   * @param {Timezone} zone      The zone to convert to\n   * @return {Time}              The copy, converted to the zone\n   */\n  convertToZone(zone) {\n    let copy = this.clone();\n    let zone_equals = (this.zone.tzid == zone.tzid);\n\n    if (!this.isDate && !zone_equals) {\n      Timezone.convert_time(copy, this.zone, zone);\n    }\n\n    copy.zone = zone;\n    return copy;\n  }\n\n  /**\n   * Calculates the UTC offset of the current date/time in the timezone it is\n   * in.\n   *\n   * @return {Number}     UTC offset in seconds\n   */\n  utcOffset() {\n    if (this.zone == Timezone.localTimezone ||\n        this.zone == Timezone.utcTimezone) {\n      return 0;\n    } else {\n      return this.zone.utcOffset(this);\n    }\n  }\n\n  /**\n   * Returns an RFC 5545 compliant ical representation of this object.\n   *\n   * @return {String} ical date/date-time\n   */\n  toICALString() {\n    let string = this.toString();\n\n    if (string.length > 10) {\n      return design.icalendar.value['date-time'].toICAL(string);\n    } else {\n      return design.icalendar.value.date.toICAL(string);\n    }\n  }\n\n  /**\n   * The string representation of this date/time, in jCal form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let result = this.year + '-' +\n                 pad2(this.month) + '-' +\n                 pad2(this.day);\n\n    if (!this.isDate) {\n        result += 'T' + pad2(this.hour) + ':' +\n                  pad2(this.minute) + ':' +\n                  pad2(this.second);\n\n      if (this.zone === Timezone.utcTimezone) {\n        result += 'Z';\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts the current instance to a Javascript date\n   * @return {Date}\n   */\n  toJSDate() {\n    if (this.zone == Timezone.localTimezone) {\n      if (this.isDate) {\n        return new Date(this.year, this.month - 1, this.day);\n      } else {\n        return new Date(this.year, this.month - 1, this.day,\n                        this.hour, this.minute, this.second, 0);\n      }\n    } else {\n      return new Date(this.toUnixTime() * 1000);\n    }\n  }\n\n  _normalize() {\n    if (this._time.isDate) {\n      this._time.hour = 0;\n      this._time.minute = 0;\n      this._time.second = 0;\n    }\n    this.adjust(0, 0, 0, 0);\n\n    return this;\n  }\n\n  /**\n   * Adjust the date/time by the given offset\n   *\n   * @param {Number} aExtraDays       The extra amount of days\n   * @param {Number} aExtraHours      The extra amount of hours\n   * @param {Number} aExtraMinutes    The extra amount of minutes\n   * @param {Number} aExtraSeconds    The extra amount of seconds\n   * @param {Number=} aTime           The time to adjust, defaults to the\n   *                                    current instance.\n   */\n  adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {\n\n    let minutesOverflow, hoursOverflow,\n        daysOverflow = 0, yearsOverflow = 0;\n\n    let second, minute, hour, day;\n    let daysInMonth;\n\n    let time = aTime || this._time;\n\n    if (!time.isDate) {\n      second = time.second + aExtraSeconds;\n      time.second = second % 60;\n      minutesOverflow = trunc(second / 60);\n      if (time.second < 0) {\n        time.second += 60;\n        minutesOverflow--;\n      }\n\n      minute = time.minute + aExtraMinutes + minutesOverflow;\n      time.minute = minute % 60;\n      hoursOverflow = trunc(minute / 60);\n      if (time.minute < 0) {\n        time.minute += 60;\n        hoursOverflow--;\n      }\n\n      hour = time.hour + aExtraHours + hoursOverflow;\n\n      time.hour = hour % 24;\n      daysOverflow = trunc(hour / 24);\n      if (time.hour < 0) {\n        time.hour += 24;\n        daysOverflow--;\n      }\n    }\n\n\n    // Adjust month and year first, because we need to know what month the day\n    // is in before adjusting it.\n    if (time.month > 12) {\n      yearsOverflow = trunc((time.month - 1) / 12);\n    } else if (time.month < 1) {\n      yearsOverflow = trunc(time.month / 12) - 1;\n    }\n\n    time.year += yearsOverflow;\n    time.month -= 12 * yearsOverflow;\n\n    // Now take care of the days (and adjust month if needed)\n    day = time.day + aExtraDays + daysOverflow;\n\n    if (day > 0) {\n      for (;;) {\n        daysInMonth = Time.daysInMonth(time.month, time.year);\n        if (day <= daysInMonth) {\n          break;\n        }\n\n        time.month++;\n        if (time.month > 12) {\n          time.year++;\n          time.month = 1;\n        }\n\n        day -= daysInMonth;\n      }\n    } else {\n      while (day <= 0) {\n        if (time.month == 1) {\n          time.year--;\n          time.month = 12;\n        } else {\n          time.month--;\n        }\n\n        day += Time.daysInMonth(time.month, time.year);\n      }\n    }\n\n    time.day = day;\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance from unix time, the number of seconds since\n   * January 1st, 1970.\n   *\n   * @param {Number} seconds      The seconds to set up with\n   */\n  fromUnixTime(seconds) {\n    this.zone = Timezone.utcTimezone;\n    // We could use `fromJSDate` here, but this is about twice as fast.\n    // We could also clone `epochTime` and use `adjust` for a more\n    // ical.js-centric approach, but this is about 100 times as fast.\n    let date = new Date(seconds * 1000);\n    this.year = date.getUTCFullYear();\n    this.month = date.getUTCMonth() + 1;\n    this.day = date.getUTCDate();\n    if (this._time.isDate) {\n      this.hour = 0;\n      this.minute = 0;\n      this.second = 0;\n    } else {\n      this.hour = date.getUTCHours();\n      this.minute = date.getUTCMinutes();\n      this.second = date.getUTCSeconds();\n    }\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Converts the current instance to seconds since January 1st 1970.\n   *\n   * @return {Number}         Seconds since 1970\n   */\n  toUnixTime() {\n    if (this._cachedUnixTime !== null) {\n      return this._cachedUnixTime;\n    }\n    let offset = this.utcOffset();\n\n    // we use the offset trick to ensure\n    // that we are getting the actual UTC time\n    let ms = Date.UTC(\n      this.year,\n      this.month - 1,\n      this.day,\n      this.hour,\n      this.minute,\n      this.second - offset\n    );\n\n    // seconds\n    this._cachedUnixTime = ms / 1000;\n    return this._cachedUnixTime;\n  }\n\n  /**\n   * Converts time to into Object which can be serialized then re-created\n   * using the constructor.\n   *\n   * @example\n   * // toJSON will automatically be called\n   * var json = JSON.stringify(mytime);\n   *\n   * var deserialized = JSON.parse(json);\n   *\n   * var time = new ICAL.Time(deserialized);\n   *\n   * @return {Object}\n   */\n  toJSON() {\n    let copy = [\n      'year',\n      'month',\n      'day',\n      'hour',\n      'minute',\n      'second',\n      'isDate'\n    ];\n\n    let result = Object.create(null);\n\n    let i = 0;\n    let len = copy.length;\n    let prop;\n\n    for (; i < len; i++) {\n      prop = copy[i];\n      result[prop] = this[prop];\n    }\n\n    if (this.zone) {\n      result.timezone = this.zone.tzid;\n    }\n\n    return result;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").parserState} parserState\n * Imports the 'parserState' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst CHAR = /[^ \\t]/;\nconst VALUE_DELIMITER = ':';\nconst PARAM_DELIMITER = ';';\nconst PARAM_NAME_DELIMITER = '=';\nconst DEFAULT_VALUE_TYPE$1 = 'unknown';\nconst DEFAULT_PARAM_TYPE = 'text';\nconst RFC6868_REPLACE_MAP$1 = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n/**\n * Parses iCalendar or vCard data into a raw jCal object. Consult\n * documentation on the {@tutorial layers|layers of parsing} for more\n * details.\n *\n * @function ICAL.parse\n * @memberof ICAL\n * @variation function\n * @todo Fix the API to be more clear on the return type\n * @param {String} input      The string data to parse\n * @return {Object|Object[]}  A single jCal object, or an array thereof\n */\nfunction parse(input) {\n  let state = {};\n  let root = state.component = [];\n\n  state.stack = [root];\n\n  parse._eachLine(input, function(err, line) {\n    parse._handleContentLine(line, state);\n  });\n\n\n  // when there are still items on the stack\n  // throw a fatal error, a component was not closed\n  // correctly in that case.\n  if (state.stack.length > 1) {\n    throw new ParserError(\n      'invalid ical body. component began but did not end'\n    );\n  }\n\n  state = null;\n\n  return (root.length == 1 ? root[0] : root);\n}\n\n/**\n * Parse an iCalendar property value into the jCal for a single property\n *\n * @function ICAL.parse.property\n * @param {String} str\n *   The iCalendar property string to parse\n * @param {designSet=} designSet\n *   The design data to use for this property\n * @return {Object}\n *   The jCal Object containing the property\n */\nparse.property = function(str, designSet) {\n  let state = {\n    component: [[], []],\n    designSet: designSet || design.defaultSet\n  };\n  parse._handleContentLine(str, state);\n  return state.component[1][0];\n};\n\n/**\n * Convenience method to parse a component. You can use ICAL.parse() directly\n * instead.\n *\n * @function ICAL.parse.component\n * @see ICAL.parse(function)\n * @param {String} str    The iCalendar component string to parse\n * @return {Object}       The jCal Object containing the component\n */\nparse.component = function(str) {\n  return parse(str);\n};\n\n\n/**\n * An error that occurred during parsing.\n *\n * @param {String} message        The error message\n * @memberof ICAL.parse\n * @extends {Error}\n */\nclass ParserError extends Error {\n  name = this.constructor.name;\n}\n\n// classes & constants\nparse.ParserError = ParserError;\n\n\n/**\n * Handles a single line of iCalendar/vCard, updating the state.\n *\n * @private\n * @function ICAL.parse._handleContentLine\n * @param {String} line          The content line to process\n * @param {parserState} state    The current state of the line parsing\n */\nparse._handleContentLine = function(line, state) {\n  // break up the parts of the line\n  let valuePos = line.indexOf(VALUE_DELIMITER);\n  let paramPos = line.indexOf(PARAM_DELIMITER);\n\n  let lastParamIndex;\n  let lastValuePos;\n\n  // name of property or begin/end\n  let name;\n  let value;\n  // params is only overridden if paramPos !== -1.\n  // we can't do params = params || {} later on\n  // because it sacrifices ops.\n  let params = {};\n\n  /**\n   * Different property cases\n   *\n   *\n   * 1. RRULE:FREQ=foo\n   *    // FREQ= is not a param but the value\n   *\n   * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n   *    // ROLE= is a param because : has not happened yet\n   */\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n\n  if ((paramPos !== -1 && valuePos !== -1)) {\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n    if (paramPos > valuePos) {\n      paramPos = -1;\n    }\n  }\n\n  let parsedParams;\n  if (paramPos !== -1) {\n    name = line.slice(0, Math.max(0, paramPos)).toLowerCase();\n    parsedParams = parse._parseParameters(line.slice(Math.max(0, paramPos)), 0, state.designSet);\n    if (parsedParams[2] == -1) {\n      throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n    }\n    params = parsedParams[0];\n    // Handle parameter values with multiple entries\n    let parsedParamLength;\n    if (typeof parsedParams[1] === 'string') {\n      parsedParamLength = parsedParams[1].length;\n    } else {\n      parsedParamLength = parsedParams[1].reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.length;\n      }, 0);\n    }\n    lastParamIndex = parsedParamLength + parsedParams[2] + paramPos;\n    if ((lastValuePos =\n      line.slice(Math.max(0, lastParamIndex)).indexOf(VALUE_DELIMITER)) !== -1) {\n      value = line.slice(Math.max(0, lastParamIndex + lastValuePos + 1));\n    } else {\n      throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n    }\n  } else if (valuePos !== -1) {\n    // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n    name = line.slice(0, Math.max(0, valuePos)).toLowerCase();\n    value = line.slice(Math.max(0, valuePos + 1));\n\n    if (name === 'begin') {\n      let newComponent = [value.toLowerCase(), [], []];\n      if (state.stack.length === 1) {\n        state.component.push(newComponent);\n      } else {\n        state.component[2].push(newComponent);\n      }\n      state.stack.push(state.component);\n      state.component = newComponent;\n      if (!state.designSet) {\n        state.designSet = design.getDesignSet(state.component[0]);\n      }\n      return;\n    } else if (name === 'end') {\n      state.component = state.stack.pop();\n      return;\n    }\n    // If it is not begin/end, then this is a property with an empty value,\n    // which should be considered valid.\n  } else {\n    /**\n     * Invalid line.\n     * The rational to throw an error is we will\n     * never be certain that the rest of the file\n     * is sane and it is unlikely that we can serialize\n     * the result correctly either.\n     */\n    throw new ParserError(\n      'invalid line (no token \";\" or \":\") \"' + line + '\"'\n    );\n  }\n\n  let valueType;\n  let multiValue = false;\n  let structuredValue = false;\n  let propertyDetails;\n  let splitName;\n  let ungroupedName;\n\n  // fetch the ungrouped part of the name\n  if (state.designSet.propertyGroups && name.indexOf('.') !== -1) {\n    splitName = name.split('.');\n    params.group = splitName[0];\n    ungroupedName = splitName[1];\n  } else {\n    ungroupedName = name;\n  }\n\n  if (ungroupedName in state.designSet.property) {\n    propertyDetails = state.designSet.property[ungroupedName];\n\n    if ('multiValue' in propertyDetails) {\n      multiValue = propertyDetails.multiValue;\n    }\n\n    if ('structuredValue' in propertyDetails) {\n      structuredValue = propertyDetails.structuredValue;\n    }\n\n    if (value && 'detectType' in propertyDetails) {\n      valueType = propertyDetails.detectType(value);\n    }\n  }\n\n  // attempt to determine value\n  if (!valueType) {\n    if (!('value' in params)) {\n      if (propertyDetails) {\n        valueType = propertyDetails.defaultType;\n      } else {\n        valueType = DEFAULT_VALUE_TYPE$1;\n      }\n    } else {\n      // possible to avoid this?\n      valueType = params.value.toLowerCase();\n    }\n  }\n\n  delete params.value;\n\n  /**\n   * Note on `var result` juggling:\n   *\n   * I observed that building the array in pieces has adverse\n   * effects on performance, so where possible we inline the creation.\n   * It is a little ugly but resulted in ~2000 additional ops/sec.\n   */\n\n  let result;\n  if (multiValue && structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else if (multiValue) {\n    result = [ungroupedName, params, valueType];\n    parse._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n  } else if (structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else {\n    value = parse._parseValue(value, valueType, state.designSet, false);\n    result = [ungroupedName, params, valueType, value];\n  }\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n          !(name === 'version' && value === '4.0')) {\n    state.designSet = design.getDesignSet(\"vcard3\");\n  }\n  state.component[1].push(result);\n};\n\n/**\n * Parse a value from the raw value into the jCard/jCal value.\n *\n * @private\n * @function ICAL.parse._parseValue\n * @param {String} value          Original value\n * @param {String} type           Type of value\n * @param {Object} designSet      The design data to use for this value\n * @return {Object} varies on type\n */\nparse._parseValue = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n    return designSet.value[type].fromICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Parse parameters from a string to object.\n *\n * @function ICAL.parse._parseParameters\n * @private\n * @param {String} line               A single unfolded line\n * @param {Number} start              Position to start looking for properties\n * @param {Object} designSet          The design data to use for this property\n * @return {Array}                    Array containing key/valye pairs of parsed parameters, the\n *                                      parsed value, and the position of the last parameter found\n */\nparse._parseParameters = function(line, start, designSet) {\n  let lastParam = start;\n  let pos = 0;\n  let delim = PARAM_NAME_DELIMITER;\n  let result = {};\n  let name, lcname;\n  let value, valuePos = -1;\n  let type, multiValue, mvdelim;\n\n  // find the next '=' sign\n  // use lastParam and pos to find name\n  // check if \" is used if so get value from \"->\"\n  // then increment pos to find next ;\n\n  while ((pos !== false) &&\n         (pos = line.indexOf(delim, pos + 1)) !== -1) {\n\n    name = line.slice(lastParam + 1, pos);\n    if (name.length == 0) {\n      throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n    }\n    lcname = name.toLowerCase();\n    mvdelim = false;\n    multiValue = false;\n\n    if (lcname in designSet.param && designSet.param[lcname].valueType) {\n      type = designSet.param[lcname].valueType;\n    } else {\n      type = DEFAULT_PARAM_TYPE;\n    }\n\n    if (lcname in designSet.param) {\n      multiValue = designSet.param[lcname].multiValue;\n      if (designSet.param[lcname].multiValueSeparateDQuote) {\n        mvdelim = parse._rfc6868Escape('\"' + multiValue + '\"');\n      }\n    }\n\n    let nextChar = line[pos + 1];\n    if (nextChar === '\"') {\n      valuePos = pos + 2;\n      pos = line.indexOf('\"', valuePos);\n      if (multiValue && pos != -1) {\n          let extendedValue = true;\n          while (extendedValue) {\n            if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n              pos = line.indexOf('\"', pos + 3);\n            } else {\n              extendedValue = false;\n            }\n          }\n        }\n      if (pos === -1) {\n        throw new ParserError(\n          'invalid line (no matching double quote) \"' + line + '\"'\n        );\n      }\n      value = line.slice(valuePos, pos);\n      lastParam = line.indexOf(PARAM_DELIMITER, pos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, pos);\n      // if either no next parameter or delimeter in property value, let's stop here\n      if (lastParam === -1 || (propValuePos !== -1 && lastParam > propValuePos)) {\n        pos = false;\n      }\n    } else {\n      valuePos = pos + 1;\n\n      // move to next \";\"\n      let nextPos = line.indexOf(PARAM_DELIMITER, valuePos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, valuePos);\n      if (propValuePos !== -1 && nextPos > propValuePos) {\n        // this is a delimiter in the property value, let's stop here\n        nextPos = propValuePos;\n        pos = false;\n      } else if (nextPos === -1) {\n        // no \";\"\n        if (propValuePos === -1) {\n          nextPos = line.length;\n        } else {\n          nextPos = propValuePos;\n        }\n        pos = false;\n      } else {\n        lastParam = nextPos;\n        pos = nextPos;\n      }\n\n      value = line.slice(valuePos, nextPos);\n    }\n\n    const length_before = value.length;\n    value = parse._rfc6868Escape(value);\n    valuePos += length_before - value.length;\n    if (multiValue) {\n      let delimiter = mvdelim || multiValue;\n      value = parse._parseMultiValue(value, delimiter, type, [], null, designSet);\n    } else {\n      value = parse._parseValue(value, type, designSet);\n    }\n\n    if (multiValue && (lcname in result)) {\n      if (Array.isArray(result[lcname])) {\n        result[lcname].push(value);\n      } else {\n        result[lcname] = [\n          result[lcname],\n          value\n        ];\n      }\n    } else {\n      result[lcname] = value;\n    }\n  }\n  return [result, value, valuePos];\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @function ICAL.parse._rfc6868Escape\n * @param {String} val        The value to escape\n * @return {String}           The escaped value\n */\nparse._rfc6868Escape = function(val) {\n  return val.replace(/\\^['n^]/g, function(x) {\n    return RFC6868_REPLACE_MAP$1[x];\n  });\n};\n\n/**\n * Parse a multi value string. This function is used either for parsing\n * actual multi-value property's values, or for handling parameter values. It\n * can be used for both multi-value properties and structured value properties.\n *\n * @private\n * @function ICAL.parse._parseMultiValue\n * @param {String} buffer           The buffer containing the full value\n * @param {String} delim            The multi-value delimiter\n * @param {String} type             The value type to be parsed\n * @param {Array.<?>} result        The array to append results to, varies on value type\n * @param {String} innerMulti       The inner delimiter to split each value with\n * @param {designSet} designSet     The design data for this value\n * @return {?|Array.<?>}            Either an array of results, or the first result\n */\nparse._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n  let pos = 0;\n  let lastPos = 0;\n  let value;\n  if (delim.length === 0) {\n    return buffer;\n  }\n\n  // split each piece\n  while ((pos = unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n    value = buffer.slice(lastPos, pos);\n    if (innerMulti) {\n      value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parse._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n    lastPos = pos + delim.length;\n  }\n\n  // on the last piece take the rest of string\n  value = buffer.slice(lastPos);\n  if (innerMulti) {\n    value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n  } else {\n    value = parse._parseValue(value, type, designSet, structuredValue);\n  }\n  result.push(value);\n\n  return result.length == 1 ? result[0] : result;\n};\n\n/**\n * Process a complete buffer of iCalendar/vCard data line by line, correctly\n * unfolding content. Each line will be processed with the given callback\n *\n * @private\n * @function ICAL.parse._eachLine\n * @param {String} buffer                         The buffer to process\n * @param {function(?String, String)} callback    The callback for each line\n */\nparse._eachLine = function(buffer, callback) {\n  let len = buffer.length;\n  let lastPos = buffer.search(CHAR);\n  let pos = lastPos;\n  let line;\n  let firstChar;\n\n  let newlineOffset;\n\n  do {\n    pos = buffer.indexOf('\\n', lastPos) + 1;\n\n    if (pos > 1 && buffer[pos - 2] === '\\r') {\n      newlineOffset = 2;\n    } else {\n      newlineOffset = 1;\n    }\n\n    if (pos === 0) {\n      pos = len;\n      newlineOffset = 0;\n    }\n\n    firstChar = buffer[lastPos];\n\n    if (firstChar === ' ' || firstChar === '\\t') {\n      // add to line\n      line += buffer.slice(lastPos + 1, pos - newlineOffset);\n    } else {\n      if (line)\n        callback(null, line);\n      // push line\n      line = buffer.slice(lastPos, pos - newlineOffset);\n    }\n\n    lastPos = pos;\n  } while (pos !== len);\n\n  // extra ending line\n  line = line.trim();\n\n  if (line.length)\n    callback(null, line);\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nconst OPTIONS = [\"tzid\", \"location\", \"tznames\", \"latitude\", \"longitude\"];\n\n/**\n * Timezone representation.\n *\n * @example\n * var vcalendar;\n * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n *\n * var timezone = new ICAL.Timezone({\n *   component: timezoneComp,\n *   tzid\n * });\n *\n * @memberof ICAL\n */\nclass Timezone {\n  static _compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  }\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {Time} tt                  The time to convert\n   * @param {Timezone} from_zone       The source zone to convert from\n   * @param {Timezone} to_zone         The target zone to convert to\n   * @return {Time}                    The converted date/time object\n   */\n  static convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == Timezone.localTimezone ||\n        to_zone == Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    let utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  }\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  static fromData(aData) {\n    let tt = new Timezone();\n    return tt.fromData(aData);\n  }\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #utcTimezone = null;\n  static get utcTimezone() {\n    if (!this.#utcTimezone) {\n      this.#utcTimezone = Timezone.fromData({\n        tzid: \"UTC\"\n      });\n    }\n    return this.#utcTimezone;\n  }\n\n  /**\n   * The instance describing the local timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #localTimezone = null;\n  static get localTimezone() {\n    if (!this.#localTimezone) {\n      this.#localTimezone = Timezone.fromData({\n        tzid: \"floating\"\n      });\n    }\n    return this.#localTimezone;\n  }\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  static adjust_change(change, days, hours, minutes, seconds) {\n    return Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  }\n\n  static _minimumExpansionYear = -1;\n  static EXTRA_COVERAGE = 5;\n\n  /**\n   * Creates a new ICAL.Timezone instance, by passing in a tzid and component.\n   *\n   * @param {Component|Object} data options for class\n   * @param {String|Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n\n  /**\n   * Timezone identifier\n   * @type {String}\n   */\n  tzid = \"\";\n\n  /**\n   * Timezone location\n   * @type {String}\n   */\n  location = \"\";\n\n  /**\n   * Alternative timezone name, for the string representation\n   * @type {String}\n   */\n  tznames = \"\";\n\n  /**\n   * The primary latitude for the timezone.\n   * @type {Number}\n   */\n  latitude = 0.0;\n\n  /**\n   * The primary longitude for the timezone.\n   * @type {Number}\n   */\n  longitude = 0.0;\n\n  /**\n   * The vtimezone component for this timezone.\n   * @type {Component}\n   */\n  component = null;\n\n  /**\n   * The year this timezone has been expanded to. All timezone transition\n   * dates until this year are known and can be used for calculation\n   *\n   * @private\n   * @type {Number}\n   */\n  expandedUntilYear = 0;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltimezone\"\n   */\n  icalclass = \"icaltimezone\";\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  fromData(aData) {\n    this.expandedUntilYear = 0;\n    this.changes = [];\n\n    if (aData instanceof Component) {\n      // Either a component is passed directly\n      this.component = aData;\n    } else {\n      // Otherwise the component may be in the data object\n      if (aData && \"component\" in aData) {\n        if (typeof aData.component == \"string\") {\n          // If a string was passed, parse it as a component\n          let jCal = parse(aData.component);\n          this.component = new Component(jCal);\n        } else if (aData.component instanceof Component) {\n          // If it was a component already, then just set it\n          this.component = aData.component;\n        } else {\n          // Otherwise just null out the component\n          this.component = null;\n        }\n      }\n\n      // Copy remaining passed properties\n      for (let prop of OPTIONS) {\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        }\n      }\n    }\n\n    // If we have a component but no TZID, attempt to get it from the\n    // component's properties.\n    if (this.component instanceof Component && !this.tzid) {\n      this.tzid = this.component.getFirstPropertyValue('tzid');\n    }\n\n    return this;\n  }\n\n  /**\n   * Finds the utcOffset the given time would occur in this timezone.\n   *\n   * @param {Time} tt         The time to check for\n   * @return {Number}         utc offset in seconds\n   */\n  utcOffset(tt) {\n    if (this == Timezone.utcTimezone || this == Timezone.localTimezone) {\n      return 0;\n    }\n\n    this._ensureCoverage(tt.year);\n\n    if (!this.changes.length) {\n      return 0;\n    }\n\n    let tt_change = {\n      year: tt.year,\n      month: tt.month,\n      day: tt.day,\n      hour: tt.hour,\n      minute: tt.minute,\n      second: tt.second\n    };\n\n    let change_num = this._findNearbyChange(tt_change);\n    let change_num_to_use = -1;\n    let step = 1;\n\n    // TODO: replace with bin search?\n    for (;;) {\n      let change = clone(this.changes[change_num], true);\n      if (change.utcOffset < change.prevUtcOffset) {\n        Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n      } else {\n        Timezone.adjust_change(change, 0, 0, 0,\n                                        change.prevUtcOffset);\n      }\n\n      let cmp = Timezone._compare_change_fn(tt_change, change);\n\n      if (cmp >= 0) {\n        change_num_to_use = change_num;\n      } else {\n        step = -1;\n      }\n\n      if (step == -1 && change_num_to_use != -1) {\n        break;\n      }\n\n      change_num += step;\n\n      if (change_num < 0) {\n        return 0;\n      }\n\n      if (change_num >= this.changes.length) {\n        break;\n      }\n    }\n\n    let zone_change = this.changes[change_num_to_use];\n    let utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n    if (utcOffset_change < 0 && change_num_to_use > 0) {\n      let tmp_change = clone(zone_change, true);\n      Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);\n\n      if (Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n        let prev_zone_change = this.changes[change_num_to_use - 1];\n\n        let want_daylight = false; // TODO\n\n        if (zone_change.is_daylight != want_daylight &&\n            prev_zone_change.is_daylight == want_daylight) {\n          zone_change = prev_zone_change;\n        }\n      }\n    }\n\n    // TODO return is_daylight?\n    return zone_change.utcOffset;\n  }\n\n  _findNearbyChange(change) {\n    // find the closest match\n    let idx = binsearchInsert(\n      this.changes,\n      change,\n      Timezone._compare_change_fn\n    );\n\n    if (idx >= this.changes.length) {\n      return this.changes.length - 1;\n    }\n\n    return idx;\n  }\n\n  _ensureCoverage(aYear) {\n    if (Timezone._minimumExpansionYear == -1) {\n      let today = Time.now();\n      Timezone._minimumExpansionYear = today.year;\n    }\n\n    let changesEndYear = aYear;\n    if (changesEndYear < Timezone._minimumExpansionYear) {\n      changesEndYear = Timezone._minimumExpansionYear;\n    }\n\n    changesEndYear += Timezone.EXTRA_COVERAGE;\n\n    if (!this.changes.length || this.expandedUntilYear < aYear) {\n      let subcomps = this.component.getAllSubcomponents();\n      let compLen = subcomps.length;\n      let compIdx = 0;\n\n      for (; compIdx < compLen; compIdx++) {\n        this._expandComponent(\n          subcomps[compIdx], changesEndYear, this.changes\n        );\n      }\n\n      this.changes.sort(Timezone._compare_change_fn);\n      this.expandedUntilYear = changesEndYear;\n    }\n  }\n\n  _expandComponent(aComponent, aYear, changes) {\n    if (!aComponent.hasProperty(\"dtstart\") ||\n        !aComponent.hasProperty(\"tzoffsetto\") ||\n        !aComponent.hasProperty(\"tzoffsetfrom\")) {\n      return null;\n    }\n\n    let dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n    let change;\n\n    function convert_tzoffset(offset) {\n      return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n    }\n\n    function init_changes() {\n      let changebase = {};\n      changebase.is_daylight = (aComponent.name == \"daylight\");\n      changebase.utcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n      );\n\n      changebase.prevUtcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n      );\n\n      return changebase;\n    }\n\n    if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n      change = init_changes();\n      change.year = dtstart.year;\n      change.month = dtstart.month;\n      change.day = dtstart.day;\n      change.hour = dtstart.hour;\n      change.minute = dtstart.minute;\n      change.second = dtstart.second;\n\n      Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n      changes.push(change);\n    } else {\n      let props = aComponent.getAllProperties(\"rdate\");\n      for (let rdate of props) {\n        let time = rdate.getFirstValue();\n        change = init_changes();\n\n        change.year = time.year;\n        change.month = time.month;\n        change.day = time.day;\n\n        if (time.isDate) {\n          change.hour = dtstart.hour;\n          change.minute = dtstart.minute;\n          change.second = dtstart.second;\n\n          if (dtstart.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        } else {\n          change.hour = time.hour;\n          change.minute = time.minute;\n          change.second = time.second;\n\n          if (time.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        }\n\n        changes.push(change);\n      }\n\n      let rrule = aComponent.getFirstProperty(\"rrule\");\n\n      if (rrule) {\n        rrule = rrule.getFirstValue();\n        change = init_changes();\n\n        if (rrule.until && rrule.until.zone == Timezone.utcTimezone) {\n          rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n          rrule.until.zone = Timezone.localTimezone;\n        }\n\n        let iterator = rrule.iterator(dtstart);\n\n        let occ;\n        while ((occ = iterator.next())) {\n          change = init_changes();\n          if (occ.year > aYear || !occ) {\n            break;\n          }\n\n          change.year = occ.year;\n          change.month = occ.month;\n          change.day = occ.day;\n          change.hour = occ.hour;\n          change.minute = occ.minute;\n          change.second = occ.second;\n          change.isDate = occ.isDate;\n\n          Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          changes.push(change);\n        }\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * The string representation of this timezone.\n   * @return {String}\n   */\n  toString() {\n    return (this.tznames ? this.tznames : this.tzid);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nlet zones = null;\n\n/**\n * @classdesc\n * Singleton class to contain timezones.  Right now it is all manual registry in\n * the future we may use this class to download timezone information or handle\n * loading pre-expanded timezones.\n *\n * @exports module:ICAL.TimezoneService\n * @memberof ICAL\n */\nconst TimezoneService = {\n  get count() {\n    if (zones === null) {\n      return 0;\n    }\n\n    return Object.keys(zones).length;\n  },\n\n  reset: function() {\n    zones = Object.create(null);\n    let utc = Timezone.utcTimezone;\n\n    zones.Z = utc;\n    zones.UTC = utc;\n    zones.GMT = utc;\n  },\n  _hard_reset: function() {\n    zones = null;\n  },\n\n  /**\n   * Checks if timezone id has been registered.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Boolean}        False, when not present\n   */\n  has: function(tzid) {\n    if (zones === null) {\n      return false;\n    }\n\n    return !!zones[tzid];\n  },\n\n  /**\n   * Returns a timezone by its tzid if present.\n   *\n   * @param {String} tzid               Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Timezone | undefined}     The timezone, or undefined if not found\n   */\n  get: function(tzid) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    return zones[tzid];\n  },\n\n  /**\n   * Registers a timezone object or component.\n   *\n   * @param {Component|Timezone} timezone\n   *        The initialized zone or vtimezone.\n   *\n   * @param {String=} name\n   *        The name of the timezone. Defaults to the component's TZID if not\n   *        passed.\n   */\n  register: function(timezone, name) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    // This avoids a breaking change by the change of argument order\n    // TODO remove in v3\n    if (typeof timezone === \"string\" && name instanceof Timezone) {\n      [timezone, name] = [name, timezone];\n    }\n\n    if (!name) {\n      if (timezone instanceof Timezone) {\n        name = timezone.tzid;\n      } else {\n        if (timezone.name === 'vtimezone') {\n          timezone = new Timezone(timezone);\n          name = timezone.tzid;\n        }\n      }\n    }\n\n    if (!name) {\n      throw new TypeError(\"Neither a timezone nor a name was passed\");\n    }\n\n    if (timezone instanceof Timezone) {\n      zones[name] = timezone;\n    } else {\n      throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n    }\n  },\n\n  /**\n   * Removes a timezone by its tzid from the list.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {?Timezone}      The removed timezone, or null if not registered\n   */\n  remove: function(tzid) {\n    if (zones === null) {\n      return null;\n    }\n\n    return (delete zones[tzid]);\n  }\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Helper functions used in various places within ical.js\n * @module ICAL.helpers\n */\n\n/**\n * Compiles a list of all referenced TZIDs in all subcomponents and\n * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n * are referenced by a component, but a VTIMEZONE does not exist,\n * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n *\n * @param {Component} vcal     The top-level VCALENDAR component.\n * @return {Component}         The ICAL.Component that was passed in.\n */\nfunction updateTimezones(vcal) {\n  let allsubs, properties, vtimezones, reqTzid, i;\n\n  if (!vcal || vcal.name !== \"vcalendar\") {\n    //not a top-level vcalendar component\n    return vcal;\n  }\n\n  //Store vtimezone subcomponents in an object reference by tzid.\n  //Store properties from everything else in another array\n  allsubs = vcal.getAllSubcomponents();\n  properties = [];\n  vtimezones = {};\n  for (i = 0; i < allsubs.length; i++) {\n    if (allsubs[i].name === \"vtimezone\") {\n      let tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n      vtimezones[tzid] = allsubs[i];\n    } else {\n      properties = properties.concat(allsubs[i].getAllProperties());\n    }\n  }\n\n  //create an object with one entry for each required tz\n  reqTzid = {};\n  for (i = 0; i < properties.length; i++) {\n    let tzid = properties[i].getParameter(\"tzid\");\n    if (tzid) {\n      reqTzid[tzid] = true;\n    }\n  }\n\n  //delete any vtimezones that are not on the reqTzid list.\n  for (let [tzid, comp] of Object.entries(vtimezones)) {\n    if (!reqTzid[tzid]) {\n      vcal.removeSubcomponent(comp);\n    }\n  }\n\n  //create any missing, but registered timezones\n  for (let tzid of Object.keys(reqTzid)) {\n    if (!vtimezones[tzid] && TimezoneService.has(tzid)) {\n      vcal.addSubcomponent(TimezoneService.get(tzid).component);\n    }\n  }\n\n  return vcal;\n}\n\n/**\n * Checks if the given type is of the number type and also NaN.\n *\n * @param {Number} number     The number to check\n * @return {Boolean}          True, if the number is strictly NaN\n */\nfunction isStrictlyNaN(number) {\n  return typeof(number) === 'number' && isNaN(number);\n}\n\n/**\n * Parses a string value that is expected to be an integer, when the valid is\n * not an integer throws a decoration error.\n *\n * @param {String} string     Raw string input\n * @return {Number}           Parsed integer\n */\nfunction strictParseInt(string) {\n  let result = parseInt(string, 10);\n\n  if (isStrictlyNaN(result)) {\n    throw new Error(\n      'Could not extract integer from \"' + string + '\"'\n    );\n  }\n\n  return result;\n}\n\n/**\n * Creates or returns a class instance of a given type with the initialization\n * data if the data is not already an instance of the given type.\n *\n * @example\n * var time = new ICAL.Time(...);\n * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n *\n * (result instanceof ICAL.Time)\n * // => true\n *\n * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n * (result isntanceof ICAL.Time)\n * // => true\n *\n *\n * @param {Object} data       object initialization data\n * @param {Object} type       object type (like ICAL.Time)\n * @return {?}                An instance of the found type.\n */\nfunction formatClassType(data, type) {\n  if (typeof(data) === 'undefined') {\n    return undefined;\n  }\n\n  if (data instanceof type) {\n    return data;\n  }\n  return new type(data);\n}\n\n/**\n * Identical to indexOf but will only match values when they are not preceded\n * by a backslash character.\n *\n * @param {String} buffer         String to search\n * @param {String} search         Value to look for\n * @param {Number} pos            Start position\n * @return {Number}               The position, or -1 if not found\n */\nfunction unescapedIndexOf(buffer, search, pos) {\n  while ((pos = buffer.indexOf(search, pos)) !== -1) {\n    if (pos > 0 && buffer[pos - 1] === '\\\\') {\n      pos += 1;\n    } else {\n      return pos;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the index for insertion using binary search.\n *\n * @param {Array} list            The list to search\n * @param {?} seekVal             The value to insert\n * @param {function(?,?)} cmpfunc The comparison func, that can\n *                                  compare two seekVals\n * @return {Number}               The insert position\n */\nfunction binsearchInsert(list, seekVal, cmpfunc) {\n  if (!list.length)\n    return 0;\n\n  let low = 0, high = list.length - 1,\n      mid, cmpval;\n\n  while (low <= high) {\n    mid = low + Math.floor((high - low) / 2);\n    cmpval = cmpfunc(seekVal, list[mid]);\n\n    if (cmpval < 0)\n      high = mid - 1;\n    else if (cmpval > 0)\n      low = mid + 1;\n    else\n      break;\n  }\n\n  if (cmpval < 0)\n    return mid; // insertion is displacing, so use mid outright.\n  else if (cmpval > 0)\n    return mid + 1;\n  else\n    return mid;\n}\n\n/**\n * Clone the passed object or primitive. By default a shallow clone will be\n * executed.\n *\n * @param {*} aSrc            The thing to clone\n * @param {Boolean=} aDeep    If true, a deep clone will be performed\n * @return {*}                The copy of the thing\n */\nfunction clone(aSrc, aDeep) {\n  if (!aSrc || typeof aSrc != \"object\") {\n    return aSrc;\n  } else if (aSrc instanceof Date) {\n    return new Date(aSrc.getTime());\n  } else if (\"clone\" in aSrc) {\n    return aSrc.clone();\n  } else if (Array.isArray(aSrc)) {\n    let arr = [];\n    for (let i = 0; i < aSrc.length; i++) {\n      arr.push(aDeep ? clone(aSrc[i], true) : aSrc[i]);\n    }\n    return arr;\n  } else {\n    let obj = {};\n    for (let [name, value] of Object.entries(aSrc)) {\n      if (aDeep) {\n        obj[name] = clone(value, true);\n      } else {\n        obj[name] = value;\n      }\n    }\n    return obj;\n  }\n}\n\n/**\n * Performs iCalendar line folding. A line ending character is inserted and\n * the next line begins with a whitespace.\n *\n * @example\n * SUMMARY:This line will be fold\n *  ed right in the middle of a word.\n *\n * @param {String} aLine      The line to fold\n * @return {String}           The folded line\n */\nfunction foldline(aLine) {\n  let result = \"\";\n  let line = aLine || \"\", pos = 0, line_length = 0;\n  //pos counts position in line for the UTF-16 presentation\n  //line_length counts the bytes for the UTF-8 presentation\n  while (line.length) {\n    let cp = line.codePointAt(pos);\n    if (cp < 128) ++line_length;\n    else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n    else if (cp < 65536) line_length += 3;\n    else line_length += 4; //cp is less than 1114112\n    if (line_length < ICALmodule.foldLength + 1)\n      pos += cp > 65535 ? 2 : 1;\n    else {\n      result += ICALmodule.newLineChar + \" \" + line.slice(0, Math.max(0, pos));\n      line = line.slice(Math.max(0, pos));\n      pos = line_length = 0;\n    }\n  }\n  return result.slice(ICALmodule.newLineChar.length + 1);\n}\n\n/**\n * Pads the given string or number with zeros so it will have at least two\n * characters.\n *\n * @param {String|Number} data    The string or number to pad\n * @return {String}               The number padded as a string\n */\nfunction pad2(data) {\n  if (typeof(data) !== 'string') {\n    // handle fractions.\n    if (typeof(data) === 'number') {\n      data = parseInt(data);\n    }\n    data = String(data);\n  }\n\n  let len = data.length;\n\n  switch (len) {\n    case 0:\n      return '00';\n    case 1:\n      return '0' + data;\n    default:\n      return data;\n  }\n}\n\n/**\n * Truncates the given number, correctly handling negative numbers.\n *\n * @param {Number} number     The number to truncate\n * @return {Number}           The truncated number\n */\nfunction trunc(number) {\n  return (number < 0 ? Math.ceil(number) : Math.floor(number));\n}\n\n/**\n * Poor-man's cross-browser object extension. Doesn't support all the\n * features, but enough for our usage. Note that the target's properties are\n * not overwritten with the source properties.\n *\n * @example\n * var child = ICAL.helpers.extend(parent, {\n *   \"bar\": 123\n * });\n *\n * @param {Object} source     The object to extend\n * @param {Object} target     The object to extend with\n * @return {Object}           Returns the target.\n */\nfunction extend(source, target) {\n  for (let key in source) {\n    let descr = Object.getOwnPropertyDescriptor(source, key);\n    if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n      Object.defineProperty(target, key, descr);\n    }\n  }\n  return target;\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  binsearchInsert: binsearchInsert,\n  clone: clone,\n  extend: extend,\n  foldline: foldline,\n  formatClassType: formatClassType,\n  isStrictlyNaN: isStrictlyNaN,\n  pad2: pad2,\n  strictParseInt: strictParseInt,\n  trunc: trunc,\n  unescapedIndexOf: unescapedIndexOf,\n  updateTimezones: updateTimezones\n});\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This class represents the \"utc-offset\" value type, with various calculation and manipulation\n * methods.\n *\n * @memberof ICAL\n */\nclass UtcOffset {\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {Duration}         The created utc-offset instance\n   */\n  static fromString(aString) {\n    // -05:00\n    let options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = strictParseInt(aString.slice(1, 3));\n    options.minutes = strictParseInt(aString.slice(4, 6));\n\n    return new UtcOffset(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  static fromSeconds(aSeconds) {\n    let instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  }\n\n  /**\n   * Creates a new ICAL.UtcOffset instance.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  constructor(aData) {\n    this.fromData(aData);\n  }\n\n  /**\n   * The hours in the utc-offset\n   * @type {Number}\n   */\n  hours = 0;\n\n  /**\n   * The minutes in the utc-offset\n   * @type {Number}\n   */\n  minutes = 0;\n\n  /**\n   * The sign of the utc offset, 1 for positive offset, -1 for negative\n   * offsets.\n   * @type {Number}\n   */\n  factor = 1;\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"utc-offset\"\n   */\n  icaltype = \"utc-offset\";\n\n  /**\n   * Returns a clone of the utc offset object.\n   *\n   * @return {UtcOffset}     The cloned object\n   */\n  clone() {\n    return UtcOffset.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  fromData(aData) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n        this[key] = value;\n      }\n    }\n    this._normalize();\n  }\n\n  /**\n   * Sets up the current instance from the given seconds value. The seconds\n   * value is truncated to the minute. Offsets are wrapped when the world\n   * ends, the hour after UTC+14:00 is UTC-12:00.\n   *\n   * @param {Number} aSeconds         The seconds to convert into an offset\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.factor = aSeconds < 0 ? -1 : 1;\n    this.hours = trunc(secs / 3600);\n\n    secs -= (this.hours * 3600);\n    this.minutes = trunc(secs / 60);\n    return this;\n  }\n\n  /**\n   * Convert the current offset to a value in seconds\n   *\n   * @return {Number}                 The offset in seconds\n   */\n  toSeconds() {\n    return this.factor * (60 * this.minutes + 3600 * this.hours);\n  }\n\n  /**\n   * Compare this utc offset with another one.\n   *\n   * @param {UtcOffset} other             The other offset to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    let a = this.toSeconds();\n    let b = other.toSeconds();\n    return (a > b) - (b > a);\n  }\n\n  _normalize() {\n    // Range: 97200 seconds (with 1 hour inbetween)\n    let secs = this.toSeconds();\n    let factor = this.factor;\n    while (secs < -43200) { // = UTC-12:00\n      secs += 97200;\n    }\n    while (secs > 50400) { // = UTC+14:00\n      secs -= 97200;\n    }\n\n    this.fromSeconds(secs);\n\n    // Avoid changing the factor when on zero seconds\n    if (secs == 0) {\n      this.factor = factor;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this utc-offset.\n   * @return {String}\n   */\n  toICALString() {\n    return design.icalendar.value['utc-offset'].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this utc-offset.\n   * @return {String}\n   */\n  toString() {\n    return (this.factor == 1 ? \"+\" : \"-\") + pad2(this.hours) + ':' + pad2(this.minutes);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Describes a vCard time, which has slight differences to the ICAL.Time.\n * Properties can be null if not specified, for example for dates with\n * reduced accuracy or truncation.\n *\n * Note that currently not all methods are correctly re-implemented for\n * VCardTime. For example, comparison will have undefined results when some\n * members are null.\n *\n * Also, normalization is not yet implemented for this class!\n *\n * @memberof ICAL\n * @extends {ICAL.Time}\n */\nclass VCardTime extends Time {\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {VCardTime}        The date/time instance\n   */\n  static fromDateAndOrTimeString(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? strictParseInt(v.slice(s, s + e)) : null;\n    }\n    let parts = aValue.split('T');\n    let dt = parts[0], tmz = parts[1];\n    let splitzone = tmz ? design.vcard.value.time._splitZone(tmz) : [];\n    let zone = splitzone[0], tm = splitzone[1];\n\n    let dtlen = dt ? dt.length : 0;\n    let tmlen = tm ? tm.length : 0;\n\n    let hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    let hasDashTime = tm && tm[0] == '-';\n\n    let o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new VCardTime(o, zone, aIcalType);\n  }\n\n\n  /**\n   * Creates a new ICAL.VCardTime instance.\n   *\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {Timezone|UtcOffset} zone               The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  constructor(data, zone, icaltype) {\n    super(data, zone);\n    this.icaltype = icaltype || \"date-and-or-time\";\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"vcardtime\"\n   */\n  icalclass = \"vcardtime\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @type {String}\n   * @default \"date-and-or-time\"\n   */\n  icaltype = \"date-and-or-time\";\n\n  /**\n   * Returns a clone of the vcard date/time object.\n   *\n   * @return {VCardTime}     The cloned object\n   */\n  clone() {\n    return new VCardTime(this._time, this.zone, this.icaltype);\n  }\n\n  _normalize() {\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  utcOffset() {\n    if (this.zone instanceof UtcOffset) {\n      return this.zone.toSeconds();\n    } else {\n      return Time.prototype.utcOffset.apply(this, arguments);\n    }\n  }\n\n  /**\n   * Returns an RFC 6350 compliant representation of this object.\n   *\n   * @return {String}         vcard date/time string\n   */\n  toICALString() {\n    return design.vcard.value[this.icaltype].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this date/time, in jCard form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let y = this.year, m = this.month, d = this.day;\n    let h = this.hour, mm = this.minute, s = this.second;\n\n    let hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n    let hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n    let datepart = (hasYear ? pad2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                   (hasMonth ? pad2(m) : '') +\n                   (hasDay ? '-' + pad2(d) : '');\n    let timepart = (hasHour ? pad2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                   (hasMinute ? pad2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                   (hasMinute && hasSecond ? ':' : '') +\n                   (hasSecond ? pad2(s) : '');\n\n    let zone;\n    if (this.zone === Timezone.utcTimezone) {\n      zone = 'Z';\n    } else if (this.zone instanceof UtcOffset) {\n      zone = this.zone.toString();\n    } else if (this.zone === Timezone.localTimezone) {\n      zone = '';\n    } else if (this.zone instanceof Timezone) {\n      let offset = UtcOffset.fromSeconds(this.zone.utcOffset(this));\n      zone = offset.toString();\n    } else {\n      zone = '';\n    }\n\n    switch (this.icaltype) {\n      case \"time\":\n        return timepart + zone;\n      case \"date-and-or-time\":\n      case \"date-time\":\n        return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n      case \"date\":\n        return datepart;\n    }\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n */\n\n/**\n * An iterator for a single recurrence rule. This class usually doesn't have to be instanciated\n * directly, the convenience method {@link ICAL.Recur#iterator} can be used.\n *\n * @memberof ICAL\n */\nclass RecurIterator {\n  static _indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  static _expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n\n  static UNKNOWN = 0;\n  static CONTRACT = 1;\n  static EXPAND = 2;\n  static ILLEGAL = 3;\n\n  /**\n   * Creates a new ICAL.RecurIterator instance. The options object may contain additional members\n   * when resuming iteration from a previous run.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  constructor(options) {\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is finished.\n   * @type {Boolean}\n   */\n  completed = false;\n\n  /**\n   * The rule that is being iterated\n   * @type {Recur}\n   */\n  rule = null;\n\n  /**\n   * The start date of the event being iterated.\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * The last occurrence that was returned from the\n   * {@link RecurIterator#next} method.\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * The sequence number from the occurrence\n   * @type {Number}\n   */\n  occurrence_number = 0;\n\n  /**\n   * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n   * @type {Object}\n   * @private\n   */\n  by_indices = null;\n\n  /**\n   * If true, the iterator has already been initialized\n   * @type {Boolean}\n   * @private\n   */\n  initialized = false;\n\n  /**\n   * The initializd by-data.\n   * @type {Object}\n   * @private\n   */\n  by_data = null;\n\n  /**\n   * The expanded yeardays\n   * @type {Array}\n   * @private\n   */\n  days = null;\n\n  /**\n   * The index in the {@link ICAL.RecurIterator#days} array.\n   * @type {Number}\n   * @private\n   */\n  days_index = 0;\n\n  /**\n   * Initialize the recurrence iterator from the passed data object. This\n   * method is usually not called directly, you can initialize the iterator\n   * through the constructor.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  fromData(options) {\n    this.rule = formatClassType(options.rule, Recur);\n\n    if (!this.rule) {\n      throw new Error('iterator requires a (ICAL.Recur) rule');\n    }\n\n    this.dtstart = formatClassType(options.dtstart, Time);\n\n    if (!this.dtstart) {\n      throw new Error('iterator requires a (ICAL.Time) dtstart');\n    }\n\n    if (options.by_data) {\n      this.by_data = options.by_data;\n    } else {\n      this.by_data = clone(this.rule.parts, true);\n    }\n\n    if (options.occurrence_number)\n      this.occurrence_number = options.occurrence_number;\n\n    this.days = options.days || [];\n    if (options.last) {\n      this.last = formatClassType(options.last, Time);\n    }\n\n    this.by_indices = options.by_indices;\n\n    if (!this.by_indices) {\n      this.by_indices = {\n        \"BYSECOND\": 0,\n        \"BYMINUTE\": 0,\n        \"BYHOUR\": 0,\n        \"BYDAY\": 0,\n        \"BYMONTH\": 0,\n        \"BYWEEKNO\": 0,\n        \"BYMONTHDAY\": 0\n      };\n    }\n\n    this.initialized = options.initialized || false;\n\n    if (!this.initialized) {\n      try {\n        this.init();\n      } catch (e) {\n        if (e instanceof InvalidRecurrenceRuleError) {\n          // Init may error if there are no possible recurrence instances from\n          // the rule, but we don't want to bubble this error up. Instead, we\n          // create an empty iterator.\n          this.completed = true;\n        } else {\n          // Propagate other errors to consumers.\n          throw e;\n        }\n      }\n    }\n  }\n\n  /**\n   * Initialize the iterator\n   * @private\n   */\n  init() {\n    this.initialized = true;\n    this.last = this.dtstart.clone();\n    let parts = this.by_data;\n\n    if (\"BYDAY\" in parts) {\n      // libical does this earlier when the rule is loaded, but we postpone to\n      // now so we can preserve the original order.\n      this.sort_byday_rules(parts.BYDAY);\n    }\n\n    // The BYYEARDAY may only appear with BYDAY\n    if (\"BYYEARDAY\" in parts) {\n      if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n          \"BYMONTHDAY\" in parts) {\n        throw new Error(\"Invalid BYYEARDAY rule\");\n      }\n    }\n\n    // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n    if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n      throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n    }\n\n    // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n    // BYWEEKNO may appear.\n    if (this.rule.freq == \"MONTHLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n      throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n    }\n\n    // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n    // BYYEARDAY may appear.\n    if (this.rule.freq == \"WEEKLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n      throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n    }\n\n    // BYYEARDAY may only appear in YEARLY rules\n    if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n      throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n    }\n\n    this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n    this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n    this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n    this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n    this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n    if (this.rule.freq == \"WEEKLY\") {\n      if (\"BYDAY\" in parts) {\n        let [, dow] = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n        let wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n        if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n          // Initial time is after first day of BYDAY data\n          this.last.day += wkdy;\n        }\n      } else {\n        let dayName = Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n        parts.BYDAY = [dayName];\n      }\n    }\n\n    if (this.rule.freq == \"YEARLY\") {\n      // Some yearly recurrence rules may be specific enough to not actually\n      // occur on a yearly basis, e.g. the 29th day of February or the fifth\n      // Monday of a given month. The standard isn't clear on the intended\n      // behavior in these cases, but `libical` at least will iterate until it\n      // finds a matching year.\n      // CAREFUL: Some rules may specify an occurrence that can never happen,\n      // e.g. the first Monday of April so long as it falls on the 15th\n      // through the 21st. Detecting these is non-trivial, so ensure that we\n      // stop iterating at some point.\n      const untilYear = this.rule.until ? this.rule.until.year : 20000;\n      while (this.last.year <= untilYear) {\n        this.expand_year_days(this.last.year);\n        if (this.days.length > 0) {\n          break;\n        }\n        this.increment_year(this.rule.interval);\n      }\n\n      if (this.days.length == 0) {\n        throw new InvalidRecurrenceRuleError();\n      }\n\n      this._nextByYearDay();\n    }\n\n    if (this.rule.freq == \"MONTHLY\") {\n      if (this.has_by_data(\"BYDAY\")) {\n        let tempLast = null;\n        let initLast = this.last.clone();\n        let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (let bydow of this.by_data.BYDAY) {\n          this.last = initLast.clone();\n          let [pos, dow] = this.ruleDayOfWeek(bydow);\n          let dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        // Change the day value so that normalisation won't change the month.\n        this.last.day = 1;\n\n        // Get a sorted list of days in the starting month that match the rule.\n        let normalized = this.normalizeByMonthDayRules(\n          this.last.year,\n          this.last.month,\n          this.rule.parts.BYMONTHDAY\n        ).filter(d => d >= this.last.day);\n\n        if (normalized.length) {\n          // There's at least one valid day, use it.\n          this.last.day = normalized[0];\n          this.by_data.BYMONTHDAY = normalized;\n        } else {\n          // There's no occurrence in this month, find the next valid month.\n          // The longest possible sequence of skipped months is February-April-June,\n          // so we might need to call next_month up to three times.\n          if (!this.next_month() && !this.next_month() && !this.next_month()) {\n            throw new Error(\"No possible occurrences\");\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Retrieve the next occurrence from the iterator.\n   * @return {Time}\n   */\n  next(again = false) {\n    let before = (this.last ? this.last.clone() : null);\n\n    if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n        (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n      this.completed = true;\n    }\n\n    if (this.completed) {\n      return null;\n    }\n\n    if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n      // First of all, give the instance that was initialized\n      this.occurrence_number++;\n      return this.last;\n    }\n\n    let valid;\n    do {\n      valid = 1;\n\n      switch (this.rule.freq) {\n      case \"SECONDLY\":\n        this.next_second();\n        break;\n      case \"MINUTELY\":\n        this.next_minute();\n        break;\n      case \"HOURLY\":\n        this.next_hour();\n        break;\n      case \"DAILY\":\n        this.next_day();\n        break;\n      case \"WEEKLY\":\n        this.next_week();\n        break;\n      case \"MONTHLY\":\n        valid = this.next_month();\n        break;\n      case \"YEARLY\":\n        this.next_year();\n        break;\n\n      default:\n        return null;\n      }\n    } while (!this.check_contracting_rules() ||\n             this.last.compare(this.dtstart) < 0 ||\n             !valid);\n\n    if (this.last.compare(before) == 0) {\n      if (again) {\n        throw new Error(\"Same occurrence found twice, protecting you from death by recursion\");\n      }\n      this.next(true);\n    }\n\n    if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n      this.completed = true;\n      return null;\n    } else {\n      this.occurrence_number++;\n      return this.last;\n    }\n  }\n\n  next_second() {\n    return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n  }\n\n  increment_second(inc) {\n    return this.increment_generic(inc, \"second\", 60, \"minute\");\n  }\n\n  next_minute() {\n    return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                             \"minute\", \"hour\", \"next_second\");\n  }\n\n  increment_minute(inc) {\n    return this.increment_generic(inc, \"minute\", 60, \"hour\");\n  }\n\n  next_hour() {\n    return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                             \"monthday\", \"next_minute\");\n  }\n\n  increment_hour(inc) {\n    this.increment_generic(inc, \"hour\", 24, \"monthday\");\n  }\n\n  next_day() {\n    let this_freq = (this.rule.freq == \"DAILY\");\n\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (this_freq) {\n      this.increment_monthday(this.rule.interval);\n    } else {\n      this.increment_monthday(1);\n    }\n\n    return 0;\n  }\n\n  next_week() {\n    let end_of_data = 0;\n\n    if (this.next_weekday_by_week() == 0) {\n      return end_of_data;\n    }\n\n    if (this.has_by_data(\"BYWEEKNO\")) {\n      this.by_indices.BYWEEKNO++;\n\n      if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n        this.by_indices.BYWEEKNO = 0;\n        end_of_data = 1;\n      }\n\n      // HACK should be first month of the year\n      this.last.month = 1;\n      this.last.day = 1;\n\n      let week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n      this.last.day += 7 * week_no;\n\n      if (end_of_data) {\n        this.increment_year(1);\n      }\n    } else {\n      // Jump to the next week\n      this.increment_monthday(7 * this.rule.interval);\n    }\n\n    return end_of_data;\n  }\n\n  /**\n   * Normalize each by day rule for a given year/month.\n   * Takes into account ordering and negative rules\n   *\n   * @private\n   * @param {Number} year         Current year.\n   * @param {Number} month        Current month.\n   * @param {Array}  rules        Array of rules.\n   *\n   * @return {Array} sorted and normalized rules.\n   *                 Negative rules will be expanded to their\n   *                 correct positive values for easier processing.\n   */\n  normalizeByMonthDayRules(year, month, rules) {\n    let daysInMonth = Time.daysInMonth(month, year);\n\n    // XXX: This is probably bad for performance to allocate\n    //      a new array for each month we scan, if possible\n    //      we should try to optimize this...\n    let newRules = [];\n\n    let ruleIdx = 0;\n    let len = rules.length;\n    let rule;\n\n    for (; ruleIdx < len; ruleIdx++) {\n      rule = parseInt(rules[ruleIdx], 10);\n      if (isNaN(rule)) {\n        throw new Error('Invalid BYMONTHDAY value');\n      }\n\n      // if this rule falls outside of given\n      // month discard it.\n      if (Math.abs(rule) > daysInMonth) {\n        continue;\n      }\n\n      // negative case\n      if (rule < 0) {\n        // we add (not subtract it is a negative number)\n        // one from the rule because 1 === last day of month\n        rule = daysInMonth + (rule + 1);\n      } else if (rule === 0) {\n        // skip zero: it is invalid.\n        continue;\n      }\n\n      // only add unique items...\n      if (newRules.indexOf(rule) === -1) {\n        newRules.push(rule);\n      }\n\n    }\n\n    // unique and sort\n    return newRules.sort(function(a, b) { return a - b; });\n  }\n\n  /**\n   * NOTES:\n   * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n   * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n   * both conditions match a given date (this.last.day) iteration stops.\n   *\n   * @private\n   * @param {Boolean=} isInit     When given true will not increment the\n   *                                current day (this.last).\n   */\n  _byDayAndMonthDay(isInit) {\n    let byMonthDay; // setup in initMonth\n    let byDay = this.by_data.BYDAY;\n\n    let date;\n    let dateIdx = 0;\n    let dateLen; // setup in initMonth\n    let dayLen = byDay.length;\n\n    // we are not valid by default\n    let dataIsValid = 0;\n\n    let daysInMonth;\n    let self = this;\n    // we need a copy of this, because a DateTime gets normalized\n    // automatically if the day is out of range. At some points we\n    // set the last day to 0 to start counting.\n    let lastDay = this.last.day;\n\n    function initMonth() {\n      daysInMonth = Time.daysInMonth(\n        self.last.month, self.last.year\n      );\n\n      byMonthDay = self.normalizeByMonthDayRules(\n        self.last.year,\n        self.last.month,\n        self.by_data.BYMONTHDAY\n      );\n\n      dateLen = byMonthDay.length;\n\n      // For the case of more than one occurrence in one month\n      // we have to be sure to start searching after the last\n      // found date or at the last BYMONTHDAY, unless we are\n      // initializing the iterator because in this case we have\n      // to consider the last found date too.\n      while (byMonthDay[dateIdx] <= lastDay &&\n             !(isInit && byMonthDay[dateIdx] == lastDay) &&\n             dateIdx < dateLen - 1) {\n        dateIdx++;\n      }\n    }\n\n    function nextMonth() {\n      // since the day is incremented at the start\n      // of the loop below, we need to start at 0\n      lastDay = 0;\n      self.increment_month();\n      dateIdx = 0;\n      initMonth();\n    }\n\n    initMonth();\n\n    // should come after initMonth\n    if (isInit) {\n      lastDay -= 1;\n    }\n\n    // Use a counter to avoid an infinite loop with malformed rules.\n    // Stop checking after 4 years so we consider also a leap year.\n    let monthsCounter = 48;\n\n    while (!dataIsValid && monthsCounter) {\n      monthsCounter--;\n      // increment the current date. This is really\n      // important otherwise we may fall into the infinite\n      // loop trap. The initial date takes care of the case\n      // where the current date is the date we are looking\n      // for.\n      date = lastDay + 1;\n\n      if (date > daysInMonth) {\n        nextMonth();\n        continue;\n      }\n\n      // find next date\n      let next = byMonthDay[dateIdx++];\n\n      // this logic is dependent on the BYMONTHDAYS\n      // being in order (which is done by #normalizeByMonthDayRules)\n      if (next >= date) {\n        // if the next month day is in the future jump to it.\n        lastDay = next;\n      } else {\n        // in this case the 'next' monthday has past\n        // we must move to the month.\n        nextMonth();\n        continue;\n      }\n\n      // Now we can loop through the day rules to see\n      // if one matches the current month date.\n      for (let dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n        let parts = this.ruleDayOfWeek(byDay[dayIdx]);\n        let pos = parts[0];\n        let dow = parts[1];\n\n        this.last.day = lastDay;\n        if (this.last.isNthWeekDay(dow, pos)) {\n          // when we find the valid one we can mark\n          // the conditions as met and break the loop.\n          // (Because we have this condition above\n          //  it will also break the parent loop).\n          dataIsValid = 1;\n          break;\n        }\n      }\n\n      // It is completely possible that the combination\n      // cannot be matched in the current month.\n      // When we reach the end of possible combinations\n      // in the current month we iterate to the next one.\n      // since dateIdx is incremented right after getting\n      // \"next\", we don't need dateLen -1 here.\n      if (!dataIsValid && dateIdx === dateLen) {\n        nextMonth();\n        continue;\n      }\n    }\n\n    if (monthsCounter <= 0) {\n      // Checked 4 years without finding a Byday that matches\n      // a Bymonthday. Maybe the rule is not correct.\n      throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n    }\n\n\n    return dataIsValid;\n  }\n\n  next_month() {\n    let data_valid = 1;\n\n    if (this.next_hour() == 0) {\n      return data_valid;\n    }\n\n    if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n      data_valid = this._byDayAndMonthDay();\n    } else if (this.has_by_data(\"BYDAY\")) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let setpos = 0;\n      let setpos_total = 0;\n\n      if (this.has_by_data(\"BYSETPOS\")) {\n        let last_day = this.last.day;\n        for (let day = 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n          if (this.is_day_in_byday(this.last)) {\n            setpos_total++;\n            if (day <= last_day) {\n              setpos++;\n            }\n          }\n        }\n        this.last.day = last_day;\n      }\n\n      data_valid = 0;\n      let day;\n      for (day = this.last.day + 1; day <= daysInMonth; day++) {\n        this.last.day = day;\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") ||\n              this.check_set_position(++setpos) ||\n              this.check_set_position(setpos - setpos_total - 1)) {\n\n            data_valid = 1;\n            break;\n          }\n        }\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        this.increment_month();\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n            data_valid = 1;\n          }\n        } else {\n          data_valid = 0;\n        }\n      }\n    } else if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_indices.BYMONTHDAY++;\n\n      if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n        this.by_indices.BYMONTHDAY = 0;\n        this.increment_month();\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          return 0;\n        }\n      }\n\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n      if (day < 0) {\n        day = daysInMonth + day + 1;\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        data_valid = this.is_day_in_byday(this.last);\n      } else {\n        this.last.day = day;\n      }\n    } else {\n      this.increment_month();\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n        data_valid = 0;\n      } else {\n        this.last.day = this.by_data.BYMONTHDAY[0];\n      }\n    }\n\n    return data_valid;\n  }\n\n  next_weekday_by_week() {\n    let end_of_data = 0;\n\n    if (this.next_hour() == 0) {\n      return end_of_data;\n    }\n\n    if (!this.has_by_data(\"BYDAY\")) {\n      return 1;\n    }\n\n    for (;;) {\n      let tt = new Time();\n      this.by_indices.BYDAY++;\n\n      if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n        this.by_indices.BYDAY = 0;\n        end_of_data = 1;\n      }\n\n      let coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n      let parts = this.ruleDayOfWeek(coded_day);\n      let dow = parts[1];\n\n      dow -= this.rule.wkst;\n\n      if (dow < 0) {\n        dow += 7;\n      }\n\n      tt.year = this.last.year;\n      tt.month = this.last.month;\n      tt.day = this.last.day;\n\n      let startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n      if (dow + startOfWeek < 1) {\n        // The selected date is in the previous year\n        if (!end_of_data) {\n          continue;\n        }\n      }\n\n      let next = Time.fromDayOfYear(startOfWeek + dow, this.last.year);\n\n      /**\n       * The normalization horrors below are due to\n       * the fact that when the year/month/day changes\n       * it can effect the other operations that come after.\n       */\n      this.last.year = next.year;\n      this.last.month = next.month;\n      this.last.day = next.day;\n\n      return end_of_data;\n    }\n  }\n\n  next_year() {\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (++this.days_index == this.days.length) {\n      this.days_index = 0;\n      do {\n        this.increment_year(this.rule.interval);\n        if (this.has_by_data(\"BYMONTHDAY\")) {\n          this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n            this.last.year,\n            this.last.month,\n            this.rule.parts.BYMONTHDAY\n          );\n        }\n        this.expand_year_days(this.last.year);\n      } while (this.days.length == 0);\n    }\n\n    this._nextByYearDay();\n\n    return 1;\n  }\n\n  _nextByYearDay() {\n    let doy = this.days[this.days_index];\n    let year = this.last.year;\n    if (doy < 1) {\n        // Time.fromDayOfYear(doy, year) indexes relative to the\n        // start of the given year. That is different from the\n        // semantics of BYYEARDAY where negative indexes are an\n        // offset from the end of the given year.\n        doy += 1;\n        year += 1;\n    }\n    let next = Time.fromDayOfYear(doy, year);\n    this.last.day = next.day;\n    this.last.month = next.month;\n  }\n\n  /**\n   * @param dow (eg: '1TU', '-1MO')\n   * @param {weekDay=} aWeekStart The week start weekday\n   * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n   */\n  ruleDayOfWeek(dow, aWeekStart) {\n    let matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n    if (matches) {\n      let pos = parseInt(matches[1] || 0, 10);\n      dow = Recur.icalDayToNumericDay(matches[2], aWeekStart);\n      return [pos, dow];\n    } else {\n      return [0, 0];\n    }\n  }\n\n  next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {\n    let has_by_rule = (aRuleType in this.by_data);\n    let this_freq = (this.rule.freq == aInterval);\n    let end_of_data = 0;\n\n    if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n      return end_of_data;\n    }\n\n    if (has_by_rule) {\n      this.by_indices[aRuleType]++;\n      let dta = this.by_data[aRuleType];\n\n      if (this.by_indices[aRuleType] == dta.length) {\n        this.by_indices[aRuleType] = 0;\n        end_of_data = 1;\n      }\n      this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n    } else if (this_freq) {\n      this[\"increment_\" + aDateAttr](this.rule.interval);\n    }\n\n    if (has_by_rule && end_of_data && this_freq) {\n      this[\"increment_\" + aFollowingAttr](1);\n    }\n\n    return end_of_data;\n  }\n\n  increment_monthday(inc) {\n    for (let i = 0; i < inc; i++) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      this.last.day++;\n\n      if (this.last.day > daysInMonth) {\n        this.last.day -= daysInMonth;\n        this.increment_month();\n      }\n    }\n  }\n\n  increment_month() {\n    this.last.day = 1;\n    if (this.has_by_data(\"BYMONTH\")) {\n      this.by_indices.BYMONTH++;\n\n      if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n        this.by_indices.BYMONTH = 0;\n        this.increment_year(1);\n      }\n\n      this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n    } else {\n      if (this.rule.freq == \"MONTHLY\") {\n        this.last.month += this.rule.interval;\n      } else {\n        this.last.month++;\n      }\n\n      this.last.month--;\n      let years = trunc(this.last.month / 12);\n      this.last.month %= 12;\n      this.last.month++;\n\n      if (years != 0) {\n        this.increment_year(years);\n      }\n    }\n\n    if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n        this.last.year,\n        this.last.month,\n        this.rule.parts.BYMONTHDAY\n      );\n    }\n  }\n\n  increment_year(inc) {\n    // Don't jump into the next month if this.last is Feb 29.\n    this.last.day = 1;\n    this.last.year += inc;\n  }\n\n  increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {\n    this.last[aDateAttr] += inc;\n    let nextunit = trunc(this.last[aDateAttr] / aFactor);\n    this.last[aDateAttr] %= aFactor;\n    if (nextunit != 0) {\n      this[\"increment_\" + aNextIncrement](nextunit);\n    }\n  }\n\n  has_by_data(aRuleType) {\n    return (aRuleType in this.rule.parts);\n  }\n\n  expand_year_days(aYear) {\n    let t = new Time();\n    this.days = [];\n\n    // We need our own copy with a few keys set\n    let parts = {};\n    let rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n    for (let part of rules) {\n      if (part in this.rule.parts) {\n        parts[part] = this.rule.parts[part];\n      }\n    }\n\n    if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n      let valid = 1;\n      let validWeeks = {};\n      t.year = aYear;\n      t.isDate = true;\n\n      for (let monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n        let month = this.by_data.BYMONTH[monthIdx];\n        t.month = month;\n        t.day = 1;\n        let first_week = t.weekNumber(this.rule.wkst);\n        t.day = Time.daysInMonth(month, aYear);\n        let last_week = t.weekNumber(this.rule.wkst);\n        for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n          validWeeks[monthIdx] = 1;\n        }\n      }\n\n      for (let weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n        let weekno = this.by_data.BYWEEKNO[weekIdx];\n        if (weekno < 52) {\n          valid &= validWeeks[weekIdx];\n        } else {\n          valid = 0;\n        }\n      }\n\n      if (valid) {\n        delete parts.BYMONTH;\n      } else {\n        delete parts.BYWEEKNO;\n      }\n    }\n\n    let partCount = Object.keys(parts).length;\n\n    if (partCount == 0) {\n      let t1 = this.dtstart.clone();\n      t1.year = this.last.year;\n      this.days.push(t1.dayOfYear());\n    } else if (partCount == 1 && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let t2 = this.dtstart.clone();\n        t2.year = aYear;\n        t2.month = month;\n        t2.isDate = true;\n        this.days.push(t2.dayOfYear());\n      }\n    } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n      for (let monthday of this.by_data.BYMONTHDAY) {\n        let t3 = this.dtstart.clone();\n        if (monthday < 0) {\n          let daysInMonth = Time.daysInMonth(t3.month, aYear);\n          monthday = monthday + daysInMonth + 1;\n        }\n        t3.day = monthday;\n        t3.year = aYear;\n        t3.isDate = true;\n        this.days.push(t3.dayOfYear());\n      }\n    } else if (partCount == 2 &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n        for (let monthday of this.by_data.BYMONTHDAY) {\n          if (monthday < 0) {\n            monthday = monthday + daysInMonth + 1;\n          }\n          t.day = monthday;\n          t.month = month;\n          t.year = aYear;\n          t.isDate = true;\n\n          this.days.push(t.dayOfYear());\n        }\n      }\n    } else if (partCount == 1 && \"BYWEEKNO\" in parts) ; else if (partCount == 2 &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYDAY\" in parts) {\n      this.days = this.days.concat(this.expand_by_day(aYear));\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n\n        t.year = aYear;\n        t.month = month;\n        t.day = 1;\n        t.isDate = true;\n\n        let first_dow = t.dayOfWeek();\n        let doy_offset = t.dayOfYear() - 1;\n\n        t.day = daysInMonth;\n        let last_dow = t.dayOfWeek();\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          let by_month_day = [];\n          for (let day = 1; day <= daysInMonth; day++) {\n            t.day = day;\n            if (this.is_day_in_byday(t)) {\n              by_month_day.push(day);\n            }\n          }\n\n          for (let spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n            if (this.check_set_position(spIndex + 1) ||\n                this.check_set_position(spIndex - by_month_day.length)) {\n              this.days.push(doy_offset + by_month_day[spIndex]);\n            }\n          }\n        } else {\n          for (let coded_day of this.by_data.BYDAY) {\n            let bydayParts = this.ruleDayOfWeek(coded_day);\n            let pos = bydayParts[0];\n            let dow = bydayParts[1];\n            let month_day;\n\n            let first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n            let last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n            if (pos == 0) {\n              for (let day = first_matching_day; day <= daysInMonth; day += 7) {\n                this.days.push(doy_offset + day);\n              }\n            } else if (pos > 0) {\n              month_day = first_matching_day + (pos - 1) * 7;\n\n              if (month_day <= daysInMonth) {\n                this.days.push(doy_offset + month_day);\n              }\n            } else {\n              month_day = last_matching_day + (pos + 1) * 7;\n\n              if (month_day > 0) {\n                this.days.push(doy_offset + month_day);\n              }\n            }\n          }\n        }\n      }\n      // Return dates in order of occurrence (1,2,3,...) instead\n      // of by groups of weekdays (1,8,15,...,2,9,16,...).\n      this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n\n        if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n            this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        let weekno = tt.weekNumber(this.rule.wkst);\n\n        if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n      this.days = this.days.concat(this.by_data.BYYEARDAY);\n    } else if (partCount == 2 && \"BYYEARDAY\" in parts && \"BYDAY\" in parts) {\n      let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;\n      let expandedDays = new Set(this.expand_by_day(aYear));\n\n      for (let doy of this.by_data.BYYEARDAY) {\n        if (doy < 0) {\n          doy += daysInYear + 1;\n        }\n\n        if (expandedDays.has(doy)) {\n          this.days.push(doy);\n        }\n      }\n    } else {\n      this.days = [];\n    }\n\n    let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;\n    this.days.sort((a, b) => {\n      if (a < 0) a += daysInYear + 1;\n      if (b < 0) b += daysInYear + 1;\n      return a - b;\n    });\n\n    return 0;\n  }\n\n  expand_by_day(aYear) {\n\n    let days_list = [];\n    let tmp = this.last.clone();\n\n    tmp.year = aYear;\n    tmp.month = 1;\n    tmp.day = 1;\n    tmp.isDate = true;\n\n    let start_dow = tmp.dayOfWeek();\n\n    tmp.month = 12;\n    tmp.day = 31;\n    tmp.isDate = true;\n\n    let end_dow = tmp.dayOfWeek();\n    let end_year_day = tmp.dayOfYear();\n\n    for (let day of this.by_data.BYDAY) {\n      let parts = this.ruleDayOfWeek(day);\n      let pos = parts[0];\n      let dow = parts[1];\n\n      if (pos == 0) {\n        let tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n        for (let doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n          days_list.push(doy);\n        }\n\n      } else if (pos > 0) {\n        let first;\n        if (dow >= start_dow) {\n          first = dow - start_dow + 1;\n        } else {\n          first = dow - start_dow + 8;\n        }\n\n        days_list.push(first + (pos - 1) * 7);\n      } else {\n        let last;\n        pos = -pos;\n\n        if (dow <= end_dow) {\n          last = end_year_day - end_dow + dow;\n        } else {\n          last = end_year_day - end_dow + dow - 7;\n        }\n\n        days_list.push(last - (pos - 1) * 7);\n      }\n    }\n    return days_list;\n  }\n\n  is_day_in_byday(tt) {\n    if (this.by_data.BYDAY) {\n      for (let day of this.by_data.BYDAY) {\n        let parts = this.ruleDayOfWeek(day);\n        let pos = parts[0];\n        let dow = parts[1];\n        let this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if given value is in BYSETPOS.\n   *\n   * @private\n   * @param {Numeric} aPos position to check for.\n   * @return {Boolean} false unless BYSETPOS rules exist\n   *                   and the given value is present in rules.\n   */\n  check_set_position(aPos) {\n    if (this.has_by_data('BYSETPOS')) {\n      let idx = this.by_data.BYSETPOS.indexOf(aPos);\n      // negative numbers are not false-y\n      return idx !== -1;\n    }\n    return false;\n  }\n\n  sort_byday_rules(aRules) {\n    for (let i = 0; i < aRules.length; i++) {\n      for (let j = 0; j < i; j++) {\n        let one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n        let two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n        if (one > two) {\n          let tmp = aRules[i];\n          aRules[i] = aRules[j];\n          aRules[j] = tmp;\n        }\n      }\n    }\n  }\n\n  check_contract_restriction(aRuleType, v) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n    let pass = false;\n\n    if (aRuleType in this.by_data &&\n        ruleMapValue == RecurIterator.CONTRACT) {\n\n      let ruleType = this.by_data[aRuleType];\n\n      for (let bydata of ruleType) {\n        if (bydata == v) {\n          pass = true;\n          break;\n        }\n      }\n    } else {\n      // Not a contracting byrule or has no data, test passes\n      pass = true;\n    }\n    return pass;\n  }\n\n  check_contracting_rules() {\n    let dow = this.last.dayOfWeek();\n    let weekNo = this.last.weekNumber(this.rule.wkst);\n    let doy = this.last.dayOfYear();\n\n    return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n            this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n            this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n            this.check_contract_restriction(\"BYDAY\", Recur.numericDayToIcalDay(dow)) &&\n            this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n            this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n            this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n            this.check_contract_restriction(\"BYYEARDAY\", doy));\n  }\n\n  setup_defaults(aRuleType, req, deftime) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n\n    if (ruleMapValue != RecurIterator.CONTRACT) {\n      if (!(aRuleType in this.by_data)) {\n        this.by_data[aRuleType] = [deftime];\n      }\n      if (this.rule.freq != req) {\n        return this.by_data[aRuleType][0];\n      }\n    }\n    return deftime;\n  }\n\n  /**\n   * Convert iterator into a serialize-able object.  Will preserve current\n   * iteration sequence to ensure the seamless continuation of the recurrence\n   * rule.\n   * @return {Object}\n   */\n  toJSON() {\n    let result = Object.create(null);\n\n    result.initialized = this.initialized;\n    result.rule = this.rule.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.by_data = this.by_data;\n    result.days = this.days;\n    result.last = this.last.toJSON();\n    result.by_indices = this.by_indices;\n    result.occurrence_number = this.occurrence_number;\n\n    return result;\n  }\n}\n\n/**\n * An error indicating that a recurrence rule is invalid and produces no\n * occurrences.\n *\n * @extends {Error}\n * @class\n */\nclass InvalidRecurrenceRuleError extends Error {\n  constructor() {\n    super(\"Recurrence rule has no valid occurrences\");\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n */\n\nconst VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\nconst VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\nconst DOW_MAP = {\n  SU: Time.SUNDAY,\n  MO: Time.MONDAY,\n  TU: Time.TUESDAY,\n  WE: Time.WEDNESDAY,\n  TH: Time.THURSDAY,\n  FR: Time.FRIDAY,\n  SA: Time.SATURDAY\n};\n\nconst REVERSE_DOW_MAP = Object.fromEntries(Object.entries(DOW_MAP).map(entry => entry.reverse()));\n\nconst ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n/**\n * This class represents the \"recur\" value type, used for example by RRULE. It provides methods to\n * calculate occurrences among others.\n *\n * @memberof ICAL\n */\nclass Recur {\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {Recur}                The created recurrence instance\n   */\n  static fromString(string) {\n    let data = this._stringToData(string, false);\n    return new Recur(data);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {frequencyValues=} aData.freq               The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {weekDay=} aData.wkst                       The week start value\n   * @param {Time=} aData.until                         The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  static fromData(aData) {\n    return new Recur(aData);\n  }\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @private\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {Recur}            The recurrence instance\n   */\n  static _stringToData(string, fmtIcal) {\n    let dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    let values = string.split(';');\n    let len = values.length;\n\n    for (let i = 0; i < len; i++) {\n      let parts = values[i].split('=');\n      let ucname = parts[0].toUpperCase();\n      let lcname = parts[0].toLowerCase();\n      let name = (fmtIcal ? lcname : ucname);\n      let value = parts[1];\n\n      if (ucname in partDesign) {\n        let partArr = value.split(',');\n        let partSet = new Set();\n\n        for (let part of partArr) {\n          partSet.add(partDesign[ucname](part));\n        }\n        partArr = [...partSet];\n\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  static icalDayToNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  }\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  static numericDayToIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dow = (num + firstDow - Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  }\n\n  /**\n   * Create a new instance of the Recur class.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @memberof ICAL.Recur\n   * @typedef {Object} byParts\n   * @property {Array.<Number>=} BYSECOND            The seconds for the BYSECOND part\n   * @property {Array.<Number>=} BYMINUTE            The minutes for the BYMINUTE part\n   * @property {Array.<Number>=} BYHOUR              The hours for the BYHOUR part\n   * @property {Array.<String>=} BYDAY               The BYDAY values\n   * @property {Array.<Number>=} BYMONTHDAY          The days for the BYMONTHDAY part\n   * @property {Array.<Number>=} BYYEARDAY           The days for the BYYEARDAY part\n   * @property {Array.<Number>=} BYWEEKNO            The weeks for the BYWEEKNO part\n   * @property {Array.<Number>=} BYMONTH             The month for the BYMONTH part\n   * @property {Array.<Number>=} BYSETPOS            The positionals for the BYSETPOS part\n   */\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @type {byParts}\n   */\n  parts = null;\n\n  /**\n   * The interval value for the recurrence rule.\n   * @type {Number}\n   */\n  interval = 1;\n\n  /**\n   * The week start day\n   *\n   * @type {weekDay}\n   * @default ICAL.Time.MONDAY\n   */\n  wkst = Time.MONDAY;\n\n  /**\n   * The end of the recurrence\n   * @type {?Time}\n   */\n  until = null;\n\n  /**\n   * The maximum number of occurrences\n   * @type {?Number}\n   */\n  count = null;\n\n  /**\n   * The frequency value.\n   * @type {frequencyValues}\n   */\n  freq = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalrecur\"\n   */\n  icalclass = \"icalrecur\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"recur\"\n   */\n  icaltype = \"recur\";\n\n  /**\n   * Create a new iterator for this recurrence rule. The passed start date\n   * must be the start date of the event, not the start of the range to\n   * search in.\n   *\n   * @example\n   * let recur = comp.getFirstPropertyValue('rrule');\n   * let dtstart = comp.getFirstPropertyValue('dtstart');\n   * let iter = recur.iterator(dtstart);\n   * for (let next = iter.next(); next; next = iter.next()) {\n   *   if (next.compare(rangeStart) < 0) {\n   *     continue;\n   *   }\n   *   console.log(next.toString());\n   * }\n   *\n   * @param {Time} aStart        The item's start date\n   * @return {RecurIterator}     The recurrence iterator\n   */\n  iterator(aStart) {\n    return new RecurIterator({\n      rule: this,\n      dtstart: aStart\n    });\n  }\n\n  /**\n   * Returns a clone of the recurrence object.\n   *\n   * @return {Recur}      The cloned object\n   */\n  clone() {\n    return new Recur(this.toJSON());\n  }\n\n  /**\n   * Checks if the current rule is finite, i.e. has a count or until part.\n   *\n   * @return {Boolean}        True, if the rule is finite\n   */\n  isFinite() {\n    return !!(this.count || this.until);\n  }\n\n  /**\n   * Checks if the current rule has a count part, and not limited by an until\n   * part.\n   *\n   * @return {Boolean}        True, if the rule is by count\n   */\n  isByCount() {\n    return !!(this.count && !this.until);\n  }\n\n  /**\n   * Adds a component (part) to the recurrence rule. This is not a component\n   * in the sense of {@link ICAL.Component}, but a part of the recurrence\n   * rule, i.e. BYMONTH.\n   *\n   * @param {String} aType            The name of the component part\n   * @param {Array|String} aValue     The component value\n   */\n  addComponent(aType, aValue) {\n    let ucname = aType.toUpperCase();\n    if (ucname in this.parts) {\n      this.parts[ucname].push(aValue);\n    } else {\n      this.parts[ucname] = [aValue];\n    }\n  }\n\n  /**\n   * Sets the component value for the given by-part.\n   *\n   * @param {String} aType        The component part name\n   * @param {Array} aValues       The component values\n   */\n  setComponent(aType, aValues) {\n    this.parts[aType.toUpperCase()] = aValues.slice();\n  }\n\n  /**\n   * Gets (a copy) of the requested component value.\n   *\n   * @param {String} aType        The component part name\n   * @return {Array}              The component part value\n   */\n  getComponent(aType) {\n    let ucname = aType.toUpperCase();\n    return (ucname in this.parts ? this.parts[ucname].slice() : []);\n  }\n\n  /**\n   * Retrieves the next occurrence after the given recurrence id. See the\n   * guide on {@tutorial terminology} for more details.\n   *\n   * NOTE: Currently, this method iterates all occurrences from the start\n   * date. It should not be called in a loop for performance reasons. If you\n   * would like to get more than one occurrence, you can iterate the\n   * occurrences manually, see the example on the\n   * {@link ICAL.Recur#iterator iterator} method.\n   *\n   * @param {Time} aStartTime        The start of the event series\n   * @param {Time} aRecurrenceId     The date of the last occurrence\n   * @return {Time}                  The next occurrence after\n   */\n  getNextOccurrence(aStartTime, aRecurrenceId) {\n    let iter = this.iterator(aStartTime);\n    let next;\n\n    do {\n      next = iter.next();\n    } while (next && next.compare(aRecurrenceId) <= 0);\n\n    if (next && aRecurrenceId.zone) {\n      next.zone = aRecurrenceId.zone;\n    }\n\n    return next;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  fromData(data) {\n    for (let key in data) {\n      let uckey = key.toUpperCase();\n\n      if (uckey in partDesign) {\n        if (Array.isArray(data[key])) {\n          this.parts[uckey] = data[key];\n        } else {\n          this.parts[uckey] = [data[key]];\n        }\n      } else {\n        this[key] = data[key];\n      }\n    }\n\n    if (this.interval && typeof this.interval != \"number\") {\n      optionDesign.INTERVAL(this.interval, this);\n    }\n\n    if (this.wkst && typeof this.wkst != \"number\") {\n      this.wkst = Recur.icalDayToNumericDay(this.wkst);\n    }\n\n    if (this.until && !(this.until instanceof Time)) {\n      this.until = Time.fromString(this.until);\n    }\n  }\n\n  /**\n   * The jCal representation of this recurrence type.\n   * @return {Object}\n   */\n  toJSON() {\n    let res = Object.create(null);\n    res.freq = this.freq;\n\n    if (this.count) {\n      res.count = this.count;\n    }\n\n    if (this.interval > 1) {\n      res.interval = this.interval;\n    }\n\n    for (let [k, kparts] of Object.entries(this.parts)) {\n      if (Array.isArray(kparts) && kparts.length == 1) {\n        res[k.toLowerCase()] = kparts[0];\n      } else {\n        res[k.toLowerCase()] = clone(kparts);\n      }\n    }\n\n    if (this.until) {\n      res.until = this.until.toString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      res.wkst = Recur.numericDayToIcalDay(this.wkst);\n    }\n    return res;\n  }\n\n  /**\n   * The string representation of this recurrence rule.\n   * @return {String}\n   */\n  toString() {\n    // TODO retain order\n    let str = \"FREQ=\" + this.freq;\n    if (this.count) {\n      str += \";COUNT=\" + this.count;\n    }\n    if (this.interval > 1) {\n      str += \";INTERVAL=\" + this.interval;\n    }\n    for (let [k, v] of Object.entries(this.parts)) {\n      str += \";\" + k + \"=\" + v;\n    }\n    if (this.until) {\n      str += ';UNTIL=' + this.until.toICALString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      str += ';WKST=' + Recur.numericDayToIcalDay(this.wkst);\n    }\n    return str;\n  }\n}\n\nfunction parseNumericValue(type, min, max, value) {\n  let result = value;\n\n  if (value[0] === '+') {\n    result = value.slice(1);\n  }\n\n  result = strictParseInt(result);\n\n  if (min !== undefined && value < min) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be > ' + min\n    );\n  }\n\n  if (max !== undefined && value > max) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be < ' + min\n    );\n  }\n\n  return result;\n}\n\nconst optionDesign = {\n  FREQ: function(value, dict, fmtIcal) {\n    // yes this is actually equal or faster then regex.\n    // upside here is we can enumerate the valid values.\n    if (ALLOWED_FREQ.indexOf(value) !== -1) {\n      dict.freq = value;\n    } else {\n      throw new Error(\n        'invalid frequency \"' + value + '\" expected: \"' +\n        ALLOWED_FREQ.join(', ') + '\"'\n      );\n    }\n  },\n\n  COUNT: function(value, dict, fmtIcal) {\n    dict.count = strictParseInt(value);\n  },\n\n  INTERVAL: function(value, dict, fmtIcal) {\n    dict.interval = strictParseInt(value);\n    if (dict.interval < 1) {\n      // 0 or negative values are not allowed, some engines seem to generate\n      // it though. Assume 1 instead.\n      dict.interval = 1;\n    }\n  },\n\n  UNTIL: function(value, dict, fmtIcal) {\n    if (value.length > 10) {\n      dict.until = design.icalendar.value['date-time'].fromICAL(value);\n    } else {\n      dict.until = design.icalendar.value.date.fromICAL(value);\n    }\n    if (!fmtIcal) {\n      dict.until = Time.fromString(dict.until);\n    }\n  },\n\n  WKST: function(value, dict, fmtIcal) {\n    if (VALID_DAY_NAMES.test(value)) {\n      dict.wkst = Recur.icalDayToNumericDay(value);\n    } else {\n      throw new Error('invalid WKST value \"' + value + '\"');\n    }\n  }\n};\n\nconst partDesign = {\n  BYSECOND: parseNumericValue.bind(undefined, 'BYSECOND', 0, 60),\n  BYMINUTE: parseNumericValue.bind(undefined, 'BYMINUTE', 0, 59),\n  BYHOUR: parseNumericValue.bind(undefined, 'BYHOUR', 0, 23),\n  BYDAY: function(value) {\n    if (VALID_BYDAY_PART.test(value)) {\n      return value;\n    } else {\n      throw new Error('invalid BYDAY value \"' + value + '\"');\n    }\n  },\n  BYMONTHDAY: parseNumericValue.bind(undefined, 'BYMONTHDAY', -31, 31),\n  BYYEARDAY: parseNumericValue.bind(undefined, 'BYYEARDAY', -366, 366),\n  BYWEEKNO: parseNumericValue.bind(undefined, 'BYWEEKNO', -53, 53),\n  BYMONTH: parseNumericValue.bind(undefined, 'BYMONTH', 1, 12),\n  BYSETPOS: parseNumericValue.bind(undefined, 'BYSETPOS', -366, 366)\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\n/** @module ICAL.design */\n\nconst FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\nconst TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\nconst FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\nconst TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\nfunction createTextType(fromNewline, toNewline) {\n  let result = {\n    matches: /.*/,\n\n    fromICAL: function(aValue, structuredEscape) {\n      return replaceNewline(aValue, fromNewline, structuredEscape);\n    },\n\n    toICAL: function(aValue, structuredEscape) {\n      let regEx = toNewline;\n      if (structuredEscape)\n         regEx = new RegExp(regEx.source + '|' + structuredEscape, regEx.flags);\n      return aValue.replace(regEx, function(str) {\n        switch (str) {\n        case \"\\\\\":\n          return \"\\\\\\\\\";\n        case \";\":\n          return \"\\\\;\";\n        case \",\":\n          return \"\\\\,\";\n        case \"\\n\":\n          return \"\\\\n\";\n        /* c8 ignore next 2 */\n        default:\n          return str;\n        }\n      });\n    }\n  };\n  return result;\n}\n\n// default types used multiple times\nconst DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\nconst DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\nconst DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\nconst DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\nconst DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\nconst DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\nconst DEFAULT_TYPE_URI = { defaultType: \"uri\" };\nconst DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\nconst DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\nconst DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\nfunction replaceNewlineReplace(string) {\n  switch (string) {\n    case \"\\\\\\\\\":\n      return \"\\\\\";\n    case \"\\\\;\":\n      return \";\";\n    case \"\\\\,\":\n      return \",\";\n    case \"\\\\n\":\n    case \"\\\\N\":\n      return \"\\n\";\n    /* c8 ignore next 2 */\n    default:\n      return string;\n  }\n}\n\nfunction replaceNewline(value, newline, structuredEscape) {\n  // avoid regex when possible.\n  if (value.indexOf('\\\\') === -1) {\n    return value;\n  }\n  if (structuredEscape)\n     newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape, newline.flags);\n  return value.replace(newline, replaceNewlineReplace);\n}\n\nlet commonProperties = {\n  \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n  \"url\": DEFAULT_TYPE_URI,\n  \"version\": DEFAULT_TYPE_TEXT,\n  \"uid\": DEFAULT_TYPE_TEXT\n};\n\nlet commonValues = {\n  \"boolean\": {\n    values: [\"TRUE\", \"FALSE\"],\n\n    fromICAL: function(aValue) {\n      switch (aValue) {\n        case 'TRUE':\n          return true;\n        case 'FALSE':\n          return false;\n        default:\n          //TODO: parser warning\n          return false;\n      }\n    },\n\n    toICAL: function(aValue) {\n      if (aValue) {\n        return 'TRUE';\n      }\n      return 'FALSE';\n    }\n\n  },\n  float: {\n    matches: /^[+-]?\\d+\\.\\d+$/,\n\n    fromICAL: function(aValue) {\n      let parsed = parseFloat(aValue);\n      if (isStrictlyNaN(parsed)) {\n        // TODO: parser warning\n        return 0.0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  integer: {\n    fromICAL: function(aValue) {\n      let parsed = parseInt(aValue);\n      if (isStrictlyNaN(parsed)) {\n        return 0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      if (aValue.length < 7) {\n        // no seconds\n        // -0500\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6);\n      } else {\n        // seconds\n        // -050000\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6) +\n               aValue.slice(7, 9);\n      }\n    },\n\n    fromICAL: function(aValue) {\n      if (aValue.length < 6) {\n        // no seconds\n        // -05:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5);\n      } else {\n        // seconds\n        // -05:00:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5) + ':' +\n               aValue.slice(5, 7);\n      }\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n};\n\nlet icalParams = {\n  // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n  // enforce anything aside from it being a valid content line.\n  //\n  // At least some params require - if multi values are used - DQUOTEs\n  // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n  // To indicate this, I introduced the new k/v pair\n  // multiValueSeparateDQuote: true\n  //\n  // \"ALTREP\": { ... },\n\n  // CN just wants a param-value\n  // \"CN\": { ... }\n\n  \"cutype\": {\n    values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n\n  \"delegated-from\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"delegated-to\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  // \"DIR\": { ... }, // See ALTREP\n  \"encoding\": {\n    values: [\"8BIT\", \"BASE64\"]\n  },\n  // \"FMTTYPE\": { ... }, // See ALTREP\n  \"fbtype\": {\n    values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  // \"LANGUAGE\": { ... }, // See ALTREP\n  \"member\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"partstat\": {\n    // TODO These values are actually different per-component\n    values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n             \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"range\": {\n    values: [\"THISANDFUTURE\"]\n  },\n  \"related\": {\n    values: [\"START\", \"END\"]\n  },\n  \"reltype\": {\n    values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"role\": {\n    values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n             \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"rsvp\": {\n    values: [\"TRUE\", \"FALSE\"]\n  },\n  \"sent-by\": {\n    valueType: \"cal-address\"\n  },\n  \"tzid\": {\n    matches: /^\\//\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n             \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n             \"time\", \"uri\", \"utc-offset\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\n// When adding a value here, be sure to add it to the parameter types!\nconst icalValues = extend(commonValues, {\n  text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n  uri: {\n    // TODO\n    /* ... */\n  },\n\n  \"binary\": {\n    decorate: function(aString) {\n      return Binary.fromString(aString);\n    },\n\n    undecorate: function(aBinary) {\n      return aBinary.toString();\n    }\n  },\n  \"cal-address\": {\n    // needs to be an uri\n  },\n  \"date\": {\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    /**\n     * undecorates a time object.\n     */\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      // from: 20120901\n      // to: 2012-09-01\n      if (!design.strict && aValue.length >= 15) {\n        // This is probably a date-time, e.g. 20120901T130000Z\n        return icalValues[\"date-time\"].fromICAL(aValue);\n      } else {\n        return aValue.slice(0, 4) + '-' +\n               aValue.slice(4, 6) + '-' +\n               aValue.slice(6, 8);\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01\n      // to: 20120901\n      let len = aValue.length;\n\n      if (len == 10) {\n        return aValue.slice(0, 4) +\n               aValue.slice(5, 7) +\n               aValue.slice(8, 10);\n      } else if (len >= 19) {\n        return icalValues[\"date-time\"].toICAL(aValue);\n      } else {\n        //TODO: serialize warning?\n        return aValue;\n      }\n\n    }\n  },\n  \"date-time\": {\n    fromICAL: function(aValue) {\n      // from: 20120901T130000\n      // to: 2012-09-01T13:00:00\n      if (!design.strict && aValue.length == 8) {\n        // This is probably a date, e.g. 20120901\n        return icalValues.date.fromICAL(aValue);\n      } else {\n        let result = aValue.slice(0, 4) + '-' +\n                     aValue.slice(4, 6) + '-' +\n                     aValue.slice(6, 8) + 'T' +\n                     aValue.slice(9, 11) + ':' +\n                     aValue.slice(11, 13) + ':' +\n                     aValue.slice(13, 15);\n\n        if (aValue[15] && aValue[15] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01T13:00:00\n      // to: 20120901T130000\n      let len = aValue.length;\n\n      if (len == 10 && !design.strict) {\n        return icalValues.date.toICAL(aValue);\n      } else if (len >= 19) {\n        let result = aValue.slice(0, 4) +\n                     aValue.slice(5, 7) +\n                     // grab the (DDTHH) segment\n                     aValue.slice(8, 13) +\n                     // MM\n                     aValue.slice(14, 16) +\n                     // SS\n                     aValue.slice(17, 19);\n\n        if (aValue[19] && aValue[19] === 'Z') {\n          result += 'Z';\n        }\n        return result;\n      } else {\n        // TODO: error\n        return aValue;\n      }\n    },\n\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateTimeString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  duration: {\n    decorate: function(aValue) {\n      return Duration.fromString(aValue);\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  period: {\n    fromICAL: function(string) {\n      let parts = string.split('/');\n      parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n      if (!Duration.isValueString(parts[1])) {\n        parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n      }\n\n      return parts;\n    },\n\n    toICAL: function(parts) {\n      parts = parts.slice();\n      if (!design.strict && parts[0].length == 10) {\n        parts[0] = icalValues.date.toICAL(parts[0]);\n      } else {\n        parts[0] = icalValues['date-time'].toICAL(parts[0]);\n      }\n\n      if (!Duration.isValueString(parts[1])) {\n        if (!design.strict && parts[1].length == 10) {\n          parts[1] = icalValues.date.toICAL(parts[1]);\n        } else {\n          parts[1] = icalValues['date-time'].toICAL(parts[1]);\n        }\n      }\n\n      return parts.join(\"/\");\n    },\n\n    decorate: function(aValue, aProp) {\n      return Period.fromJSON(aValue, aProp, !design.strict);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toJSON();\n    }\n  },\n  recur: {\n    fromICAL: function(string) {\n      return Recur._stringToData(string, true);\n    },\n\n    toICAL: function(data) {\n      let str = \"\";\n      for (let [k, val] of Object.entries(data)) {\n        if (k == \"until\") {\n          if (val.length > 10) {\n            val = icalValues['date-time'].toICAL(val);\n          } else {\n            val = icalValues.date.toICAL(val);\n          }\n        } else if (k == \"wkst\") {\n          if (typeof val === 'number') {\n            val = Recur.numericDayToIcalDay(val);\n          }\n        } else if (Array.isArray(val)) {\n          val = val.join(\",\");\n        }\n        str += k.toUpperCase() + \"=\" + val + \";\";\n      }\n      return str.slice(0, Math.max(0, str.length - 1));\n    },\n\n    decorate: function decorate(aValue) {\n      return Recur.fromData(aValue);\n    },\n\n    undecorate: function(aRecur) {\n      return aRecur.toJSON();\n    }\n  },\n\n  time: {\n    fromICAL: function(aValue) {\n      // from: MMHHSS(Z)?\n      // to: HH:MM:SS(Z)?\n      if (aValue.length < 6) {\n        // TODO: parser exception?\n        return aValue;\n      }\n\n      // HH::MM::SSZ?\n      let result = aValue.slice(0, 2) + ':' +\n                   aValue.slice(2, 4) + ':' +\n                   aValue.slice(4, 6);\n\n      if (aValue[6] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    },\n\n    toICAL: function(aValue) {\n      // from: HH:MM:SS(Z)?\n      // to: MMHHSS(Z)?\n      if (aValue.length < 8) {\n        //TODO: error\n        return aValue;\n      }\n\n      let result = aValue.slice(0, 2) +\n                   aValue.slice(3, 5) +\n                   aValue.slice(6, 8);\n\n      if (aValue[8] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    }\n  }\n});\n\nlet icalProperties = extend(commonProperties, {\n\n  \"action\": DEFAULT_TYPE_TEXT,\n  \"attach\": { defaultType: \"uri\" },\n  \"attendee\": { defaultType: \"cal-address\" },\n  \"calscale\": DEFAULT_TYPE_TEXT,\n  \"class\": DEFAULT_TYPE_TEXT,\n  \"comment\": DEFAULT_TYPE_TEXT,\n  \"completed\": DEFAULT_TYPE_DATETIME,\n  \"contact\": DEFAULT_TYPE_TEXT,\n  \"created\": DEFAULT_TYPE_DATETIME,\n  \"description\": DEFAULT_TYPE_TEXT,\n  \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n  \"dtstamp\": DEFAULT_TYPE_DATETIME,\n  \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n  \"due\": DEFAULT_TYPE_DATETIME_DATE,\n  \"duration\": { defaultType: \"duration\" },\n  \"exdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    multiValue: ','\n  },\n  \"exrule\": DEFAULT_TYPE_RECUR,\n  \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n  \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n  \"last-modified\": DEFAULT_TYPE_DATETIME,\n  \"location\": DEFAULT_TYPE_TEXT,\n  \"method\": DEFAULT_TYPE_TEXT,\n  \"organizer\": { defaultType: \"cal-address\" },\n  \"percent-complete\": DEFAULT_TYPE_INTEGER,\n  \"priority\": DEFAULT_TYPE_INTEGER,\n  \"prodid\": DEFAULT_TYPE_TEXT,\n  \"related-to\": DEFAULT_TYPE_TEXT,\n  \"repeat\": DEFAULT_TYPE_INTEGER,\n  \"rdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\", \"period\"],\n    multiValue: ',',\n    detectType: function(string) {\n      if (string.indexOf('/') !== -1) {\n        return 'period';\n      }\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n  \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n  \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"rrule\": DEFAULT_TYPE_RECUR,\n  \"sequence\": DEFAULT_TYPE_INTEGER,\n  \"status\": DEFAULT_TYPE_TEXT,\n  \"summary\": DEFAULT_TYPE_TEXT,\n  \"transp\": DEFAULT_TYPE_TEXT,\n  \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n  \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzurl\": DEFAULT_TYPE_URI,\n  \"tzid\": DEFAULT_TYPE_TEXT,\n  \"tzname\": DEFAULT_TYPE_TEXT\n});\n\n// When adding a value here, be sure to add it to the parameter types!\nconst vcardValues = extend(commonValues, {\n  text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n  uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n  date: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      if (aValue.length == 8) {\n        return icalValues.date.fromICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 6) {\n        return aValue.slice(0, 4) + '-' + aValue.slice(4);\n      } else {\n        return aValue;\n      }\n    },\n    toICAL: function(aValue) {\n      if (aValue.length == 10) {\n        return icalValues.date.toICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 7) {\n        return aValue.slice(0, 4) + aValue.slice(5);\n      } else {\n        return aValue;\n      }\n    }\n  },\n\n  time: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue, true);\n      let zone = splitzone[0], value = splitzone[1];\n\n      //console.log(\"SPLIT: \",splitzone);\n\n      if (value.length == 6) {\n        value = value.slice(0, 2) + ':' +\n                value.slice(2, 4) + ':' +\n                value.slice(4, 6);\n      } else if (value.length == 4 && value[0] != '-') {\n        value = value.slice(0, 2) + ':' + value.slice(2, 4);\n      } else if (value.length == 5) {\n        value = value.slice(0, 3) + ':' + value.slice(3, 5);\n      }\n\n      if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + ':' + zone.slice(3);\n      }\n\n      return value + zone;\n    },\n\n    toICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue);\n      let zone = splitzone[0], value = splitzone[1];\n\n      if (value.length == 8) {\n        value = value.slice(0, 2) +\n                value.slice(3, 5) +\n                value.slice(6, 8);\n      } else if (value.length == 5 && value[0] != '-') {\n        value = value.slice(0, 2) + value.slice(3, 5);\n      } else if (value.length == 6) {\n        value = value.slice(0, 3) + value.slice(4, 6);\n      }\n\n      if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + zone.slice(4);\n      }\n\n      return value + zone;\n    },\n\n    _splitZone: function(aValue, isFromIcal) {\n      let lastChar = aValue.length - 1;\n      let signChar = aValue.length - (isFromIcal ? 5 : 6);\n      let sign = aValue[signChar];\n      let zone, value;\n\n      if (aValue[lastChar] == 'Z') {\n        zone = aValue[lastChar];\n        value = aValue.slice(0, Math.max(0, lastChar));\n      } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n        zone = aValue.slice(signChar);\n        value = aValue.slice(0, Math.max(0, signChar));\n      } else {\n        zone = \"\";\n        value = aValue;\n      }\n\n      return [zone, value];\n    }\n  },\n\n  \"date-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].fromICAL(aValue);\n    },\n\n    toICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].toICAL(aValue);\n    }\n  },\n\n  \"date-and-or-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n             (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n    },\n\n    toICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return vcardValues.date.toICAL(parts[0]) +\n             (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n    }\n  },\n  timestamp: icalValues['date-time'],\n  \"language-tag\": {\n    matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n  },\n  \"phone-number\": {\n    fromICAL: function(aValue) {\n      return Array.from(aValue).filter(function(c) {\n          return c === '\\\\' ? undefined : c;\n        }).join('');\n    },\n    toICAL: function(aValue) {\n      return Array.from(aValue).map(function(c) {\n        return c === ',' || c === \";\" ? '\\\\' + c : c;\n      }).join('');\n    }\n  }\n});\n\nlet vcardParams = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n             \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n             \"language-tag\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcardProperties = extend(commonProperties, {\n  \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"caladruri\": DEFAULT_TYPE_URI,\n  \"caluri\": DEFAULT_TYPE_URI,\n  \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"email\": DEFAULT_TYPE_TEXT,\n  \"fburl\": DEFAULT_TYPE_URI,\n  \"fn\": DEFAULT_TYPE_TEXT,\n  \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"geo\": DEFAULT_TYPE_URI,\n  \"impp\": DEFAULT_TYPE_URI,\n  \"key\": DEFAULT_TYPE_URI,\n  \"kind\": DEFAULT_TYPE_TEXT,\n  \"lang\": { defaultType: \"language-tag\" },\n  \"logo\": DEFAULT_TYPE_URI,\n  \"member\": DEFAULT_TYPE_URI,\n  \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n  \"note\": DEFAULT_TYPE_TEXT,\n  \"org\": { defaultType: \"text\", structuredValue: \";\" },\n  \"photo\": DEFAULT_TYPE_URI,\n  \"related\": DEFAULT_TYPE_URI,\n  \"rev\": { defaultType: \"timestamp\" },\n  \"role\": DEFAULT_TYPE_TEXT,\n  \"sound\": DEFAULT_TYPE_URI,\n  \"source\": DEFAULT_TYPE_URI,\n  \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n  \"title\": DEFAULT_TYPE_TEXT,\n  \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n  \"xml\": DEFAULT_TYPE_TEXT\n});\n\nlet vcard3Values = extend(commonValues, {\n  binary: icalValues.binary,\n  date: vcardValues.date,\n  \"date-time\": vcardValues[\"date-time\"],\n  \"phone-number\": vcardValues[\"phone-number\"],\n  uri: icalValues.uri,\n  text: icalValues.text,\n  time: icalValues.time,\n  vcard: icalValues.text,\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    fromICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n});\n\nlet vcard3Params = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n             \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcard3Properties = extend(commonProperties, {\n  fn: DEFAULT_TYPE_TEXT,\n  n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  nickname: DEFAULT_TYPE_TEXT_MULTI,\n  photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  bday: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n\n  adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  label: DEFAULT_TYPE_TEXT,\n\n  tel: { defaultType: \"phone-number\" },\n  email: DEFAULT_TYPE_TEXT,\n  mailer: DEFAULT_TYPE_TEXT,\n\n  tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n  geo: { defaultType: \"float\", structuredValue: \";\" },\n\n  title: DEFAULT_TYPE_TEXT,\n  role: DEFAULT_TYPE_TEXT,\n  logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n  org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n  note: DEFAULT_TYPE_TEXT_MULTI,\n  prodid: DEFAULT_TYPE_TEXT,\n  rev: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"sort-string\": DEFAULT_TYPE_TEXT,\n  sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n  class: DEFAULT_TYPE_TEXT,\n  key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n});\n\n/**\n * iCalendar design set\n * @type {designSet}\n */\nlet icalSet = {\n  name: \"ical\",\n  value: icalValues,\n  param: icalParams,\n  property: icalProperties,\n  propertyGroups: false\n};\n\n/**\n * vCard 4.0 design set\n * @type {designSet}\n */\nlet vcardSet = {\n  name: \"vcard4\",\n  value: vcardValues,\n  param: vcardParams,\n  property: vcardProperties,\n  propertyGroups: true\n};\n\n/**\n * vCard 3.0 design set\n * @type {designSet}\n */\nlet vcard3Set = {\n  name: \"vcard3\",\n  value: vcard3Values,\n  param: vcard3Params,\n  property: vcard3Properties,\n  propertyGroups: true\n};\n\n/**\n * The design data, used by the parser to determine types for properties and\n * other metadata needed to produce correct jCard/jCal data.\n *\n * @alias ICAL.design\n * @exports module:ICAL.design\n */\nconst design = {\n  /**\n   * Can be set to false to make the parser more lenient.\n   */\n  strict: true,\n\n  /**\n   * The default set for new properties and components if none is specified.\n   * @type {designSet}\n   */\n  defaultSet: icalSet,\n\n  /**\n   * The default type for unknown properties\n   * @type {String}\n   */\n  defaultType: 'unknown',\n\n  /**\n   * Holds the design set for known top-level components\n   *\n   * @type {Object}\n   * @property {designSet} vcard       vCard VCARD\n   * @property {designSet} vevent      iCalendar VEVENT\n   * @property {designSet} vtodo       iCalendar VTODO\n   * @property {designSet} vjournal    iCalendar VJOURNAL\n   * @property {designSet} valarm      iCalendar VALARM\n   * @property {designSet} vtimezone   iCalendar VTIMEZONE\n   * @property {designSet} daylight    iCalendar DAYLIGHT\n   * @property {designSet} standard    iCalendar STANDARD\n   *\n   * @example\n   * let propertyName = 'fn';\n   * let componentDesign = ICAL.design.components.vcard;\n   * let propertyDetails = componentDesign.property[propertyName];\n   * if (propertyDetails.defaultType == 'text') {\n   *   // Yep, sure is...\n   * }\n   */\n  components: {\n    vcard: vcardSet,\n    vcard3: vcard3Set,\n    vevent: icalSet,\n    vtodo: icalSet,\n    vjournal: icalSet,\n    valarm: icalSet,\n    vtimezone: icalSet,\n    daylight: icalSet,\n    standard: icalSet\n  },\n\n\n  /**\n   * The design set for iCalendar (rfc5545/rfc7265) components.\n   * @type {designSet}\n   */\n  icalendar: icalSet,\n\n  /**\n   * The design set for vCard (rfc6350/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard: vcardSet,\n\n  /**\n   * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard3: vcard3Set,\n\n  /**\n   * Gets the design set for the given component name.\n   *\n   * @param {String} componentName        The name of the component\n   * @return {designSet}      The design set for the component\n   */\n  getDesignSet: function(componentName) {\n    let isInDesign = componentName && componentName in design.components;\n    return isInDesign ? design.components[componentName] : design.defaultSet;\n  }\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst LINE_ENDING = '\\r\\n';\nconst DEFAULT_VALUE_TYPE = 'unknown';\nconst RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n/**\n * Convert a full jCal/jCard array into a iCalendar/vCard string.\n *\n * @function ICAL.stringify\n * @variation function\n * @param {Array} jCal    The jCal/jCard document\n * @return {String}       The stringified iCalendar/vCard document\n */\nfunction stringify(jCal) {\n  if (typeof jCal[0] == \"string\") {\n    // This is a single component\n    jCal = [jCal];\n  }\n\n  let i = 0;\n  let len = jCal.length;\n  let result = '';\n\n  for (; i < len; i++) {\n    result += stringify.component(jCal[i]) + LINE_ENDING;\n  }\n\n  return result;\n}\n\n/**\n * Converts an jCal component array into a ICAL string.\n * Recursive will resolve sub-components.\n *\n * Exact component/property order is not saved all\n * properties will come before subcomponents.\n *\n * @function ICAL.stringify.component\n * @param {Array} component\n *        jCal/jCard fragment of a component\n * @param {designSet} designSet\n *        The design data to use for this component\n * @return {String}       The iCalendar/vCard string\n */\nstringify.component = function(component, designSet) {\n  let name = component[0].toUpperCase();\n  let result = 'BEGIN:' + name + LINE_ENDING;\n\n  let props = component[1];\n  let propIdx = 0;\n  let propLen = props.length;\n\n  let designSetName = component[0];\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (designSetName === 'vcard' && component[1].length > 0 &&\n          !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n    designSetName = \"vcard3\";\n  }\n  designSet = designSet || design.getDesignSet(designSetName);\n\n  for (; propIdx < propLen; propIdx++) {\n    result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n  }\n\n  // Ignore subcomponents if none exist, e.g. in vCard.\n  let comps = component[2] || [];\n  let compIdx = 0;\n  let compLen = comps.length;\n\n  for (; compIdx < compLen; compIdx++) {\n    result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n  }\n\n  result += 'END:' + name;\n  return result;\n};\n\n/**\n * Converts a single jCal/jCard property to a iCalendar/vCard string.\n *\n * @function ICAL.stringify.property\n * @param {Array} property\n *        jCal/jCard property array\n * @param {designSet} designSet\n *        The design data to use for this property\n * @param {Boolean} noFold\n *        If true, the line is not folded\n * @return {String}       The iCalendar/vCard string\n */\nstringify.property = function(property, designSet, noFold) {\n  let name = property[0].toUpperCase();\n  let jsName = property[0];\n  let params = property[1];\n\n  if (!designSet) {\n    designSet = design.defaultSet;\n  }\n\n  let groupName = params.group;\n  let line;\n  if (designSet.propertyGroups && groupName) {\n    line = groupName.toUpperCase() + \".\" + name;\n  } else {\n    line = name;\n  }\n\n  for (let [paramName, value] of Object.entries(params)) {\n    if (designSet.propertyGroups && paramName == 'group') {\n      continue;\n    }\n\n    let paramDesign = designSet.param[paramName];\n    let multiValue = paramDesign && paramDesign.multiValue;\n    if (multiValue && Array.isArray(value)) {\n      value = value.map(function(val) {\n        val = stringify._rfc6868Unescape(val);\n        val = stringify.paramPropertyValue(val, paramDesign.multiValueSeparateDQuote);\n        return val;\n      });\n      value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n    } else {\n      value = stringify._rfc6868Unescape(value);\n      value = stringify.paramPropertyValue(value);\n    }\n\n    line += ';' + paramName.toUpperCase() + '=' + value;\n  }\n\n  if (property.length === 3) {\n    // If there are no values, we must assume a blank value\n    return line + ':';\n  }\n\n  let valueType = property[2];\n\n  let propDetails;\n  let multiValue = false;\n  let structuredValue = false;\n  let isDefault = false;\n\n  if (jsName in designSet.property) {\n    propDetails = designSet.property[jsName];\n\n    if ('multiValue' in propDetails) {\n      multiValue = propDetails.multiValue;\n    }\n\n    if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n      structuredValue = propDetails.structuredValue;\n    }\n\n    if ('defaultType' in propDetails) {\n      if (valueType === propDetails.defaultType) {\n        isDefault = true;\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n  } else {\n    if (valueType === DEFAULT_VALUE_TYPE) {\n      isDefault = true;\n    }\n  }\n\n  // push the VALUE property if type is not the default\n  // for the current property.\n  if (!isDefault) {\n    // value will never contain ;/:/, so we don't escape it here.\n    line += ';VALUE=' + valueType.toUpperCase();\n  }\n\n  line += ':';\n\n  if (multiValue && structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n    );\n  } else if (multiValue) {\n    line += stringify.multiValue(\n      property.slice(3), multiValue, valueType, null, designSet, false\n    );\n  } else if (structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, null, designSet, structuredValue\n    );\n  } else {\n    line += stringify.value(property[3], valueType, designSet, false);\n  }\n\n  return noFold ? line : foldline(line);\n};\n\n/**\n * Handles escaping of property values that may contain:\n *\n *    COLON (:), SEMICOLON (;), or COMMA (,)\n *\n * If any of the above are present the result is wrapped\n * in double quotes.\n *\n * @function ICAL.stringify.paramPropertyValue\n * @param {String} value      Raw property value\n * @param {boolean} force     If value should be escaped even when unnecessary\n * @return {String}           Given or escaped value when needed\n */\nstringify.paramPropertyValue = function(value, force) {\n  if (!force &&\n      (value.indexOf(',') === -1) &&\n      (value.indexOf(':') === -1) &&\n      (value.indexOf(';') === -1)) {\n\n    return value;\n  }\n\n  return '\"' + value + '\"';\n};\n\n/**\n * Converts an array of ical values into a single\n * string based on a type and a delimiter value (like \",\").\n *\n * @function ICAL.stringify.multiValue\n * @param {Array} values      List of values to convert\n * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n * @param {String} type       Lowecase ical value type\n *        (like boolean, date-time, etc..)\n * @param {?String} innerMulti If set, each value will again be processed\n *        Used for structured values\n * @param {designSet} designSet\n *        The design data to use for this property\n *\n * @return {String}           iCalendar/vCard string for value\n */\nstringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n  let result = '';\n  let len = values.length;\n  let i = 0;\n\n  for (; i < len; i++) {\n    if (innerMulti && Array.isArray(values[i])) {\n      result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n    } else {\n      result += stringify.value(values[i], type, designSet, structuredValue);\n    }\n\n    if (i !== (len - 1)) {\n      result += delim;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Processes a single ical value runs the associated \"toICAL\" method from the\n * design value type if available to convert the value.\n *\n * @function ICAL.stringify.value\n * @param {String|Number} value       A formatted value\n * @param {String} type               Lowercase iCalendar/vCard value type\n *  (like boolean, date-time, etc..)\n * @return {String}                   iCalendar/vCard value for single value\n */\nstringify.value = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n    return designSet.value[type].toICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @param {String} val        The value to unescape\n * @return {String}           The escaped value\n */\nstringify._rfc6868Unescape = function(val) {\n  return val.replace(/[\\n^\"]/g, function(x) {\n    return RFC6868_REPLACE_MAP[x];\n  });\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nconst NAME_INDEX$1 = 0;\nconst PROP_INDEX = 1;\nconst TYPE_INDEX = 2;\nconst VALUE_INDEX = 3;\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\n/**\n * Provides a layer on top of the raw jCal object for manipulating a single property, with its\n * parameters and value.\n *\n * @memberof ICAL\n */\nclass Property {\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str            The iCalendar string to parse\n   * @param {designSet=} designSet  The design data to use for this property\n   * @return {Property}             The created iCalendar property\n   */\n  static fromString(str, designSet) {\n    return new Property(parse.property(str, designSet));\n  }\n\n  /**\n   * Creates a new ICAL.Property instance.\n   *\n   * It is important to note that mutations done in the wrapper directly mutate the jCal object used\n   * to initialize.\n   *\n   * Can also be used to create new properties by passing the name of the property (as a String).\n   *\n   * @param {Array|String} jCal         Raw jCal representation OR the new name of the property\n   * @param {Component=} parent         Parent component\n   */\n  constructor(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  /**\n   * The value type for this property\n   * @type {String}\n   */\n  get type() {\n    return this.jCal[TYPE_INDEX];\n  }\n\n  /**\n   * The name of this property, in lowercase.\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX$1];\n  }\n\n  /**\n   * The parent component for this property.\n   * @type {Component}\n   */\n  get parent() {\n    return this._parent;\n  }\n\n  set parent(p) {\n    // Before setting the parent, check if the design set has changed. If it\n    // has, we later need to update the type if it was unknown before.\n    let designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n    this._parent = p;\n\n    if (this.type == design.defaultType && designSetChanged) {\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n      this._updateType();\n    }\n  }\n\n  /**\n   * The design set for this property, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    return this.parent ? this.parent._designSet : design.defaultSet;\n  }\n\n  /**\n   * Updates the type metadata from the current jCal type and design set.\n   *\n   * @private\n   */\n  _updateType() {\n    let designSet = this._designSet;\n\n    if (this.type in designSet.value) {\n      if ('decorate' in designSet.value[this.type]) {\n        this.isDecorated = true;\n      } else {\n        this.isDecorated = false;\n      }\n\n      if (this.name in designSet.property) {\n        this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n        this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n      }\n    }\n  }\n\n  /**\n   * Hydrate a single value. The act of hydrating means turning the raw jCal\n   * value into a potentially wrapped object, for example {@link ICAL.Time}.\n   *\n   * @private\n   * @param {Number} index        The index of the value to hydrate\n   * @return {?Object}             The decorated value.\n   */\n  _hydrateValue(index) {\n    if (this._values && this._values[index]) {\n      return this._values[index];\n    }\n\n    // for the case where there is no value.\n    if (this.jCal.length <= (VALUE_INDEX + index)) {\n      return null;\n    }\n\n    if (this.isDecorated) {\n      if (!this._values) {\n        this._values = [];\n      }\n      return (this._values[index] = this._decorate(\n        this.jCal[VALUE_INDEX + index]\n      ));\n    } else {\n      return this.jCal[VALUE_INDEX + index];\n    }\n  }\n\n  /**\n   * Decorate a single value, returning its wrapped object. This is used by\n   * the hydrate function to actually wrap the value.\n   *\n   * @private\n   * @param {?} value         The value to decorate\n   * @return {Object}         The decorated value\n   */\n  _decorate(value) {\n    return this._designSet.value[this.type].decorate(value, this);\n  }\n\n  /**\n   * Undecorate a single value, returning its raw jCal data.\n   *\n   * @private\n   * @param {Object} value         The value to undecorate\n   * @return {?}                   The undecorated value\n   */\n  _undecorate(value) {\n    return this._designSet.value[this.type].undecorate(value, this);\n  }\n\n  /**\n   * Sets the value at the given index while also hydrating it. The passed\n   * value can either be a decorated or undecorated value.\n   *\n   * @private\n   * @param {?} value             The value to set\n   * @param {Number} index        The index to set it at\n   */\n  _setDecoratedValue(value, index) {\n    if (!this._values) {\n      this._values = [];\n    }\n\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      // decorated value\n      this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n      this._values[index] = value;\n    } else {\n      // undecorated value\n      this.jCal[VALUE_INDEX + index] = value;\n      this._values[index] = this._decorate(value);\n    }\n  }\n\n  /**\n   * Gets a parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {Array|String}        Parameter value\n   */\n  getParameter(name) {\n    if (name in this.jCal[PROP_INDEX]) {\n      return this.jCal[PROP_INDEX][name];\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Gets first parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {String}        Parameter value\n   */\n  getFirstParameter(name) {\n    let parameters = this.getParameter(name);\n\n    if (Array.isArray(parameters)) {\n      return parameters[0];\n    }\n\n    return parameters;\n  }\n\n  /**\n   * Sets a parameter on the property.\n   *\n   * @param {String}       name     The parameter name\n   * @param {Array|String} value    The parameter value\n   */\n  setParameter(name, value) {\n    let lcname = name.toLowerCase();\n    if (typeof value === \"string\" &&\n        lcname in this._designSet.param &&\n        'multiValue' in this._designSet.param[lcname]) {\n        value = [value];\n    }\n    this.jCal[PROP_INDEX][name] = value;\n  }\n\n  /**\n   * Removes a parameter\n   *\n   * @param {String} name     The parameter name\n   */\n  removeParameter(name) {\n    delete this.jCal[PROP_INDEX][name];\n  }\n\n  /**\n   * Get the default type based on this property's name.\n   *\n   * @return {String}     The default type for this property\n   */\n  getDefaultType() {\n    let name = this.jCal[NAME_INDEX$1];\n    let designSet = this._designSet;\n\n    if (name in designSet.property) {\n      let details = designSet.property[name];\n      if ('defaultType' in details) {\n        return details.defaultType;\n      }\n    }\n    return design.defaultType;\n  }\n\n  /**\n   * Sets type of property and clears out any existing values of the current\n   * type.\n   *\n   * @param {String} type     New iCAL type (see design.*.values)\n   */\n  resetType(type) {\n    this.removeAllValues();\n    this.jCal[TYPE_INDEX] = type;\n    this._updateType();\n  }\n\n  /**\n   * Finds the first property value.\n   *\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         First property value\n   */\n  getFirstValue() {\n    return this._hydrateValue(0);\n  }\n\n  /**\n   * Gets all values on the property.\n   *\n   * NOTE: this creates an array during each call.\n   *\n   * @return {Array}          List of values\n   */\n  getValues() {\n    let len = this.jCal.length - VALUE_INDEX;\n\n    if (len < 1) {\n      // it is possible for a property to have no value.\n      return [];\n    }\n\n    let i = 0;\n    let result = [];\n\n    for (; i < len; i++) {\n      result[i] = this._hydrateValue(i);\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all values from this property\n   */\n  removeAllValues() {\n    if (this._values) {\n      this._values.length = 0;\n    }\n    this.jCal.length = 3;\n  }\n\n  /**\n   * Sets the values of the property.  Will overwrite the existing values.\n   * This can only be used for multi-value properties.\n   *\n   * @param {Array} values    An array of values\n   */\n  setValues(values) {\n    if (!this.isMultiValue) {\n      throw new Error(\n        this.name + ': does not not support mulitValue.\\n' +\n        'override isMultiValue'\n      );\n    }\n\n    let len = values.length;\n    let i = 0;\n    this.removeAllValues();\n\n    if (len > 0 &&\n        typeof(values[0]) === 'object' &&\n        'icaltype' in values[0]) {\n      this.resetType(values[0].icaltype);\n    }\n\n    if (this.isDecorated) {\n      for (; i < len; i++) {\n        this._setDecoratedValue(values[i], i);\n      }\n    } else {\n      for (; i < len; i++) {\n        this.jCal[VALUE_INDEX + i] = values[i];\n      }\n    }\n  }\n\n  /**\n   * Sets the current value of the property. If this is a multi-value\n   * property, all other values will be removed.\n   *\n   * @param {String|Object} value     New property value.\n   */\n  setValue(value) {\n    this.removeAllValues();\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      this.resetType(value.icaltype);\n    }\n\n    if (this.isDecorated) {\n      this._setDecoratedValue(value, 0);\n    } else {\n      this.jCal[VALUE_INDEX] = value;\n    }\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toICALString() {\n    return stringify.property(\n      this.jCal, this._designSet, true\n    );\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\nconst NAME_INDEX = 0;\nconst PROPERTY_INDEX = 1;\nconst COMPONENT_INDEX = 2;\n\nconst PROPERTY_NAME_INDEX = 0;\nconst PROPERTY_VALUE_INDEX = 3;\n\n/**\n * Wraps a jCal component, adding convenience methods to add, remove and update subcomponents and\n * properties.\n *\n * @memberof ICAL\n */\nclass Component {\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  static fromString(str) {\n    return new Component(parse.component(str));\n  }\n\n  /**\n   * Creates a new Component instance.\n   *\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {Component=} parent     Parent component to associate\n   */\n  constructor(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n\n    if (!this.parent && this.name === 'vcalendar') {\n      this._timezoneCache = new Map();\n    }\n  }\n\n  /**\n   * Hydrated properties are inserted into the _properties array at the same\n   * position as in the jCal array, so it is possible that the array contains\n   * undefined values for unhydrdated properties. To avoid iterating the\n   * array when checking if all properties have been hydrated, we save the\n   * count here.\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedPropertyCount = 0;\n\n  /**\n   * The same count as for _hydratedPropertyCount, but for subcomponents\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedComponentCount = 0;\n\n  /**\n   * A cache of hydrated time zone objects which may be used by consumers, keyed\n   * by time zone ID.\n   *\n   * @type {Map}\n   * @private\n   */\n  _timezoneCache = null;\n\n  /**\n   * @private\n   */\n  _components = null;\n\n  /**\n   * @private\n   */\n  _properties = null;\n\n  /**\n   * The name of this component\n   *\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX];\n  }\n\n  /**\n   * The design set for this component, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    let parentDesign = this.parent && this.parent._designSet;\n    if (!parentDesign && this.name == \"vcard\") {\n      // We can't decide on vcard3 vs vcard4 just based on the component name, the version number is\n      // in the version property. We also can't use hydrated properties here because it would lead\n      // to recursion, but the spec says that the version property needs to be the very first one.\n      let versionProp = this.jCal[PROPERTY_INDEX]?.[0];\n\n      if (versionProp && versionProp[PROPERTY_NAME_INDEX] == \"version\" && versionProp[PROPERTY_VALUE_INDEX] == \"3.0\") {\n        return design.getDesignSet(\"vcard3\");\n      }\n    }\n\n    return parentDesign || design.getDesignSet(this.name);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateComponent(index) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (this._components[index]) {\n      return this._components[index];\n    }\n\n    let comp = new Component(\n      this.jCal[COMPONENT_INDEX][index],\n      this\n    );\n\n    this._hydratedComponentCount++;\n    return (this._components[index] = comp);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateProperty(index) {\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (this._properties[index]) {\n      return this._properties[index];\n    }\n\n    let prop = new Property(\n      this.jCal[PROPERTY_INDEX][index],\n      this\n    );\n\n    this._hydratedPropertyCount++;\n    return (this._properties[index] = prop);\n  }\n\n  /**\n   * Finds first sub component, optionally filtered by name.\n   *\n   * @param {String=} name        Optional name to filter by\n   * @return {?Component}     The found subcomponent\n   */\n  getFirstSubcomponent(name) {\n    if (name) {\n      let i = 0;\n      let comps = this.jCal[COMPONENT_INDEX];\n      let len = comps.length;\n\n      for (; i < len; i++) {\n        if (comps[i][NAME_INDEX] === name) {\n          let result = this._hydrateComponent(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[COMPONENT_INDEX].length) {\n        return this._hydrateComponent(0);\n      }\n    }\n\n    // ensure we return a value (strict mode)\n    return null;\n  }\n\n  /**\n   * Finds all sub components, optionally filtering by name.\n   *\n   * @param {String=} name            Optional name to filter by\n   * @return {Component[]}       The found sub components\n   */\n  getAllSubcomponents(name) {\n    let jCalLen = this.jCal[COMPONENT_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let comps = this.jCal[COMPONENT_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === comps[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateComponent(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._components ||\n          (this._hydratedComponentCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateComponent(i);\n        }\n      }\n\n      return this._components || [];\n    }\n  }\n\n  /**\n   * Returns true when a named property exists.\n   *\n   * @param {String} name     The property name\n   * @return {Boolean}        True, when property is found\n   */\n  hasProperty(name) {\n    let props = this.jCal[PROPERTY_INDEX];\n    let len = props.length;\n\n    let i = 0;\n    for (; i < len; i++) {\n      // 0 is property name\n      if (props[i][NAME_INDEX] === name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Finds the first property, optionally with the given name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {?Property}     The found property\n   */\n  getFirstProperty(name) {\n    if (name) {\n      let i = 0;\n      let props = this.jCal[PROPERTY_INDEX];\n      let len = props.length;\n\n      for (; i < len; i++) {\n        if (props[i][NAME_INDEX] === name) {\n          let result = this._hydrateProperty(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[PROPERTY_INDEX].length) {\n        return this._hydrateProperty(0);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns first property's value, if available.\n   *\n   * @param {String=} name                    Lowercase property name\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         The found property value.\n   */\n  getFirstPropertyValue(name) {\n    let prop = this.getFirstProperty(name);\n    if (prop) {\n      return prop.getFirstValue();\n    }\n\n    return null;\n  }\n\n  /**\n   * Get all properties in the component, optionally filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Property[]}    List of properties\n   */\n  getAllProperties(name) {\n    let jCalLen = this.jCal[PROPERTY_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let props = this.jCal[PROPERTY_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === props[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateProperty(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._properties ||\n          (this._hydratedPropertyCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateProperty(i);\n        }\n      }\n\n      return this._properties || [];\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeObjectByIndex(jCalIndex, cache, index) {\n    cache = cache || [];\n    // remove cached version\n    if (cache[index]) {\n      let obj = cache[index];\n      if (\"parent\" in obj) {\n          obj.parent = null;\n      }\n    }\n\n    cache.splice(index, 1);\n\n    // remove it from the jCal\n    this.jCal[jCalIndex].splice(index, 1);\n  }\n\n  /**\n   * @private\n   */\n  _removeObject(jCalIndex, cache, nameOrObject) {\n    let i = 0;\n    let objects = this.jCal[jCalIndex];\n    let len = objects.length;\n    let cached = this[cache];\n\n    if (typeof(nameOrObject) === 'string') {\n      for (; i < len; i++) {\n        if (objects[i][NAME_INDEX] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    } else if (cached) {\n      for (; i < len; i++) {\n        if (cached[i] && cached[i] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _removeAllObjects(jCalIndex, cache, name) {\n    let cached = this[cache];\n\n    // Unfortunately we have to run through all children to reset their\n    // parent property.\n    let objects = this.jCal[jCalIndex];\n    let i = objects.length - 1;\n\n    // descending search required because splice\n    // is used and will effect the indices.\n    for (; i >= 0; i--) {\n      if (!name || objects[i][NAME_INDEX] === name) {\n        this._removeObjectByIndex(jCalIndex, cached, i);\n      }\n    }\n  }\n\n  /**\n   * Adds a single sub component.\n   *\n   * @param {Component} component        The component to add\n   * @return {Component}                 The passed in component\n   */\n  addSubcomponent(component) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (component.parent) {\n      component.parent.removeSubcomponent(component);\n    }\n\n    let idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n    this._components[idx - 1] = component;\n    this._hydratedComponentCount++;\n    component.parent = this;\n    return component;\n  }\n\n  /**\n   * Removes a single component by name or the instance of a specific\n   * component.\n   *\n   * @param {Component|String} nameOrComp    Name of component, or component\n   * @return {Boolean}                            True when comp is removed\n   */\n  removeSubcomponent(nameOrComp) {\n    let removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n    if (removed) {\n      this._hydratedComponentCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all components or (if given) all components by a particular\n   * name.\n   *\n   * @param {String=} name            Lowercase component name\n   */\n  removeAllSubcomponents(name) {\n    let removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n    this._hydratedComponentCount = 0;\n    return removed;\n  }\n\n  /**\n   * Adds an {@link ICAL.Property} to the component.\n   *\n   * @param {Property} property      The property to add\n   * @return {Property}              The passed in property\n   */\n  addProperty(property) {\n    if (!(property instanceof Property)) {\n      throw new TypeError('must be instance of ICAL.Property');\n    }\n\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (property.parent) {\n      property.parent.removeProperty(property);\n    }\n\n    let idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n    this._properties[idx - 1] = property;\n    this._hydratedPropertyCount++;\n    property.parent = this;\n    return property;\n  }\n\n  /**\n   * Helper method to add a property with a value to the component.\n   *\n   * @param {String}               name         Property name to add\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  addPropertyWithValue(name, value) {\n    let prop = new Property(name);\n    prop.setValue(value);\n\n    this.addProperty(prop);\n\n    return prop;\n  }\n\n  /**\n   * Helper method that will update or create a property of the given name\n   * and sets its value. If multiple properties with the given name exist,\n   * only the first is updated.\n   *\n   * @param {String}               name         Property name to update\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  updatePropertyWithValue(name, value) {\n    let prop = this.getFirstProperty(name);\n\n    if (prop) {\n      prop.setValue(value);\n    } else {\n      prop = this.addPropertyWithValue(name, value);\n    }\n\n    return prop;\n  }\n\n  /**\n   * Removes a single property by name or the instance of the specific\n   * property.\n   *\n   * @param {String|Property} nameOrProp     Property name or instance to remove\n   * @return {Boolean}                            True, when deleted\n   */\n  removeProperty(nameOrProp) {\n    let removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n    if (removed) {\n      this._hydratedPropertyCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all properties associated with this component, optionally\n   * filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Boolean}            True, when deleted\n   */\n  removeAllProperties(name) {\n    let removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n    this._hydratedPropertyCount = 0;\n    return removed;\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toString() {\n    return stringify.component(\n      this.jCal, this._designSet\n    );\n  }\n\n  /**\n   * Retrieve a time zone definition from the component tree, if any is present.\n   * If the tree contains no time zone definitions or the TZID cannot be\n   * matched, returns null.\n   *\n   * @param {String} tzid     The ID of the time zone to retrieve\n   * @return {Timezone}  The time zone corresponding to the ID, or null\n   */\n  getTimeZoneByID(tzid) {\n    // VTIMEZONE components can only appear as a child of the VCALENDAR\n    // component; walk the tree if we're not the root.\n    if (this.parent) {\n      return this.parent.getTimeZoneByID(tzid);\n    }\n\n    // If there is no time zone cache, we are probably parsing an incomplete\n    // file and will have no time zone definitions.\n    if (!this._timezoneCache) {\n      return null;\n    }\n\n    if (this._timezoneCache.has(tzid)) {\n      return this._timezoneCache.get(tzid);\n    }\n\n    // If the time zone is not already cached, hydrate it from the\n    // subcomponents.\n    const zones = this.getAllSubcomponents('vtimezone');\n    for (const zone of zones) {\n      if (zone.getFirstProperty('tzid').getFirstValue() === tzid) {\n        const hydratedZone = new Timezone({\n          component: zone,\n          tzid: tzid,\n        });\n\n        this._timezoneCache.set(tzid, hydratedZone);\n\n        return hydratedZone;\n      }\n    }\n\n    // Per the standard, we should always have a time zone defined in a file\n    // for any referenced TZID, but don't blow up if the file is invalid.\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Primary class for expanding recurring rules.  Can take multiple rrules, rdates, exdate(s) and\n * iterate (in order) over each next occurrence.\n *\n * Once initialized this class can also be serialized saved and continue iteration from the last\n * point.\n *\n * NOTE: it is intended that this class is to be used with {@link ICAL.Event} which handles recurrence\n * exceptions.\n *\n * @example\n * // assuming event is a parsed ical component\n * var event;\n *\n * var expand = new ICAL.RecurExpansion({\n *   component: event,\n *   dtstart: event.getFirstPropertyValue('dtstart')\n * });\n *\n * // remember there are infinite rules so it is a good idea to limit the scope of the iterations\n * // then resume later on.\n *\n * // next is always an ICAL.Time or null\n * var next;\n *\n * while (someCondition && (next = expand.next())) {\n *   // do something with next\n * }\n *\n * // save instance for later\n * var json = JSON.stringify(expand);\n *\n * //...\n *\n * // NOTE: if the component's properties have changed you will need to rebuild the class and start\n * // over. This only works when the component's recurrence info is the same.\n * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n *\n * @memberof ICAL\n */\nclass RecurExpansion {\n  /**\n   * Creates a new ICAL.RecurExpansion instance.\n   *\n   * The options object can be filled with the specified initial values. It can also contain\n   * additional members, as a result of serializing a previous expansion state, as shown in the\n   * example.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  constructor(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is fully completed.\n   * @type {Boolean}\n   */\n  complete = false;\n\n  /**\n   * Array of rrule iterators.\n   *\n   * @type {RecurIterator[]}\n   * @private\n   */\n  ruleIterators = null;\n\n  /**\n   * Array of rdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  ruleDates = null;\n\n  /**\n   * Array of exdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  exDates = null;\n\n  /**\n   * Current position in ruleDates array.\n   * @type {Number}\n   * @private\n   */\n  ruleDateInc = 0;\n\n  /**\n   * Current position in exDates array\n   * @type {Number}\n   * @private\n   */\n  exDateInc = 0;\n\n  /**\n   * Current negative date.\n   *\n   * @type {Time}\n   * @private\n   */\n  exDate = null;\n\n  /**\n   * Current additional date.\n   *\n   * @type {Time}\n   * @private\n   */\n  ruleDate = null;\n\n  /**\n   * Start date of recurring rules.\n   *\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * Last expanded time\n   *\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * Initialize the recurrence expansion from the data object. The options\n   * object may also contain additional members, see the\n   * {@link ICAL.RecurExpansion constructor} for more details.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  fromData(options) {\n    let start = formatClassType(options.dtstart, Time);\n\n    if (!start) {\n      throw new Error('.dtstart (ICAL.Time) must be given');\n    } else {\n      this.dtstart = start;\n    }\n\n    if (options.component) {\n      this._init(options.component);\n    } else {\n      this.last = formatClassType(options.last, Time) || start.clone();\n\n      if (!options.ruleIterators) {\n        throw new Error('.ruleIterators or .component must be given');\n      }\n\n      this.ruleIterators = options.ruleIterators.map(function(item) {\n        return formatClassType(item, RecurIterator);\n      });\n\n      this.ruleDateInc = options.ruleDateInc;\n      this.exDateInc = options.exDateInc;\n\n      if (options.ruleDates) {\n        this.ruleDates = options.ruleDates.map(item => formatClassType(item, Time));\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (options.exDates) {\n        this.exDates = options.exDates.map(item => formatClassType(item, Time));\n        this.exDate = this.exDates[this.exDateInc];\n      }\n\n      if (typeof(options.complete) !== 'undefined') {\n        this.complete = options.complete;\n      }\n    }\n  }\n\n  /**\n   * Compare two ICAL.Time objects.  When the second parameter is a DATE and the first parameter is\n   * DATE-TIME, strip the time and compare only the days.\n   *\n   * @private\n   * @param {Time} a   The one object to compare\n   * @param {Time} b   The other object to compare\n   */\n  _compare_special(a, b) {\n    if (!a.isDate && b.isDate)\n      return new Time({ year: a.year, month: a.month, day: a.day }).compare(b);\n    return a.compare(b);\n  }\n\n  /**\n   * Retrieve the next occurrence in the series.\n   * @return {Time}\n   */\n  next() {\n    let iter;\n    let next;\n    let compare;\n\n    let maxTries = 500;\n    let currentTry = 0;\n\n    while (true) {\n      if (currentTry++ > maxTries) {\n        throw new Error(\n          'max tries have occurred, rule may be impossible to fulfill.'\n        );\n      }\n\n      next = this.ruleDate;\n      iter = this._nextRecurrenceIter(this.last);\n\n      // no more matches\n      // because we increment the rule day or rule\n      // _after_ we choose a value this should be\n      // the only spot where we need to worry about the\n      // end of events.\n      if (!next && !iter) {\n        // there are no more iterators or rdates\n        this.complete = true;\n        break;\n      }\n\n      // no next rule day or recurrence rule is first.\n      if (!next || (iter && next.compare(iter.last) > 0)) {\n        // must be cloned, recur will reuse the time element.\n        next = iter.last.clone();\n        // move to next so we can continue\n        iter.next();\n      }\n\n      // if the ruleDate is still next increment it.\n      if (this.ruleDate === next) {\n        this._nextRuleDay();\n      }\n\n      this.last = next;\n\n      // check the negative rules\n      if (this.exDate) {\n        // EXDATE can be in DATE format, but DTSTART is in DATE-TIME format\n        compare = this._compare_special(this.last, this.exDate);\n\n        if (compare > 0) {\n          this._nextExDay();\n        }\n\n        // if the current rule is excluded skip it.\n        if (compare === 0) {\n          this._nextExDay();\n          continue;\n        }\n      }\n\n      //XXX: The spec states that after we resolve the final\n      //     list of dates we execute exdate this seems somewhat counter\n      //     intuitive to what I have seen most servers do so for now\n      //     I exclude based on the original date not the one that may\n      //     have been modified by the exception.\n      return this.last;\n    }\n  }\n\n  /**\n   * Converts object into a serialize-able format. This format can be passed\n   * back into the expansion to resume iteration.\n   * @return {Object}\n   */\n  toJSON() {\n    function toJSON(item) {\n      return item.toJSON();\n    }\n\n    let result = Object.create(null);\n    result.ruleIterators = this.ruleIterators.map(toJSON);\n\n    if (this.ruleDates) {\n      result.ruleDates = this.ruleDates.map(toJSON);\n    }\n\n    if (this.exDates) {\n      result.exDates = this.exDates.map(toJSON);\n    }\n\n    result.ruleDateInc = this.ruleDateInc;\n    result.exDateInc = this.exDateInc;\n    result.last = this.last.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.complete = this.complete;\n\n    return result;\n  }\n\n  /**\n   * Extract all dates from the properties in the given component. The\n   * properties will be filtered by the property name.\n   *\n   * @private\n   * @param {Component} component             The component to search in\n   * @param {String} propertyName             The property name to search for\n   * @return {Time[]}                         The extracted dates.\n   */\n  _extractDates(component, propertyName) {\n    let result = [];\n    let props = component.getAllProperties(propertyName);\n\n    for (let i = 0, len = props.length; i < len; i++) {\n      for (let prop of props[i].getValues()) {\n        let idx = binsearchInsert(\n          result,\n          prop,\n          (a, b) => a.compare(b)\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Initialize the recurrence expansion.\n   *\n   * @private\n   * @param {Component} component    The component to initialize from.\n   */\n  _init(component) {\n    this.ruleIterators = [];\n\n    this.last = this.dtstart.clone();\n\n    // to provide api consistency non-recurring\n    // events can also use the iterator though it will\n    // only return a single time.\n    if (!component.hasProperty('rdate') &&\n        !component.hasProperty('rrule') &&\n        !component.hasProperty('recurrence-id')) {\n      this.ruleDate = this.last.clone();\n      this.complete = true;\n      return;\n    }\n\n    if (component.hasProperty('rdate')) {\n      this.ruleDates = this._extractDates(component, 'rdate');\n\n      // special hack for cases where first rdate is prior\n      // to the start date. We only check for the first rdate.\n      // This is mostly for google's crazy recurring date logic\n      // (contacts birthdays).\n      if ((this.ruleDates[0]) &&\n          (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n        this.ruleDateInc = 0;\n        this.last = this.ruleDates[0].clone();\n      } else {\n        this.ruleDateInc = binsearchInsert(\n          this.ruleDates,\n          this.last,\n          (a, b) => a.compare(b)\n        );\n      }\n\n      this.ruleDate = this.ruleDates[this.ruleDateInc];\n    }\n\n    if (component.hasProperty('rrule')) {\n      let rules = component.getAllProperties('rrule');\n      let i = 0;\n      let len = rules.length;\n\n      let rule;\n      let iter;\n\n      for (; i < len; i++) {\n        rule = rules[i].getFirstValue();\n        iter = rule.iterator(this.dtstart);\n        this.ruleIterators.push(iter);\n\n        // increment to the next occurrence so future\n        // calls to next return times beyond the initial iteration.\n        // XXX: I find this suspicious might be a bug?\n        iter.next();\n      }\n    }\n\n    if (component.hasProperty('exdate')) {\n      this.exDates = this._extractDates(component, 'exdate');\n      // if we have a .last day we increment the index to beyond it.\n      // When DTSTART is in DATE-TIME format, EXDATE is in DATE format and EXDATE is\n      // the date of DTSTART, _compare_special finds this out and compareTime fails.\n      this.exDateInc = binsearchInsert(\n        this.exDates,\n        this.last,\n        this._compare_special\n      );\n\n      this.exDate = this.exDates[this.exDateInc];\n    }\n  }\n\n  /**\n   * Advance to the next exdate\n   * @private\n   */\n  _nextExDay() {\n    this.exDate = this.exDates[++this.exDateInc];\n  }\n\n  /**\n   * Advance to the next rule date\n   * @private\n   */\n  _nextRuleDay() {\n    this.ruleDate = this.ruleDates[++this.ruleDateInc];\n  }\n\n  /**\n   * Find and return the recurrence rule with the most recent event and\n   * return it.\n   *\n   * @private\n   * @return {?RecurIterator}    Found iterator.\n   */\n  _nextRecurrenceIter() {\n    let iters = this.ruleIterators;\n\n    if (iters.length === 0) {\n      return null;\n    }\n\n    let len = iters.length;\n    let iter;\n    let iterTime;\n    let iterIdx = 0;\n    let chosenIter;\n\n    // loop through each iterator\n    for (; iterIdx < len; iterIdx++) {\n      iter = iters[iterIdx];\n      iterTime = iter.last;\n\n      // if iteration is complete\n      // then we must exclude it from\n      // the search and remove it.\n      if (iter.completed) {\n        len--;\n        if (iterIdx !== 0) {\n          iterIdx--;\n        }\n        iters.splice(iterIdx, 1);\n        continue;\n      }\n\n      // find the most recent possible choice\n      if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n        // that iterator is saved\n        chosenIter = iter;\n      }\n    }\n\n    // the chosen iterator is returned but not mutated\n    // this iterator contains the most recent event.\n    return chosenIter;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").occurrenceDetails} occurrenceDetails\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n * object, followed by the component/property layer. The highest level is the\n * event representation, which this class is part of. See the\n * {@tutorial layers} guide for more details.\n *\n * @memberof ICAL\n */\nclass Event {\n  /**\n   * Creates a new ICAL.Event instance.\n   *\n   * @param {Component=} component              The ICAL.Component to base this event on\n   * @param {Object} [options]                  Options for this event\n   * @param {Boolean=} options.strictExceptions  When true, will verify exceptions are related by\n   *                                              their UUID\n   * @param {Array<Component|Event>=} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  constructor(component, options) {\n    if (!(component instanceof Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n\n  static THISANDFUTURE = 'THISANDFUTURE';\n\n  /**\n   * List of related event exceptions.\n   *\n   * @type {Event[]}\n   */\n  exceptions = null;\n\n  /**\n   * When true, will verify exceptions are related by their UUID.\n   *\n   * @type {Boolean}\n   */\n  strictExceptions = false;\n\n  /**\n   * Relates a given event exception to this object.  If the given component\n   * does not share the UID of this event it cannot be related and will throw\n   * an exception.\n   *\n   * If this component is an exception it cannot have other exceptions\n   * related to it.\n   *\n   * @param {Component|Event} obj       Component or event\n   */\n  relateException(obj) {\n    if (this.isRecurrenceException()) {\n      throw new Error('cannot relate exception to exceptions');\n    }\n\n    if (obj instanceof Component) {\n      obj = new Event(obj);\n    }\n\n    if (this.strictExceptions && obj.uid !== this.uid) {\n      throw new Error('attempted to relate unrelated exception');\n    }\n\n    let id = obj.recurrenceId.toString();\n\n    // we don't sort or manage exceptions directly\n    // here the recurrence expander handles that.\n    this.exceptions[id] = obj;\n\n    // index RANGE=THISANDFUTURE exceptions so we can\n    // look them up later in getOccurrenceDetails.\n    if (obj.modifiesFuture()) {\n      let item = [\n        obj.recurrenceId.toUnixTime(), id\n      ];\n\n      // we keep them sorted so we can find the nearest\n      // value later on...\n      let idx = binsearchInsert(\n        this.rangeExceptions,\n        item,\n        compareRangeException\n      );\n\n      this.rangeExceptions.splice(idx, 0, item);\n    }\n  }\n\n  /**\n   * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n   * value.\n   *\n   * @return {Boolean}        True, when exception is within range\n   */\n  modifiesFuture() {\n    if (!this.component.hasProperty('recurrence-id')) {\n      return false;\n    }\n\n    let range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n    return range === Event.THISANDFUTURE;\n  }\n\n  /**\n   * Finds the range exception nearest to the given date.\n   *\n   * @param {Time} time   usually an occurrence time of an event\n   * @return {?Event}     the related event/exception or null\n   */\n  findRangeException(time) {\n    if (!this.rangeExceptions.length) {\n      return null;\n    }\n\n    let utc = time.toUnixTime();\n    let idx = binsearchInsert(\n      this.rangeExceptions,\n      [utc],\n      compareRangeException\n    );\n\n    idx -= 1;\n\n    // occurs before\n    if (idx < 0) {\n      return null;\n    }\n\n    let rangeItem = this.rangeExceptions[idx];\n\n    /* c8 ignore next 4 */\n    if (utc < rangeItem[0]) {\n      // sanity check only\n      return null;\n    }\n\n    return rangeItem[1];\n  }\n\n  /**\n   * Returns the occurrence details based on its start time.  If the\n   * occurrence has an exception will return the details for that exception.\n   *\n   * NOTE: this method is intend to be used in conjunction\n   *       with the {@link ICAL.Event#iterator iterator} method.\n   *\n   * @param {Time} occurrence               time occurrence\n   * @return {occurrenceDetails}            Information about the occurrence\n   */\n  getOccurrenceDetails(occurrence) {\n    let id = occurrence.toString();\n    let utcId = occurrence.convertToZone(Timezone.utcTimezone).toString();\n    let item;\n    let result = {\n      //XXX: Clone?\n      recurrenceId: occurrence\n    };\n\n    if (id in this.exceptions) {\n      item = result.item = this.exceptions[id];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else if (utcId in this.exceptions) {\n      item = this.exceptions[utcId];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else {\n      // range exceptions (RANGE=THISANDFUTURE) have a\n      // lower priority then direct exceptions but\n      // must be accounted for first. Their item is\n      // always the first exception with the range prop.\n      let rangeExceptionId = this.findRangeException(\n        occurrence\n      );\n      let end;\n\n      if (rangeExceptionId) {\n        let exception = this.exceptions[rangeExceptionId];\n\n        // range exception must modify standard time\n        // by the difference (if any) in start/end times.\n        result.item = exception;\n\n        let startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n        if (!startDiff) {\n          let original = exception.recurrenceId.clone();\n          let newStart = exception.startDate.clone();\n\n          // zones must be same otherwise subtract may be incorrect.\n          original.zone = newStart.zone;\n          startDiff = newStart.subtractDate(original);\n\n          this._rangeExceptionCache[rangeExceptionId] = startDiff;\n        }\n\n        let start = occurrence.clone();\n        start.zone = exception.startDate.zone;\n        start.addDuration(startDiff);\n\n        end = start.clone();\n        end.addDuration(exception.duration);\n\n        result.startDate = start;\n        result.endDate = end;\n      } else {\n        // no range exception standard expansion\n        end = occurrence.clone();\n        end.addDuration(this.duration);\n\n        result.endDate = end;\n        result.startDate = occurrence;\n        result.item = this;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Builds a recur expansion instance for a specific point in time (defaults\n   * to startDate).\n   *\n   * @param {Time=} startTime     Starting point for expansion\n   * @return {RecurExpansion}    Expansion object\n   */\n  iterator(startTime) {\n    return new RecurExpansion({\n      component: this.component,\n      dtstart: startTime || this.startDate\n    });\n  }\n\n  /**\n   * Checks if the event is recurring\n   *\n   * @return {Boolean}        True, if event is recurring\n   */\n  isRecurring() {\n    let comp = this.component;\n    return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n  }\n\n  /**\n   * Checks if the event describes a recurrence exception. See\n   * {@tutorial terminology} for details.\n   *\n   * @return {Boolean}    True, if the event describes a recurrence exception\n   */\n  isRecurrenceException() {\n    return this.component.hasProperty('recurrence-id');\n  }\n\n  /**\n   * Returns the types of recurrences this event may have.\n   *\n   * Returned as an object with the following possible keys:\n   *\n   *    - YEARLY\n   *    - MONTHLY\n   *    - WEEKLY\n   *    - DAILY\n   *    - MINUTELY\n   *    - SECONDLY\n   *\n   * @return {Object.<frequencyValues, Boolean>}\n   *          Object of recurrence flags\n   */\n  getRecurrenceTypes() {\n    let rules = this.component.getAllProperties('rrule');\n    let i = 0;\n    let len = rules.length;\n    let result = Object.create(null);\n\n    for (; i < len; i++) {\n      let value = rules[i].getFirstValue();\n      result[value.freq] = true;\n    }\n\n    return result;\n  }\n\n  /**\n   * The uid of this event\n   * @type {String}\n   */\n  get uid() {\n    return this._firstProp('uid');\n  }\n\n  set uid(value) {\n    this._setProp('uid', value);\n  }\n\n  /**\n   * The start date\n   * @type {Time}\n   */\n  get startDate() {\n    return this._firstProp('dtstart');\n  }\n\n  set startDate(value) {\n    this._setTime('dtstart', value);\n  }\n\n  /**\n   * The end date. This can be the result directly from the property, or the\n   * end date calculated from start date and duration. Setting the property\n   * will remove any duration properties.\n   * @type {Time}\n   */\n  get endDate() {\n    let endDate = this._firstProp('dtend');\n    if (!endDate) {\n        let duration = this._firstProp('duration');\n        endDate = this.startDate.clone();\n        if (duration) {\n            endDate.addDuration(duration);\n        } else if (endDate.isDate) {\n            endDate.day += 1;\n        }\n    }\n    return endDate;\n  }\n\n  set endDate(value) {\n    if (this.component.hasProperty('duration')) {\n      this.component.removeProperty('duration');\n    }\n    this._setTime('dtend', value);\n  }\n\n  /**\n   * The duration. This can be the result directly from the property, or the\n   * duration calculated from start date and end date. Setting the property\n   * will remove any `dtend` properties.\n   * @type {Duration}\n   */\n  get duration() {\n    let duration = this._firstProp('duration');\n    if (!duration) {\n      return this.endDate.subtractDateTz(this.startDate);\n    }\n    return duration;\n  }\n\n  set duration(value) {\n    if (this.component.hasProperty('dtend')) {\n      this.component.removeProperty('dtend');\n    }\n\n    this._setProp('duration', value);\n  }\n\n  /**\n   * The location of the event.\n   * @type {String}\n   */\n  get location() {\n    return this._firstProp('location');\n  }\n\n  set location(value) {\n    this._setProp('location', value);\n  }\n\n  /**\n   * The attendees in the event\n   * @type {Property[]}\n   */\n  get attendees() {\n    //XXX: This is way lame we should have a better\n    //     data structure for this later.\n    return this.component.getAllProperties('attendee');\n  }\n\n  /**\n   * The event summary\n   * @type {String}\n   */\n  get summary() {\n    return this._firstProp('summary');\n  }\n\n  set summary(value) {\n    this._setProp('summary', value);\n  }\n\n  /**\n   * The event description.\n   * @type {String}\n   */\n  get description() {\n    return this._firstProp('description');\n  }\n\n  set description(value) {\n    this._setProp('description', value);\n  }\n\n  /**\n   * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n   * @type {String}\n   */\n  get color() {\n    return this._firstProp('color');\n  }\n\n  set color(value) {\n    this._setProp('color', value);\n  }\n\n  /**\n   * The organizer value as an uri. In most cases this is a mailto: uri, but\n   * it can also be something else, like urn:uuid:...\n   * @type {String}\n   */\n  get organizer() {\n    return this._firstProp('organizer');\n  }\n\n  set organizer(value) {\n    this._setProp('organizer', value);\n  }\n\n  /**\n   * The sequence value for this event. Used for scheduling\n   * see {@tutorial terminology}.\n   * @type {Number}\n   */\n  get sequence() {\n    return this._firstProp('sequence');\n  }\n\n  set sequence(value) {\n    this._setProp('sequence', value);\n  }\n\n  /**\n   * The recurrence id for this event. See {@tutorial terminology} for details.\n   * @type {Time}\n   */\n  get recurrenceId() {\n    return this._firstProp('recurrence-id');\n  }\n\n  set recurrenceId(value) {\n    this._setTime('recurrence-id', value);\n  }\n\n  /**\n   * Set/update a time property's value.\n   * This will also update the TZID of the property.\n   *\n   * TODO: this method handles the case where we are switching\n   * from a known timezone to an implied timezone (one without TZID).\n   * This does _not_ handle the case of moving between a known\n   *  (by TimezoneService) timezone to an unknown timezone...\n   *\n   * We will not add/remove/update the VTIMEZONE subcomponents\n   *  leading to invalid ICAL data...\n   * @private\n   * @param {String} propName     The property name\n   * @param {Time} time           The time to set\n   */\n  _setTime(propName, time) {\n    let prop = this.component.getFirstProperty(propName);\n\n    if (!prop) {\n      prop = new Property(propName);\n      this.component.addProperty(prop);\n    }\n\n    // utc and local don't get a tzid\n    if (\n      time.zone === Timezone.localTimezone ||\n      time.zone === Timezone.utcTimezone\n    ) {\n      // remove the tzid\n      prop.removeParameter('tzid');\n    } else {\n      prop.setParameter('tzid', time.zone.tzid);\n    }\n\n    prop.setValue(time);\n  }\n\n  _setProp(name, value) {\n    this.component.updatePropertyWithValue(name, value);\n  }\n\n  _firstProp(name) {\n    return this.component.getFirstPropertyValue(name);\n  }\n\n  /**\n   * The string representation of this event.\n   * @return {String}\n   */\n  toString() {\n    return this.component.toString();\n  }\n}\n\nfunction compareRangeException(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (b[0] > a[0]) return -1;\n  return 0;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * The ComponentParser is used to process a String or jCal Object,\n * firing callbacks for various found components, as well as completion.\n *\n * @example\n * var options = {\n *   // when false no events will be emitted for type\n *   parseEvent: true,\n *   parseTimezone: true\n * };\n *\n * var parser = new ICAL.ComponentParser(options);\n *\n * parser.onevent(eventComponent) {\n *   //...\n * }\n *\n * // ontimezone, etc...\n *\n * parser.oncomplete = function() {\n *\n * };\n *\n * parser.process(stringOrComponent);\n *\n * @memberof ICAL\n */\nclass ComponentParser {\n  /**\n   * Creates a new ICAL.ComponentParser instance.\n   *\n   * @param {Object=} options                   Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  constructor(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    for (let [key, value] of Object.entries(options)) {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * When true, parse events\n   *\n   * @type {Boolean}\n   */\n  parseEvent = true;\n\n  /**\n   * When true, parse timezones\n   *\n   * @type {Boolean}\n   */\n  parseTimezone = true;\n\n\n  /* SAX like events here for reference */\n\n  /**\n   * Fired when parsing is complete\n   * @callback\n   */\n  oncomplete = /* c8 ignore next */ function() {};\n\n  /**\n   * Fired if an error occurs during parsing.\n   *\n   * @callback\n   * @param {Error} err details of error\n   */\n  onerror = /* c8 ignore next */ function(err) {};\n\n  /**\n   * Fired when a top level component (VTIMEZONE) is found\n   *\n   * @callback\n   * @param {Timezone} component     Timezone object\n   */\n  ontimezone = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Fired when a top level component (VEVENT) is found.\n   *\n   * @callback\n   * @param {Event} component    Top level component\n   */\n  onevent = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Process a string or parse ical object.  This function itself will return\n   * nothing but will start the parsing process.\n   *\n   * Events must be registered prior to calling this method.\n   *\n   * @param {Component|String|Object} ical      The component to process,\n   *        either in its final form, as a jCal Object, or string representation\n   */\n  process(ical) {\n    //TODO: this is sync now in the future we will have a incremental parser.\n    if (typeof(ical) === 'string') {\n      ical = parse(ical);\n    }\n\n    if (!(ical instanceof Component)) {\n      ical = new Component(ical);\n    }\n\n    let components = ical.getAllSubcomponents();\n    let i = 0;\n    let len = components.length;\n    let component;\n\n    for (; i < len; i++) {\n      component = components[i];\n\n      switch (component.name) {\n        case 'vtimezone':\n          if (this.parseTimezone) {\n            let tzid = component.getFirstPropertyValue('tzid');\n            if (tzid) {\n              this.ontimezone(new Timezone({\n                tzid: tzid,\n                component: component\n              }));\n            }\n          }\n          break;\n        case 'vevent':\n          if (this.parseEvent) {\n            this.onevent(new Event(component));\n          }\n          break;\n        default:\n          continue;\n      }\n    }\n\n    //XXX: ideally we should do a \"nextTick\" here\n    //     so in all cases this is actually async.\n    this.oncomplete();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * The main ICAL module. Provides access to everything else.\n *\n * @alias ICAL\n * @namespace ICAL\n * @property {ICAL.design} design\n * @property {ICAL.helpers} helpers\n */\nvar ICALmodule = {\n  /**\n   * The number of characters before iCalendar line folding should occur\n   * @type {Number}\n   * @default 75\n   */\n  foldLength: 75,\n\n  debug: false,\n\n  /**\n   * The character(s) to be used for a newline. The default value is provided by\n   * rfc5545.\n   * @type {String}\n   * @default \"\\r\\n\"\n   */\n  newLineChar: '\\r\\n',\n\n  Binary,\n  Component,\n  ComponentParser,\n  Duration,\n  Event,\n  Period,\n  Property,\n  Recur,\n  RecurExpansion,\n  RecurIterator,\n  Time,\n  Timezone,\n  TimezoneService,\n  UtcOffset,\n  VCardTime,\n\n  parse,\n  stringify,\n\n  design,\n  helpers\n};\n\nexport { ICALmodule as default };\n","/**\r\n * @module\r\n * This module contains a custom elment to render ical data\r\n *\r\n * @example\r\n * ```html\r\n * <script src=\"https://esm.sh/jsr/@web-components/i-cal\"></script>\r\n * <i-cal src=\"https://example.com/calendar.ics\"></can-i-use>\r\n * ```\r\n */\r\n\r\nimport ICAL from \"ical.js\";\r\n\r\nconst internalTemplateHTML = `\r\n                 <ul>\r\n                   <style></style>\r\n                   <li part=\"summary\"><slot name=\"summary\"></slot></li>\r\n                   <li part=\"description\"><slot name=\"description\"></slot></li>\r\n                   <li part=\"location\"><slot name=\"location\"></slot></li>\r\n                   <li part=\"startDate\"><time><slot name=\"startDate\"></slot></time></li>\r\n                   <li part=\"endDate\"><time><slot name=\"endDate\"></slot></time></li>\r\n                   <li><slot name=\"duration\"></slot></li>\r\n                   <li><slot name=\"organizer\"></slot></li>\r\n                   <li><slot name=\"attendees\"></slot></li>\r\n                 </ul>\r\n             `;\r\n\r\n/**\r\n * Represents a custom web component for displaying iCal events.\r\n */\r\nclass ICalComponent extends HTMLElement {\r\n    #refreshInterval: ReturnType<typeof setTimeout> | number | undefined;\r\n    #determinedCalScale: string = \"gregory\";\r\n    #eventsList: any[] = [];\r\n    #error: Error | string | undefined;\r\n    #root;\r\n\r\n    static #validRefreshSeconds = (val) =>\r\n        val && !isNaN(parseInt(val)) && val > 0 ? parseInt(val) : 0;\r\n\r\n    #clearRefreshInterval() {\r\n        if (this.#refreshInterval) {\r\n            clearInterval(this.#refreshInterval);\r\n            this.#refreshInterval = undefined;\r\n        }\r\n    }\r\n    #setRefreshInterval(seconds) {\r\n        this.#clearRefreshInterval();\r\n        const useSeconds = ICalComponent.#validRefreshSeconds(seconds);\r\n        if (!useSeconds) return;\r\n        if (this.src) {\r\n            // set up future refreshes\r\n            this.#refreshInterval = setInterval(() => {\r\n                this.#fetchEvents().then(() => this.#render());\r\n            }, useSeconds * 1000);\r\n            // set up immediate refresh\r\n            this.#fetchEvents().then(() => this.#render());\r\n        }\r\n    }\r\n\r\n    #parseICalData(data) {\r\n        try {\r\n            // https://github.com/kewisch/ical.js/wiki#item-model-layer\r\n            const jcalData = ICAL.parse(data);\r\n            const comp = new ICAL.Component(jcalData);\r\n            const calScale = comp.getFirstPropertyValue(\"calscale\") ?? \"gregory\";\r\n            console.debug(`calScale: ${calScale}`);\r\n            if (calScale === \"GREGORIAN\") {\r\n                this.#determinedCalScale = \"gregory\";\r\n            } else {\r\n                this.#determinedCalScale = String(calScale).toLowerCase();\r\n            }\r\n            const vevents = comp.getAllSubcomponents(\"vevent\");\r\n            const events = vevents.map((vevent) => new ICAL.Event(vevent));\r\n            console.debug(events);\r\n            return events;\r\n        } catch (e) {\r\n            console.warn(`Couldn't parse ical data: ${e?.message ?? JSON.stringify(e)}`);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    static #extractAllValues(obj) {\r\n        const proto = Object.getPrototypeOf(obj);\r\n        const props = Object.getOwnPropertyNames(proto).filter((name) => {\r\n            if (name.startsWith(\"_\")) return false;\r\n            if ([\"constructor\"].includes(name)) return false;\r\n            if (typeof obj[name] === \"function\") return false;\r\n            return true;\r\n        });\r\n        return Object.fromEntries(props.map((name) => [name, obj[name]]));\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return [\"src\", \"events\", \"refresh\", \"since\", \"until\", \"locales\", \"localeOptions\"];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#root = this.attachShadow({ mode: \"open\" });\r\n        this.#upgradeAllProperties();\r\n    }\r\n    #upgradeProperty(prop) {\r\n        if (this && this.hasOwnProperty(prop)) {\r\n          let value = this[prop];\r\n          delete this[prop];\r\n          this[prop] = value;\r\n        }\r\n      }\r\n      #upgradeAllProperties() {\r\n        ICalComponent.observedAttributes.forEach(this.#upgradeProperty);\r\n      }\r\n\r\n    connectedCallback() {\r\n        if (this.refresh) {\r\n            this.#setRefreshInterval(this.refresh);\r\n        } else if (this.src && !this.events) {\r\n            this.#fetchEvents().then(() => this.#render());\r\n        } else {\r\n            this.#render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#clearRefreshInterval();\r\n    }\r\n\r\n    get src() {\r\n        return this.getAttribute(\"src\");\r\n    }\r\n\r\n    set src(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"src\", newVal);\r\n        } else {\r\n            this.removeAttribute(\"src\");\r\n        }\r\n    }\r\n\r\n    get events() {\r\n        return this.getAttribute(\"events\")?.trim();\r\n    }\r\n\r\n    set events(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"events\", newVal);\r\n        } else {\r\n            this.removeAttribute(\"events\");\r\n        }\r\n    }\r\n\r\n    setEventsList(newVal) {\r\n        this.#eventsList = newVal;\r\n        this.#render();\r\n    }\r\n\r\n    get filteredEvents() {\r\n        let startDt: Date | undefined = undefined;\r\n        // if the date values cannot be parsed they will be ignored\r\n        if (this.since) {\r\n            try {\r\n                startDt = this.since ? new Date(this.since) : undefined;\r\n            } catch (_) {}\r\n        }\r\n        let endDt: Date | undefined = undefined;\r\n        if (this.until) {\r\n            try {\r\n                endDt = this.until ? new Date(this.until) : undefined;\r\n            } catch (_) {}\r\n        }\r\n        const filteredEvents =\r\n            this.#eventsList?.filter((event) => {\r\n                //remove events that are outside the date range\r\n                const start = event.startDate.toJSDate();\r\n                const end = event.endDate.toJSDate();\r\n                if (startDt && start < startDt) return false;\r\n                if (endDt && end > endDt) return false;\r\n                return true;\r\n            }) ?? [];\r\n        return filteredEvents;\r\n    }\r\n\r\n    get until() {\r\n        return this.getAttribute(\"until\");\r\n    }\r\n\r\n    set until(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"until\", newVal);\r\n        } else {\r\n            this.removeAttribute(\"until\");\r\n        }\r\n    }\r\n\r\n    get since() {\r\n        return this.getAttribute(\"since\");\r\n    }\r\n\r\n    set since(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"since\", newVal);\r\n        } else {\r\n            this.removeAttribute(\"since\");\r\n        }\r\n    }\r\n\r\n    get calScale() {\r\n        return this.#determinedCalScale.toLowerCase();\r\n    }\r\n\r\n    get locales() {\r\n        return this.getAttribute(\"locales\")?.split(\",\") ?? [];\r\n    }\r\n\r\n    set locales(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"locales\", Array.isArray(newVal) ? newVal.join(\",\") : newVal);\r\n        } else {\r\n            this.removeAttribute(\"locales\");\r\n        }\r\n    }\r\n\r\n    get localeOptions() {\r\n        const parsed = JSON.parse(this.getAttribute(\"localeOptions\") ?? \"{}\");\r\n        return { calendar: this.calScale, ...parsed };\r\n    }\r\n\r\n    set localeOptions(newVal) {\r\n        if (newVal) {\r\n            this.setAttribute(\"localeOptions\", JSON.stringify(newVal));\r\n        } else {\r\n            this.removeAttribute(\"localeOptions\");\r\n        }\r\n    }\r\n\r\n    get refresh(): number {\r\n        return ICalComponent.#validRefreshSeconds(this.getAttribute(\"refresh\"));\r\n    }\r\n    set refresh(newVal: number | string) {\r\n        newVal = ICalComponent.#validRefreshSeconds(newVal);\r\n        if (newVal) {\r\n            this.setAttribute(\"refresh\", String(newVal));\r\n        } else {\r\n            this.removeAttribute(\"refresh\");\r\n        }\r\n    }\r\n\r\n    get hasFixedEvents() {\r\n        return !this.src || this.src.trim().length === 0;\r\n    }\r\n\r\n    async #fetchEvents() {\r\n        if (this.src) {\r\n            return await fetch(this.src)\r\n                .then(async (resp) => {\r\n                    if (resp.ok) {\r\n                        const data = await resp.text();\r\n                        this.#eventsList = this.#parseICalData(data);\r\n                        this.#error = undefined;\r\n                    } else {\r\n                        this.#error = `${resp.status} ${resp.statusText}`.trim();\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    this.#error = `${e?.message ?? JSON.stringify(e)}`.trim();\r\n                });\r\n        }\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (oldValue == newValue) return;\r\n        switch (name) {\r\n            case \"src\": {\r\n                if (!newValue) {\r\n                    this.#clearRefreshInterval();\r\n                } else {\r\n                    this.#setRefreshInterval(this.refresh);\r\n                }\r\n                break;\r\n            }\r\n            case \"refresh\": {\r\n                this.#setRefreshInterval(this.refresh);\r\n                break;\r\n            }\r\n            case \"events\": {\r\n                if (newValue) {\r\n                    try {\r\n                        this.#eventsList = this.#parseICalData(newValue);\r\n                    } catch (e) {\r\n                        this.#error = `Failed to parse events: ${e?.message ?? JSON.stringify(e)}`;\r\n                    }\r\n                } else {\r\n                    this.#eventsList = [];\r\n                }\r\n                if (this.hasFixedEvents) {\r\n                    this.#clearRefreshInterval();\r\n                }\r\n                this.#render();\r\n            }\r\n            default: {\r\n                this.#render();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async #render() {\r\n        let templateNode = this.querySelector(\"template\");\r\n        if (!templateNode) {\r\n            templateNode = document.createElement(\"template\");\r\n            templateNode.innerHTML = internalTemplateHTML;\r\n        }\r\n        //make sure to use only one style tag across all event items\r\n        const templateStyle = templateNode.querySelector(\"style\");\r\n        let styleClone: Element | undefined = undefined;\r\n        if (templateStyle) {\r\n            styleClone = templateStyle.cloneNode(true) as Element;\r\n            templateNode.removeChild(templateStyle);\r\n        }\r\n        const otherChildrenSlot = `<slot></slot>`;\r\n        if (this.#error) {\r\n            this.#root.innerHTML = `${styleClone?.outerHTML ?? \"\"}<slot name=\"error\" class=\"error\"><p class=\"error\">${this.#error}</p></slot>${otherChildrenSlot}`;\r\n        } else if (this.filteredEvents.length == 0) {\r\n            this.#root.innerHTML = `${styleClone?.outerHTML ?? \"\"}<slot name=\"empty\" class=\"empty\"></slot>${otherChildrenSlot}`;\r\n        } else {\r\n            this.#root.innerHTML = `${styleClone?.outerHTML ?? \"\"}<ol>${this.filteredEvents\r\n                .map((event) => {\r\n                    const thisEventNode = templateNode.content.cloneNode(true) as Element;\r\n                    const allValuesEvent = ICalComponent.#extractAllValues(event);\r\n                    Object.entries(allValuesEvent).forEach(([key, value]) => {\r\n                        if (value || value === 0) {\r\n                            console.debug(`looking for slots`, key, value);\r\n                            thisEventNode\r\n                                .querySelectorAll(`slot[name=\"${key}\"]`)\r\n                                .forEach((slot: Element) => {\r\n                                    console.debug(`- found slot`, key, value);\r\n                                    const slotParent = slot.parentElement;\r\n                                    if (slotParent && [\"startDate\", \"endDate\"].includes(key)) {\r\n                                        const jsDate = (value as any).toJSDate() as Date;\r\n                                        const machineDate = jsDate.toISOString();\r\n                                        const readableDate = jsDate.toLocaleString(\r\n                                            this.locales,\r\n                                            this.localeOptions\r\n                                        );\r\n                                        try {\r\n                                            (slotParent as HTMLTimeElement).dateTime = machineDate;\r\n                                        } catch (e) {}\r\n                                        slotParent.innerHTML = readableDate;\r\n                                    } else {\r\n                                        slot.replaceWith(String(value));\r\n                                    }\r\n                                });\r\n                        }\r\n                    });\r\n                    console.debug(`thisEventNode`, thisEventNode, String(thisEventNode));\r\n                    const li = document.createElement(\"li\");\r\n                    li.appendChild(thisEventNode);\r\n                    return li.outerHTML;\r\n                })\r\n                .join(\"\")}</ol>${otherChildrenSlot}`;\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return this.#eventsList;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#eventsList;\r\n    }\r\n\r\n    toString() {\r\n        return JSON.stringify(this.#eventsList);\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (!customElements.get(\"i-cal\")) {\r\n        customElements.define(\"i-cal\", ICalComponent);\r\n    }\r\n});\r\n"],"names":["Binary","aValue","__publicField","aString","data","b64","o1","o2","o3","h1","h2","h3","h4","bits","i","ac","enc","tmp_arr","r","dec","DURATION_LETTERS","DATA_PROPS_TO_COPY","Duration","aSeconds","string","aStr","pos","dict","chunks","type","numeric","parseDurationChunk","aData","seconds","secs","trunc","prop","aOther","thisSeconds","otherSeconds","str","hasWeeks","letter","number","object","num","isStrictlyNaN","Period","Time","parts","options","end","aProp","aLenient","fromDateOrDateTimeString","dateProp","dt","_epochTime","_Time","zone","month","year","_daysInMonth","days","aDayOfYear","aYear","doy","tt","is_leap","strictParseInt","zoneId","Timezone","timeData","aProperty","aDate","useUTC","aWeekStart","t","dow","wkst","yr","LTRS","dom","__privateGet","__privateSet","a","b","attr","val","day","hour","minute","second","timezone","aZone","key","value","TimezoneService","firstDow","dowCacheKey","q","m","Y","h","result","aFirstDayOfWeek","delta","aDayOfWeek","aPos","daysInMonth","weekday","start","otherDay","startDow","offset","endDow","wnCacheKey","week1","isoyear","daysBetween","answer","aDuration","mult","unixTime","other","tz","rc","copy","zone_equals","design","pad2","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","time","date","ms","len","__privateAdd","CHAR","VALUE_DELIMITER","PARAM_DELIMITER","PARAM_NAME_DELIMITER","DEFAULT_VALUE_TYPE$1","DEFAULT_PARAM_TYPE","RFC6868_REPLACE_MAP$1","parse","input","state","root","err","line","ParserError","designSet","valuePos","paramPos","lastParamIndex","lastValuePos","name","params","parsedParams","parsedParamLength","accumulator","currentValue","newComponent","valueType","multiValue","structuredValue","propertyDetails","splitName","ungroupedName","lastParam","delim","lcname","mvdelim","extendedValue","propValuePos","nextPos","length_before","delimiter","x","buffer","innerMulti","lastPos","unescapedIndexOf","callback","firstChar","newlineOffset","OPTIONS","_utcTimezone","_localTimezone","_Timezone","from_zone","to_zone","utcOffset","change","hours","minutes","Component","jCal","tt_change","change_num","change_num_to_use","step","clone","zone_change","tmp_change","prev_zone_change","want_daylight","idx","binsearchInsert","today","changesEndYear","subcomps","compLen","compIdx","aComponent","changes","dtstart","convert_tzoffset","init_changes","changebase","props","rdate","rrule","iterator","occ","zones","utc","tzid","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","comp","formatClassType","search","list","seekVal","cmpfunc","low","high","mid","cmpval","aSrc","aDeep","arr","obj","foldline","aLine","line_length","cp","ICALmodule","extend","source","target","descr","helpers","UtcOffset","instance","factor","VCardTime","icaltype","aIcalType","part","v","s","e","tmz","splitzone","tm","dtlen","tmlen","hasDashDate","hasDashTime","o","y","d","mm","hasYear","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","_RecurIterator","Recur","InvalidRecurrenceRuleError","wkdy","dayName","untilYear","tempLast","initLast","bydow","dayOfMonth","normalized","again","before","valid","inc","this_freq","end_of_data","week_no","rules","newRules","ruleIdx","rule","isInit","byMonthDay","byDay","dateIdx","dateLen","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","next","dayIdx","data_valid","setpos","setpos_total","last_day","coded_day","startOfWeek","matches","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","partCount","t1","t2","monthday","t3","first_dow","doy_offset","last_dow","by_month_day","spIndex","bydayParts","month_day","first_matching_day","last_matching_day","expandedDays","weekno","daysInYear","days_list","tmp","start_dow","end_dow","end_year_day","tmp_start_doy","first","last","this_dow","aRules","j","one","two","indexMapValue","ruleMapValue","pass","ruleType","bydata","weekNo","req","deftime","RecurIterator","VALID_DAY_NAMES","VALID_BYDAY_PART","DOW_MAP","REVERSE_DOW_MAP","entry","ALLOWED_FREQ","fmtIcal","values","ucname","partDesign","partArr","partSet","optionDesign","aStart","aType","aValues","aStartTime","aRecurrenceId","iter","uckey","res","k","kparts","parseNumericValue","min","max","FROM_ICAL_NEWLINE","TO_ICAL_NEWLINE","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","structuredEscape","replaceNewline","regEx","DEFAULT_TYPE_TEXT","DEFAULT_TYPE_TEXT_MULTI","DEFAULT_TYPE_TEXT_STRUCTURED","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","replaceNewlineReplace","newline","commonProperties","commonValues","parsed","icalParams","icalValues","aBinary","aRecur","icalProperties","vcardValues","isFromIcal","lastChar","signChar","sign","c","vcardParams","vcardProperties","vcard3Values","vcard3Params","vcard3Properties","icalSet","vcardSet","vcard3Set","componentName","LINE_ENDING","DEFAULT_VALUE_TYPE","RFC6868_REPLACE_MAP","stringify","component","propIdx","propLen","designSetName","comps","property","noFold","jsName","groupName","paramName","paramDesign","propDetails","isDefault","force","NAME_INDEX$1","PROP_INDEX","TYPE_INDEX","VALUE_INDEX","Property","parent","p","designSetChanged","index","parameters","details","NAME_INDEX","PROPERTY_INDEX","COMPONENT_INDEX","PROPERTY_NAME_INDEX","PROPERTY_VALUE_INDEX","_a","parentDesign","versionProp","jCalLen","jCalIndex","cache","nameOrObject","objects","cached","nameOrComp","removed","nameOrProp","hydratedZone","RecurExpansion","item","compare","maxTries","currentTry","toJSON","propertyName","iters","iterTime","iterIdx","chosenIter","_Event","event","id","compareRangeException","rangeItem","occurrence","utcId","rangeExceptionId","exception","startDiff","original","newStart","startTime","endDate","duration","propName","Event","ComponentParser","ical","components","internalTemplateHTML","_refreshInterval","_determinedCalScale","_eventsList","_error","_root","_validRefreshSeconds","_ICalComponent_instances","clearRefreshInterval_fn","setRefreshInterval_fn","parseICalData_fn","_ICalComponent_static","extractAllValues_fn","upgradeProperty_fn","upgradeAllProperties_fn","fetchEvents_fn","render_fn","_ICalComponent","__privateMethod","newVal","startDt","endDt","oldValue","newValue","useSeconds","jcalData","ICAL","calScale","events","vevent","proto","resp","templateNode","templateStyle","styleClone","otherChildrenSlot","thisEventNode","allValuesEvent","slot","slotParent","jsDate","machineDate","readableDate","li","ICalComponent"],"mappings":"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","x_google_ignoreList":[0]}