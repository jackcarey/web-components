{"version":3,"file":"index-DMs26dKA.js","sources":["../../packages/search-dom/index.ts"],"sourcesContent":["const defaultAriaDatasetKey = 'searchDomAriaHidden';\nconst defaultDisplayDatasetKey = 'searchDomDisplay';\n\n/**\n * A custom element that wraps an input and filters other DOM elements when its value changes.\n * @param target ['ul'] - A CSS selector for the parent element containing items.\n * @param items ['items'] - A CSS selector for items within the parent. Items that have `textContent` that includes the value of the inner `input` element will remain visible. Other items will be hidden.\n * @param mode ['matchCase'] - How to filter item text content. `normal`/omitted or `matchCase`. Default: `normal`.\n * \n * @example\n * ```\n *     <search-dom target=\"#parent\" items=\".item\">\n *         <input type=\"search\"/>\n *     <search-dom>\n *     <ul id=\"parent\">\n *      <li class=\".item\">hello</li>\n *      <li class=\".item\">world</li>\n *     </ul>\n * ```\n */\nexport default class SearchDOM extends HTMLElement implements EventTarget {\n    static observedAttributes = [\"target\", \"items\", \"mode\"];\n    #mutationObserver: MutationObserver | null;\n    #inputListener: EventListener = () => {\n        const tgtSelector = this.getAttribute(\"target\");\n        const itemSelector = this.getAttribute(\"items\");\n        if (tgtSelector && itemSelector) {\n            this.dispatchEvent(new CustomEvent(\"search-dom\", {\n                detail: {\n                    type: \"input\",\n                    value: this.#inputEl?.value\n                }\n            }));\n            const inputVal = this.#inputEl?.value;\n            document.querySelectorAll(tgtSelector).forEach(tgtEl => {\n                this.dispatchEvent(new CustomEvent(\"search-dom\", {\n                    detail: {\n                        type: \"target\",\n                        value: tgtEl\n                    }\n                }));\n                tgtEl.querySelectorAll(itemSelector).forEach(itemEl => {\n\n                    let storedAriaHiddenValue = (itemEl as HTMLElement).dataset[defaultAriaDatasetKey];\n                    let storedDisplayValue = (itemEl as HTMLElement).dataset[defaultDisplayDatasetKey];\n\n                    if (!storedAriaHiddenValue) {\n                        (itemEl as HTMLElement).dataset[defaultAriaDatasetKey] = String(Boolean(itemEl.ariaHidden));\n                    }\n                    if (!storedDisplayValue) {\n                        (itemEl as HTMLElement).dataset[defaultDisplayDatasetKey] = getComputedStyle(itemEl).display;\n                    }\n\n                    storedAriaHiddenValue = (itemEl as HTMLElement).dataset[defaultAriaDatasetKey];\n                    storedDisplayValue = (itemEl as HTMLElement).dataset[defaultDisplayDatasetKey];\n\n                    const hasInputVal = Boolean(inputVal?.length);\n\n                    const testContent = this.mode === \"matchCase\" ? itemEl.textContent : itemEl.textContent?.toLowerCase();\n                    const testVal = this.mode === \"matchCase\" ? inputVal : inputVal?.toLowerCase();\n                    const hasMatch = Boolean(testContent?.includes(String(testVal)));\n                    const isHidden = hasInputVal && !hasMatch;\n\n                    if (isHidden) {\n                        //hide the element\n                        itemEl.ariaHidden = \"true\";\n                        (itemEl as HTMLElement).style.display = 'none';\n                    } else {\n                        //unhide the element\n                        if (storedAriaHiddenValue === \"false\") {\n                            itemEl.removeAttribute('aria-hidden');\n                        } else {\n                            itemEl.ariaHidden = storedAriaHiddenValue ?? \"false\";\n                        }\n                        (itemEl as HTMLElement).style.display = storedDisplayValue ?? 'inherit';\n                        if (itemEl.getAttribute('style') === `display: ${storedDisplayValue};`) {\n                            itemEl.removeAttribute('style');\n                        }\n                    }\n\n                    this.dispatchEvent(new CustomEvent(\"search-dom\", {\n                        detail: {\n                            type: \"item\",\n                            value: this.#inputEl?.value,\n                            target: itemEl,\n                            isHidden\n                        }\n                    }));\n                });\n            });\n        }\n    };\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.#mutationObserver?.disconnect();\n        this.#mutationObserver = new MutationObserver((_) => {\n            this.#setUpInputListener();\n        });\n        this.#mutationObserver.observe(this);\n        this.#setUpInputListener();\n    }\n\n    disconnectedCallback() {\n        this.#mutationObserver?.disconnect();\n    }\n\n    attributeChangedCallback() {\n        this.#setUpInputListener();\n    }\n\n    get #inputEl() {\n        return (this.querySelector(\"input[type='search']\") || this.querySelector(\"input\")) as HTMLInputElement | undefined;\n    }\n\n    #setUpInputListener() {\n        if (this.#inputEl) {\n            this.#inputEl.addEventListener(\"input\", this.#inputListener);\n        }\n    }\n\n    run() {\n        this.#inputListener(new Event(\"input\", {}));\n    }\n\n    get target(): string | null {\n        return this.getAttribute(\"target\");\n    }\n\n    set target(val: string | undefined | null) {\n        if (val) {\n            this.setAttribute(\"target\", val);\n        } else {\n            this.removeAttribute(\"target\");\n        }\n    }\n\n    get items(): string | null {\n        return this.getAttribute(\"target\");\n    }\n\n    set items(val: string | undefined | null) {\n        if (val) {\n            this.setAttribute(\"items\", val);\n        } else {\n            this.removeAttribute(\"items\");\n        }\n    }\n\n    get mode(): string | null {\n        return this.getAttribute(\"mode\") ?? \"normal\";\n    }\n\n    set mode(val: string | undefined | null) {\n        const validVal = val && [\"normal\", \"matchCase\"].includes(val) ? val : undefined;\n        if (validVal?.length) {\n            this.setAttribute(\"mode\", validVal);\n        } else {\n            this.removeAttribute(\"mode\");\n        }\n    }\n}\n\nif (\"customElements\" in window && !customElements.get(\"search-dom\")) {\n    customElements.define(\"search-dom\", SearchDOM);\n}"],"names":["defaultAriaDatasetKey","defaultDisplayDatasetKey","_mutationObserver","_inputListener","_SearchDOM_instances","inputEl_get","setUpInputListener_fn","_SearchDOM","__privateAdd","_a","_b","tgtSelector","itemSelector","__privateGet","inputVal","tgtEl","itemEl","storedAriaHiddenValue","storedDisplayValue","hasInputVal","testContent","testVal","hasMatch","isHidden","__privateSet","_","__privateMethod","val","validVal","SearchDOM"],"mappings":"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"}