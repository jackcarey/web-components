{"version":3,"file":"index-BHme9soo.js","sources":["../../packages/dynamic-template/index.ts"],"sourcesContent":["/**\n * Dynamically render the components DOM using corresponding templates.\n * This allows for a single component to have multiple themes or styles based on the template used.\n * The template is selected based on the closest ancestor element with a `data-dynamic-template`\n * attribute and the tag name of the component.\n * If no template is found, the light DOM content is used as-is.\n */\nexport class DynamicTemplate extends HTMLElement {\n    static #setupMutationObserver = (): void => {\n        DynamicTemplate.observer?.disconnect();\n        DynamicTemplate.observer = new MutationObserver((mutations) => {\n            for (const instance of DynamicTemplate.instances) {\n                //only re-rendering elements that are affected by the mutation\n                const isChildOfMutation = mutations.some(mutation => {\n                    return mutation.target.contains(instance);\n                });\n                if (isChildOfMutation) {\n                    instance.render();\n                }\n            }\n        });\n        DynamicTemplate.observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [`data-${DynamicTemplate.datasetAttribute}`]\n        });\n        // the attribute has just changed so we should re-render all instances\n        DynamicTemplate.instances.forEach(instance => {\n            instance.render();\n        });\n    }\n    static #datasetAttr: string = 'dynamic-template';\n    static get datasetAttribute(): string {\n        return DynamicTemplate.#datasetAttr ?? 'dynamic-template';\n    }\n\n    static set datasetAttribute(value: string | null | undefined) {\n        DynamicTemplate.#datasetAttr = value?.length ? value : 'dynamic-template';\n    }\n    static defaultTemplate: string | null | undefined = undefined;\n    private static observer: MutationObserver | null = null;\n    private static instances: Set<DynamicTemplate> = new Set();\n\n    connectedCallback(): void {\n        DynamicTemplate.instances.add(this);\n        this.render();\n        // the mutation observer needn't exist before any element instances are connected\n        if (!DynamicTemplate.observer) {\n            DynamicTemplate.#setupMutationObserver();\n        }\n    }\n    disconnectedCallback(): void {\n        DynamicTemplate.instances.delete(this);\n        // Disconnect observer if no instances remain\n        if (DynamicTemplate.instances.size === 0 && DynamicTemplate.observer) {\n            DynamicTemplate.observer.disconnect();\n            DynamicTemplate.observer = null;\n        }\n    }\n    protected get templateName(): string | undefined {\n        const dataEl = this.closest(`[data-${DynamicTemplate.datasetAttribute}]`);\n        const templateName = (dataEl as HTMLElement).dataset.dynamicTemplate;\n        return templateName;\n    }\n    protected get templateId(): string | undefined {\n        const tagName = this.tagName.toLowerCase();\n        const templateId = this.templateName ? `${this.templateName}-${tagName}` : DynamicTemplate.defaultTemplate?.length ? DynamicTemplate.defaultTemplate : undefined;\n        return templateId;\n    }\n    protected render(templateId?: string): void {\n        if (!this.shadowRoot) {\n            this.attachShadow({\n                mode: 'open',\n                delegatesFocus: true\n            });\n        }\n        const usingTemplateId: string | undefined = templateId || this.templateId;\n        const template = usingTemplateId ? document.querySelector(`template[id=\"${usingTemplateId}\"]`) as HTMLTemplateElement | null : null;\n\n        const exportedParts = template?.getAttribute('exportparts');\n        if (exportedParts) {\n            this.setAttribute('exportparts', exportedParts);\n        } else {\n            this.removeAttribute('exportparts');\n        }\n\n        if (template) {\n            const clone = (template as HTMLTemplateElement).content.cloneNode(true) as DocumentFragment;\n            this.shadowRoot!.innerHTML = '';\n            this.shadowRoot!.appendChild(clone);\n        } else {\n            //setting the innerHTML directly allows the `slot` attributes to be ignored.\n            this.shadowRoot!.innerHTML = this.innerHTML;\n        }\n    }\n}"],"names":["_setupMutationObserver","_datasetAttr","_DynamicTemplate","__privateGet","value","__privateSet","_a","tagName","templateId","usingTemplateId","template","exportedParts","clone","__privateAdd","mutations","instance","mutation","DynamicTemplate"],"mappings":"2UAOO,IAAAA,EAAAC,EAAA,MAAMC,EAAN,MAAMA,UAAwB,WAAY,CA0B7C,WAAW,kBAA2B,CAClC,OAAOC,EAAAD,EAAgBD,IAAgB,kBAC3C,CAEA,WAAW,iBAAiBG,EAAkC,CAC1DC,EAAAH,EAAgBD,EAAeG,GAAA,MAAAA,EAAO,OAASA,EAAQ,mBAC3D,CAKA,mBAA0B,CArCvB,IAAAE,EAsCCJ,EAAgB,UAAU,IAAI,IAAI,EAClC,KAAK,OAAA,EAEAA,EAAgB,UACjBC,EAAAG,EAAAJ,EAAgBF,GAAhB,KAAAM,EAER,CACA,sBAA6B,CACzBJ,EAAgB,UAAU,OAAO,IAAI,EAEjCA,EAAgB,UAAU,OAAS,GAAKA,EAAgB,WACxDA,EAAgB,SAAS,WAAA,EACzBA,EAAgB,SAAW,KAEnC,CACA,IAAc,cAAmC,CAG7C,OAFe,KAAK,QAAQ,SAASA,EAAgB,gBAAgB,GAAG,EAC3B,QAAQ,eAEzD,CACA,IAAc,YAAiC,CA1D5C,IAAAI,EA2DC,MAAMC,EAAU,KAAK,QAAQ,YAAA,EAE7B,OADmB,KAAK,aAAe,GAAG,KAAK,YAAY,IAAIA,CAAO,IAAKD,EAAAJ,EAAgB,kBAAhB,MAAAI,EAAiC,OAASJ,EAAgB,gBAAkB,MAE3J,CACU,OAAOM,EAA2B,CACnC,KAAK,YACN,KAAK,aAAa,CACd,KAAM,OACN,eAAgB,EAAA,CACnB,EAEL,MAAMC,EAAsCD,GAAc,KAAK,WACzDE,EAAWD,EAAkB,SAAS,cAAc,gBAAgBA,CAAe,IAAI,EAAkC,KAEzHE,EAAgBD,GAAA,YAAAA,EAAU,aAAa,eAO7C,GANIC,EACA,KAAK,aAAa,cAAeA,CAAa,EAE9C,KAAK,gBAAgB,aAAa,EAGlCD,EAAU,CACV,MAAME,EAASF,EAAiC,QAAQ,UAAU,EAAI,EACtE,KAAK,WAAY,UAAY,GAC7B,KAAK,WAAY,YAAYE,CAAK,CACtC,MAEI,KAAK,WAAY,UAAY,KAAK,SAE1C,CACJ,EAxFWZ,EAAA,YAwBAC,EAAA,YAxBPY,EADSX,EACFF,EAAyB,IAAY,CADzC,IAAAM,GAECA,EAAAJ,EAAgB,WAAhB,MAAAI,EAA0B,aAC1BJ,EAAgB,SAAW,IAAI,iBAAkBY,GAAc,CAC3D,UAAWC,KAAYb,EAAgB,UAETY,EAAU,KAAKE,GAC9BA,EAAS,OAAO,SAASD,CAAQ,CAC3C,GAEGA,EAAS,OAAA,CAGrB,CAAC,EACDb,EAAgB,SAAS,QAAQ,SAAS,KAAM,CAC5C,UAAW,GACX,QAAS,GACT,WAAY,GACZ,gBAAiB,CAAC,QAAQA,EAAgB,gBAAgB,EAAE,CAAA,CAC/D,EAEDA,EAAgB,UAAU,QAAQa,GAAY,CAC1CA,EAAS,OAAA,CACb,CAAC,CACL,GACAF,EAzBSX,EAyBFD,EAAuB,oBAQ9BC,EAAO,gBAA6C,OACpDA,EAAe,SAAoC,KACnDA,EAAe,cAAsC,IAnClD,IAAMe,EAANf"}