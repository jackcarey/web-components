{"version":3,"file":"index-ZUpbfJB3.js","sources":["../../packages/dynamic-template/index.ts"],"sourcesContent":["/**\n * Dynamically render the components DOM using corresponding templates.\n * This allows for a single component to have multiple themes or styles based on the template used.\n * The template is selected based on the closest ancestor element with a `data-dynamic-template`\n * attribute and the tag name of the component.\n * If no template is found, the light DOM content is used as-is.\n */\nexport class DynamicTemplate extends HTMLElement {\n    static datasetAttribute = 'dynamic-template';\n    static defaultTemplate: string | null | undefined = undefined;\n    #observer: MutationObserver | null;\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        if (!this.#observer) {\n            this.#observer = new MutationObserver(() => {\n                this.#render();\n            });\n        }\n        this.#observer.observe(document.body, { childList: true, subtree: true, attributes: true, attributeFilter: [`data-${DynamicTemplate.datasetAttribute}`] });\n        this.#render();\n    }\n    disconnectedCallback() {\n        if (this.#observer) {\n            this.#observer.disconnect();\n            this.#observer = null;\n        }\n    }\n    #render() {\n        if (!this.shadowRoot) {\n            this.attachShadow({\n                mode: 'open',\n                delegatesFocus: true\n            });\n        }\n        const dataEl = this.closest(`[data-${DynamicTemplate.datasetAttribute}]`);\n        const templateName = (dataEl as HTMLElement).dataset.dynamicTemplate;\n        const tagName = this.tagName.toLowerCase();\n        const templateId = templateName ? `${templateName}-${tagName}` : DynamicTemplate.defaultTemplate?.length ? DynamicTemplate.defaultTemplate : undefined;\n        const template = templateId ? document.querySelector(`template[id=\"${templateId}\"]`) as HTMLTemplateElement | null : null;\n\n        const exportedParts = template?.getAttribute('exportparts');\n        if (exportedParts) {\n            this.setAttribute('exportparts', exportedParts);\n        } else {\n            this.removeAttribute('exportparts');\n        }\n\n        if (template) {\n            const clone = (template as HTMLTemplateElement).content.cloneNode(true) as DocumentFragment;\n            this.shadowRoot!.innerHTML = '';\n            this.shadowRoot!.appendChild(clone);\n        } else {\n            //setting the innerHTML directly allows the `slot` attributes to be ignored.\n            this.shadowRoot!.innerHTML = this.innerHTML;\n        }\n    }\n}"],"names":["_observer","_DynamicTemplate_instances","render_fn","_DynamicTemplate","__privateAdd","__privateGet","__privateSet","__privateMethod","_a","templateName","tagName","templateId","template","exportedParts","clone","DynamicTemplate"],"mappings":"yXAOO,IAAAA,EAAAC,EAAAC,EAAA,MAAMC,EAAN,MAAMA,UAAwB,WAAY,CAI7C,aAAc,CACJ,MAAA,EALPC,EAAA,KAAAH,GAGHG,EAAA,KAAAJ,EAEU,CAEV,mBAAoB,CACXK,EAAA,KAAKL,IACDM,EAAA,KAAAN,EAAY,IAAI,iBAAiB,IAAM,CACxCO,EAAA,KAAKN,EAAAC,GAAL,UAAa,CAChB,GAELG,EAAA,KAAKL,GAAU,QAAQ,SAAS,KAAM,CAAE,UAAW,GAAM,QAAS,GAAM,WAAY,GAAM,gBAAiB,CAAC,QAAQG,EAAgB,gBAAgB,EAAE,EAAG,EACzJI,EAAA,KAAKN,EAAAC,GAAL,UAAa,CAEjB,sBAAuB,CACfG,EAAA,KAAKL,KACLK,EAAA,KAAKL,GAAU,WAAW,EAC1BM,EAAA,KAAKN,EAAY,MACrB,CA+BR,EAhDIA,EAAA,YAHGC,EAAA,YAsBHC,EAAU,UAAA,CAtBP,IAAAM,EAuBM,KAAK,YACN,KAAK,aAAa,CACd,KAAM,OACN,eAAgB,EAAA,CACnB,EAGC,MAAAC,EADS,KAAK,QAAQ,SAASN,EAAgB,gBAAgB,GAAG,EAC3B,QAAQ,gBAC/CO,EAAU,KAAK,QAAQ,YAAY,EACnCC,EAAaF,EAAe,GAAGA,CAAY,IAAIC,CAAO,IAAKF,EAAAL,EAAgB,kBAAhB,MAAAK,EAAiC,OAASL,EAAgB,gBAAkB,OACvIS,EAAWD,EAAa,SAAS,cAAc,gBAAgBA,CAAU,IAAI,EAAkC,KAE/GE,EAAgBD,GAAA,YAAAA,EAAU,aAAa,eAO7C,GANIC,EACK,KAAA,aAAa,cAAeA,CAAa,EAE9C,KAAK,gBAAgB,aAAa,EAGlCD,EAAU,CACV,MAAME,EAASF,EAAiC,QAAQ,UAAU,EAAI,EACtE,KAAK,WAAY,UAAY,GACxB,KAAA,WAAY,YAAYE,CAAK,CAAA,MAG7B,KAAA,WAAY,UAAY,KAAK,SACtC,EAhDJX,EAAO,iBAAmB,mBAC1BA,EAAO,gBAA6C,OAFjD,IAAMY,EAANZ"}