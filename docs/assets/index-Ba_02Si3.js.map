{"version":3,"file":"index-Ba_02Si3.js","sources":["../../packages/mirror-element/index.ts"],"sourcesContent":["\n\n\n/**\n * MirrorElement copies content from an element given by a selector into itself.\n */\nclass MirrorElement extends HTMLElement {\n    static get observedAttributes() {\n        return ['selector', 'strip-ids'];\n    }\n\n    #mutationObserver: MutationObserver;\n\n    connectedCallback(): void {\n        this.#setupObserver();\n        this.render();\n    }\n\n    disconnectedCallback(): void {\n        this.#mutationObserver?.disconnect();\n    }\n\n    attributeChangedCallback(name): void {\n        if (name === 'selector') {\n            this.#setupObserver();\n        }\n        this.render();\n    }\n\n    #setupObserver() {\n        if (!this.#mutationObserver) {\n            this.#mutationObserver = new MutationObserver(() => {\n                this.render();\n            });\n        }\n        this.#mutationObserver?.disconnect();\n    }\n\n    get selector(): string | null {\n        return this.getAttribute('selector');\n    }\n\n    set selector(value: string | null | undefined) {\n        if (value?.length) {\n            this.setAttribute('selector', value);\n        } else {\n            this.removeAttribute('selector');\n        }\n    }\n\n    get stripIds(): boolean {\n        return this.hasAttribute('strip-ids');\n    }\n\n    set stripIds(value: boolean) {\n        if (value) {\n            this.setAttribute('strip-ids', '');\n        } else {\n            this.removeAttribute('strip-ids');\n        }\n    }\n\n    render() {\n        this.innerHTML = '';\n        if (!this.selector) return;\n        const el = document.querySelector(this.selector);\n        if (!el) return;\n        this.innerHTML = el.innerHTML;\n        if (this.stripIds) {\n            this.querySelectorAll('[id]').forEach(el => {\n                el.removeAttribute(\"id\");\n            });\n        }\n    }\n}\n\nexport { MirrorElement }\n\nif (customElements && !customElements.get(\"mirror-element\")) {\n    customElements.define(\"mirror-element\", MirrorElement);\n}"],"names":["_mutationObserver","_MirrorElement_instances","setupObserver_fn","MirrorElement","__privateAdd","__privateMethod","_a","__privateGet","name","value","el","__privateSet"],"mappings":"yXAMA,IAAAA,EAAAC,EAAAC,EAAA,MAAMC,UAAsB,WAAY,CAAxC,kCAAAC,EAAA,KAAAH,GAKIG,EAAA,KAAAJ,GAJA,WAAW,oBAAqB,CAC5B,MAAO,CAAC,WAAY,WAAW,CACnC,CAIA,mBAA0B,CACtBK,EAAA,KAAKJ,EAAAC,GAAL,WACA,KAAK,OAAA,CACT,CAEA,sBAA6B,CAZjC,IAAAI,GAaQA,EAAAC,EAAA,KAAKP,KAAL,MAAAM,EAAwB,YAC5B,CAEA,yBAAyBE,EAAY,CAC7BA,IAAS,YACTH,EAAA,KAAKJ,EAAAC,GAAL,WAEJ,KAAK,OAAA,CACT,CAWA,IAAI,UAA0B,CAC1B,OAAO,KAAK,aAAa,UAAU,CACvC,CAEA,IAAI,SAASO,EAAkC,CACvCA,GAAA,MAAAA,EAAO,OACP,KAAK,aAAa,WAAYA,CAAK,EAEnC,KAAK,gBAAgB,UAAU,CAEvC,CAEA,IAAI,UAAoB,CACpB,OAAO,KAAK,aAAa,WAAW,CACxC,CAEA,IAAI,SAASA,EAAgB,CACrBA,EACA,KAAK,aAAa,YAAa,EAAE,EAEjC,KAAK,gBAAgB,WAAW,CAExC,CAEA,QAAS,CAEL,GADA,KAAK,UAAY,GACb,CAAC,KAAK,SAAU,OACpB,MAAMC,EAAK,SAAS,cAAc,KAAK,QAAQ,EAC1CA,IACL,KAAK,UAAYA,EAAG,UAChB,KAAK,UACL,KAAK,iBAAiB,MAAM,EAAE,QAAQA,GAAM,CACxCA,EAAG,gBAAgB,IAAI,CAC3B,CAAC,EAET,CACJ,CA/DIV,EAAA,YALJC,EAAA,YAuBIC,EAAA,UAAiB,CAvBrB,IAAAI,EAwBaC,EAAA,KAAKP,IACNW,EAAA,KAAKX,EAAoB,IAAI,iBAAiB,IAAM,CAChD,KAAK,OAAA,CACT,CAAC,IAELM,EAAAC,EAAA,KAAKP,KAAL,MAAAM,EAAwB,YAC5B,EA0CA,gBAAkB,CAAC,eAAe,IAAI,gBAAgB,GACtD,eAAe,OAAO,iBAAkBH,CAAa"}