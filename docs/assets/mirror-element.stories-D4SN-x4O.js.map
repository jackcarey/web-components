{"version":3,"file":"mirror-element.stories-D4SN-x4O.js","sources":["../../stories/components/mirror-element.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from \"@storybook/web-components-vite\";\nimport { CreateComponentDecorators, CreateComponentStoryMeta } from \"../utils\";\nimport { html } from \"lit\";\nimport { MirrorElement } from \"../../packages/mirror-element\";\n\nconst renderFn: StoryObj[\"render\"] = (args) => {\n    return html`<div id=\"target\">\n            <p>paragraph 1</p>\n        </div>\n        <mirror-element selector=${args.selector}></mirror-element>`;\n};\n\nconst meta: Meta = {\n    ...CreateComponentStoryMeta(\"mirror-element\", undefined, {\n        decorators: [\n            ...CreateComponentDecorators(\"mirror-element\", undefined),\n            (story) => {\n                if (!customElements.get(\"mirror-element\")) {\n                    customElements.define(\"mirror-element\", MirrorElement);\n                }\n                return html`${story()}`;\n            },\n        ],\n    }),\n    render: renderFn,\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Default: Story = {\n    args: {\n        selector: \"#target\",\n    },\n};\n\nexport const ChangingChildren: Story = {\n    args: {\n        selector: \"#target\",\n    },\n    render: (args, context) => {\n        const originalStory = renderFn(args, context);\n        return html`${originalStory}\n            <p>\n                The first paragraph will change every second and the\n                <code>mirror-element</code> will copy it.\n            </p>\n            <script>\n                setInterval(() => {\n                    document.querySelector(\"#target p\").innerText = Date.now();\n                }, 1000);\n            </script>`;\n    },\n};\n"],"names":["_a","renderFn","args","html","selector","meta","CreateComponentStoryMeta","undefined","decorators","CreateComponentDecorators","story","customElements","get","define","MirrorElement","render","Default","ChangingChildren","context","originalStory","__template","parameters","docs","source","originalSource"],"mappings":"yQAAAA,EAKA,MAAMC,EAAgCC,GAC3BC;AAAAA;AAAAA;AAAAA,mCAGwBD,EAAKE,QAAQ,qBAG1CC,EAAa,CACf,GAAGC,EAAyB,iBAAkBC,OAAW,CACrDC,WAAY,CACR,GAAGC,EAA0B,iBAAkBF,MAAS,EACvDG,IACQC,eAAeC,IAAI,gBAAgB,GACpCD,eAAeE,OAAO,iBAAkBC,CAAa,EAElDX,IAAOO,GAAO,GACxB,CAAA,CAER,EACDK,OAAQd,CACZ,EAKae,EAAiB,CAC1Bd,KAAM,CACFE,SAAU,SAAA,CAElB,EAEaa,EAA0B,CACnCf,KAAM,CACFE,SAAU,SAAA,EAEdW,OAAQA,CAACb,EAAMgB,IAAY,CACvB,MAAMC,EAAgBlB,EAASC,CAAa,EAC5C,OAAOC,EAAAA,IAAAA,EAAIiB,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAA,CAAA,GAAbD,CAAAA,CAUlB,CACJ,YAACH,EAAAK,WAAA,CAAA,GAAAL,EAAAK,WAAAC,KAAA,CAAA,IAAAN,EAAAA,EAAAK,aAAAL,YAAAA,EAAAM,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAR,GAAAA,EAAAA,EAAAK,aAAAL,YAAAA,EAAAM,OAAAN,YAAAA,EAAAO,MAAAA,CAAA,CAAA,YAAAN,EAAAI,WAAA,CAAA,GAAAJ,EAAAI,WAAAC,KAAA,CAAA,IAAAL,EAAAA,EAAAI,aAAAJ,YAAAA,EAAAK,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAP,GAAAA,EAAAA,EAAAI,aAAAJ,YAAAA,EAAAK,OAAAL,YAAAA,EAAAM,MAAAA,CAAA,CAAA"}