{"version":3,"file":"index-4THCAER5.js","sources":["../../packages/cite-box/index.ts"],"sourcesContent":["/**\n * Cite List Web Component\n * This component observes elements in the DOM and collects <cite> elements based on a selector.\n * It can limit the number of <cite> elements displayed and optionally link them to their original elements.\n * The component uses a MutationObserver to update the list dynamically when the DOM changes.\n * It renders the collected <cite> elements in an ordered list format.\n * @element cite-list\n * @attribute {string} selector - The CSS selector to observe for <cite> elements.\n * @attribute {number} limit - The maximum number of <cite> elements to display.\n * @attribute {boolean} link - If true, clicking on a list item scrolls to the corresponding <cite> element.\n * @example\n * <cite-list selector=\"article p\" limit=\"5\" link></cite-list>\n * This will create a list of up to 5 <cite> elements found within <article> paragraphs.\n */\nexport class CiteList extends HTMLElement {\n    #mutationObserver: MutationObserver;\n    static get observedAttributes() {\n        return ['selector', 'limit', 'link'];\n    }\n\n    get selector(): string | null {\n        return this.getAttribute('selector');\n    }\n\n    set selector(selector: string) {\n        if (selector?.length) {\n            this.setAttribute('selector', selector);\n        } else {\n            this.removeAttribute('selector');\n        }\n    }\n\n    get limit(): number {\n        try {\n            const limit = parseInt(this.getAttribute(\"limit\") || '0', 10);\n            if (isNaN(limit) || limit <= 0) {\n                return 0;\n            }\n            return limit;\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    set limit(limit: number) {\n        if (limit >= 0) {\n            this.setAttribute('limit', limit.toString());\n        } else {\n            this.removeAttribute('limit');\n        }\n    }\n\n    get link(): boolean {\n        return this.hasAttribute('link');\n    }\n\n    set link(value: boolean) {\n        if (value) {\n            this.setAttribute('link', '');\n        } else {\n            this.removeAttribute('link');\n        }\n    }\n\n    get observedElements(): Array<Element> {\n        if (!this.selector) return [document.body];\n        return Array.from(this.querySelectorAll(this.selector));\n    }\n\n    get citeElements(): Array<Element> {\n        const parents = this.observedElements;\n        if (parents.length === 0) return [];\n        const cites: Element[] = [];\n        parents.forEach(parent => {\n            parent.querySelectorAll('cite').forEach(citeEl => {\n                if (!cites.includes(citeEl)) {\n                    cites.push(citeEl);\n                }\n            });\n        });\n        return !this.limit ? cites : cites.slice(0, this.limit);\n    }\n\n    #setupObserver() {\n        if (!this.#mutationObserver) {\n            this.#mutationObserver = new MutationObserver(() => {\n                this.#render();\n            });\n        }\n        this.#mutationObserver?.disconnect();\n        const observedElements = this.querySelectorAll(this.selector || 'cite');\n        if (observedElements.length > 0) {\n            observedElements.forEach(el => {\n                this.#mutationObserver?.observe(el, {\n                    attributes: true,\n                    childList: true,\n                    subtree: true,\n                    characterData: true\n                });\n            });\n        }\n    }\n\n    #render() {\n        this.innerHTML = '';\n        const cites = this.citeElements;\n        const orderedListEl = document.createElement('ol');\n        this.appendChild(orderedListEl);\n        if (cites.length > 0) {\n            orderedListEl.setAttribute('data-cite-count', cites.length.toString());\n            const scrollToArgs: ScrollIntoViewOptions = { behavior: 'smooth', block: 'center', inline: 'center' };\n            cites.forEach(cite => {\n                const listItem = document.createElement('li');\n                orderedListEl.appendChild(listItem);\n                listItem.textContent = (cite as HTMLElement).innerText || '';\n                if (cite.id) {\n                    listItem.setAttribute('data-cite-id', cite.id);\n                }\n                if (this.link) {\n                    listItem.addEventListener(\"click\", () => {\n                        cite.scrollIntoView(scrollToArgs);\n                    });\n                    listItem.classList.add('cite-link');\n                }\n            });\n        }\n    }\n\n    connectedCallback() {\n        this.#render();\n        this.#setupObserver();\n    }\n\n    disconnectedCallback() {\n        this.#mutationObserver?.disconnect();\n    }\n\n    attributeChangedCallback(name: string, _oldValue: string | null | undefined, _newValue: string | null | undefined) {\n        if (name === \"selector\") {\n            this.#setupObserver();\n        }\n\n        this.#render();\n    }\n}\n\nif (customElements && !customElements.get('cite-list')) {\n    customElements.define('cite-list', CiteList);\n}"],"names":["_mutationObserver","_CiteList_instances","setupObserver_fn","render_fn","CiteList","__privateAdd","selector","limit","value","parents","cites","parent","citeEl","__privateMethod","_a","__privateGet","name","_oldValue","_newValue","__privateSet","observedElements","el","orderedListEl","scrollToArgs","cite","listItem"],"mappings":"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"}