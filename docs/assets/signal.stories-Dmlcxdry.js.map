{"version":3,"file":"signal.stories-Dmlcxdry.js","sources":["../../stories/utilities/signal.stories.tsx"],"sourcesContent":["import type { Meta, StoryContext, StoryObj } from \"@storybook/web-components-vite\";\nimport Signal from \"../../packages/signal\";\nimport { html } from \"lit\";\n\n// This default export determines where your story goes in the story list\nconst meta: Meta = {};\n\nexport default meta;\ntype Story = StoryObj;\n\nconst signalHtml = (context: StoryContext, s?: object, storySpecificText?: string) => {\n    const id = `signal-${Math.floor(Math.random() * 1000)}`;\n    const cssId = `#${id}`;\n    return html`<div id=\"${cssId}\"><p>\n            Story '<code>${context.name}</code>' | If the DOM does not update below, check the\n            browser console.\n        </p>\n        ${storySpecificText ? html`<p>${storySpecificText}</p>` : \"\"}\n        <pre><output>${s ? JSON.stringify(s, null, 2) : \"\"}<output></pre></div>`;\n};\n\nexport const Default: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({ foo: \"bar\" });\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            s.fizz = \"bang\";\n            s.bang = \"fizz\";\n            return signalHtml(context, s);\n        },\n    ],\n};\n\nexport const WithDocumentTarget: Story = {\n    decorators: [\n        (_story, context) => {\n            document.addEventListener(\"signal\", (evt) =>\n                console.log(`document story signal`, context.name, evt)\n            );\n            const s = new Signal({ foo: \"bar\" }, { target: document });\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            s.fizz = \"bang\";\n            s.bang = \"fizz\";\n            return signalHtml(\n                context,\n                s,\n                \"This story adds the 'document' as the EventTarget for the Signal\"\n            );\n        },\n    ],\n};\n\nexport const LotsOfProperties: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({}, { target: document });\n            const listener = (evt) => console.log(\"listener on signal\", evt);\n            s.addEventListener(\"signal\", listener);\n            for (let i = 0; i < 1000; ++i) {\n                s[i] = i * 2;\n            }\n            return signalHtml(context, s);\n        },\n    ],\n};\n\nexport const Interval: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({});\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            let i = 0;\n            const intervalId = setInterval(() => {\n                s[i] = performance.now();\n                i += 1;\n            }, 500);\n            setTimeout(() => {\n                clearInterval(intervalId);\n            }, 10000);\n            return signalHtml(\n                context,\n                s,\n                \"New events are triggered every 500ms for 10 seconds. The DOM will not change.\"\n            );\n        },\n    ],\n};\n\nexport const UseSuffix = {\n    decorators: [\n        (_story, context) => {\n            const signalName = \"customName\";\n            const s = new Signal({}, { name: signalName, useSuffix: true });\n            s.addEventListener(\"signal\", (evt) => console.error(`This should never trigger!`, evt));\n            s.addEventListener(`signal-${signalName}`, (evt) =>\n                console.log(`listener for signal-${signalName}`, evt)\n            );\n            let i = 0;\n            const intervalId = setInterval(() => {\n                s[i] = performance.now();\n                i += 1;\n            }, 500);\n            setTimeout(() => {\n                clearInterval(intervalId);\n            }, 3000);\n            return signalHtml(\n                context,\n                s,\n                \"The 'useSuffix' option appends the signal name to the end of the emitted event type, should you wish to change it.\"\n            );\n        },\n    ],\n};\n"],"names":["meta","signalHtml","context","s","storySpecificText","cssId","Math","floor","random","html","name","JSON","stringify","Default","decorators","_story","Signal","foo","addEventListener","evt","console","log","fizz","bang","WithDocumentTarget","document","target","LotsOfProperties","listener","i","Interval","intervalId","setInterval","performance","now","setTimeout","clearInterval","UseSuffix","signalName","useSuffix","error","parameters","docs","source","originalSource"],"mappings":"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"}