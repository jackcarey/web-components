{"version":3,"file":"index-BK7s6_mL.js","sources":["../../packages/autoloader/components.ts","../../packages/autoloader/index.ts"],"sourcesContent":["const components = {\"can-i-use\":\"1.0.27\",\"capture-dom\":\"0.0.7\",\"cite-list\":\"1.0.7\",\"diff-text\":\"1.0.50\",\"dynamic-template\":\"1.0.19\",\"i-cal\":\"1.1.27\",\"kbd-click\":\"1.0.19\",\"middle-truncate\":\"0.1.20\",\"mirror-element\":\"0.0.7\",\"reveal-presentation\":\"0.0.22\",\"rss-feed\":\"0.0.19\",\"search-dom\":\"0.0.20\"};\nexport default components;","import components from \"./components\";\n\n/**\n * Automatically loads components from JSR @web-components.\n * It adds a script tag with the component's source URL to the document head.\n * It also observes the document body for any added nodes and loads the corresponding components.\n */\nconst autoload = () => {\n    //load from current DOM\n    Object.entries(components).forEach(([tagName]) => {\n        if (!document.querySelector(tagName)) return;\n        loadTag(tagName);\n    });\n\n    //load components when the DOM changes\n    const observer = new MutationObserver((mutationsList) => {\n        for (let mutation of mutationsList) {\n            if (mutation.type === \"childList\") {\n                const addedNodes = Array.from(mutation.addedNodes);\n                addedNodes.forEach((node) => {\n                    if (node.nodeType === Node.ELEMENT_NODE) {\n                        const nodeTagName = node.nodeName.toLowerCase();\n                        const isIncluded = Object.keys(components).includes(nodeTagName);\n                        if (isIncluded) loadTag(nodeTagName);\n                    }\n                });\n            }\n        }\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n};\n\n/**\n * Loads a web component by dynamically creating a script tag and appending it to the document head.\n * @param name - The name of the web component to load.\n */\nconst loadTag = (name) => {\n    if (!name) return;\n    const version = components[name] ?? \"latest\";\n    const script = document.createElement(\"script\");\n    script.type = \"module\";\n    script.async = true;\n    script.src = `https://esm.sh/jsr/@web-components/${encodeURIComponent(name)}${version === \"latest\" ? \"\" : `@${version}`\n        }`;\n    const alreadyExists = document.querySelector(`script[src=\"${script.src}\"]`);\n    if (alreadyExists) return; // Prevent loading the same script multiple times\n    document.head.appendChild(script);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", autoload);\n"],"names":["components","autoload","tagName","loadTag","mutationsList","mutation","node","nodeTagName","name","version","script"],"mappings":"AAAA,MAAMA,EAAa,CAAC,YAAY,SAAS,cAAc,QAAQ,YAAY,QAAQ,YAAY,SAAS,mBAAmB,SAAS,QAAQ,SAAS,YAAY,SAAS,kBAAkB,SAAS,iBAAiB,QAAQ,sBAAsB,SAAS,WAAW,SAAS,aAAa,QAAA,ECOxRC,EAAW,IAAM,CAEnB,OAAO,QAAQD,CAAU,EAAE,QAAQ,CAAC,CAACE,CAAO,IAAM,CACzC,SAAS,cAAcA,CAAO,GACnCC,EAAQD,CAAO,CACnB,CAAC,EAGgB,IAAI,iBAAkBE,GAAkB,CACrD,QAASC,KAAYD,EACbC,EAAS,OAAS,aACC,MAAM,KAAKA,EAAS,UAAU,EACtC,QAASC,GAAS,CACzB,GAAIA,EAAK,WAAa,KAAK,aAAc,CACrC,MAAMC,EAAcD,EAAK,SAAS,YAAA,EACf,OAAO,KAAKN,CAAU,EAAE,SAASO,CAAW,KACvCA,CAAW,CACvC,CACJ,CAAC,CAGb,CAAC,EAEQ,QAAQ,SAAS,KAAM,CAAE,UAAW,GAAM,QAAS,GAAM,CACtE,EAMMJ,EAAWK,GAAS,CACtB,GAAI,CAACA,EAAM,OACX,MAAMC,EAAUT,EAAWQ,CAAI,GAAK,SAC9BE,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,KAAO,SACdA,EAAO,MAAQ,GACfA,EAAO,IAAM,sCAAsC,mBAAmBF,CAAI,CAAC,GAAGC,IAAY,SAAW,GAAK,IAAIA,CAAO,EACjH,GACkB,UAAS,cAAc,eAAeC,EAAO,GAAG,IAAI,GAE1E,SAAS,KAAK,YAAYA,CAAM,CACpC,EAEA,OAAO,iBAAiB,mBAAoBT,CAAQ"}