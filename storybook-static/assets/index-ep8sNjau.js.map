{"version":3,"file":"index-ep8sNjau.js","sources":["../../packages/autoloader/components.ts","../../packages/autoloader/index.ts"],"sourcesContent":["const components = {\"can-i-use\":\"1.0.8\",\"i-cal\":\"1.1.8\"};\nexport default components;","import components from \"./components\";\n\n/**\n * Automatically loads components from JSR @web-components.\n * It adds a script tag with the component's source URL to the document head.\n * It also observes the document body for any added nodes and loads the corresponding components.\n */\nconst autoload = () => {\n    Object.entries(components).forEach(([tagName, version]) => {\n        if (!document.querySelector(tagName)) return;\n        loadTag(tagName);\n    });\n\n    const observer = new MutationObserver((mutationsList) => {\n        for (let mutation of mutationsList) {\n            if (mutation.type === \"childList\") {\n                const addedNodes = Array.from(mutation.addedNodes);\n                addedNodes.forEach((node) => {\n                    if (node.nodeType === Node.ELEMENT_NODE) {\n                        const nodeTagName = node.nodeName.toLowerCase();\n                        const isIncluded = Object.keys(components).includes(nodeTagName);\n                        if (isIncluded) loadTag(nodeTagName);\n                    }\n                });\n            }\n        }\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n};\n\n/**\n * Loads a web component by dynamically creating a script tag and appending it to the document head.\n * @param name - The name of the web component to load.\n */\nconst loadTag = (name) => {\n    if (!name) return;\n    const version = components[name] ?? \"latest\";\n    const script = document.createElement(\"script\");\n    script.type = \"module\";\n    script.async = true;\n    script.src = `https://esm.sh/jsr/@web-components/${encodeURIComponent(name)}${\n        version === \"latest\" ? \"\" : `@${version}`\n    }`;\n    document.head.appendChild(script);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", autoload);\n"],"names":["components","autoload","tagName","version","loadTag","mutationsList","mutation","node","nodeTagName","name","script"],"mappings":"AAAA,MAAMA,EAAa,CAAC,YAAY,QAAQ,QAAQ,OAAO,ECOjDC,EAAW,IAAM,CACZ,OAAA,QAAQD,CAAU,EAAE,QAAQ,CAAC,CAACE,EAASC,CAAO,IAAM,CAClD,SAAS,cAAcD,CAAO,GACnCE,EAAQF,CAAO,CAAA,CAClB,EAEgB,IAAI,iBAAkBG,GAAkB,CACrD,QAASC,KAAYD,EACbC,EAAS,OAAS,aACC,MAAM,KAAKA,EAAS,UAAU,EACtC,QAASC,GAAS,CACrB,GAAAA,EAAK,WAAa,KAAK,aAAc,CAC/B,MAAAC,EAAcD,EAAK,SAAS,YAAY,EAC3B,OAAO,KAAKP,CAAU,EAAE,SAASQ,CAAW,KACvCA,CAAW,CAAA,CACvC,CACH,CAET,CACH,EAEQ,QAAQ,SAAS,KAAM,CAAE,UAAW,GAAM,QAAS,GAAM,CACtE,EAMMJ,EAAWK,GAAS,CACtB,GAAI,CAACA,EAAM,OACL,MAAAN,EAAUH,EAAWS,CAAI,GAAK,SAC9BC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,KAAO,SACdA,EAAO,MAAQ,GACRA,EAAA,IAAM,sCAAsC,mBAAmBD,CAAI,CAAC,GACvEN,IAAY,SAAW,GAAK,IAAIA,CAAO,EAC3C,GACS,SAAA,KAAK,YAAYO,CAAM,CACpC,EAEA,OAAO,iBAAiB,mBAAoBT,CAAQ"}