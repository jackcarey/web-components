{"version":3,"file":"signal.stories-BlalPQCM.js","sources":["../../stories/utilities/signal.stories.tsx"],"sourcesContent":["import type { Meta, StoryContext, StoryObj } from \"@storybook/web-components\";\nimport Signal from \"../../packages/signal\";\nimport { html } from \"lit\";\n\n// This default export determines where your story goes in the story list\nconst meta: Meta = {};\n\nexport default meta;\ntype Story = StoryObj;\n\nconst signalHtml = (context: StoryContext, s?: object, storySpecificText?: string) => {\n    const id = `signal-${Math.floor(Math.random() * 1000)}`;\n    const cssId = `#${id}`;\n    return html`<div id=\"${cssId}\"><p>\n            Story '<code>${context.name}</code>' | If the DOM does not update below, check the\n            browser console.\n        </p>\n        ${storySpecificText ? html`<p>${storySpecificText}</p>` : \"\"}\n        <pre><output>${s ? JSON.stringify(s, null, 2) : \"\"}<output></pre></div>`;\n};\n\nexport const Default: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({ foo: \"bar\" });\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            s.fizz = \"bang\";\n            s.bang = \"fizz\";\n            return signalHtml(context, s);\n        },\n    ],\n};\n\nexport const WithDocumentTarget: Story = {\n    decorators: [\n        (_story, context) => {\n            document.addEventListener(\"signal\", (evt) =>\n                console.log(`document story signal`, context.name, evt)\n            );\n            const s = new Signal({ foo: \"bar\" }, { target: document });\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            s.fizz = \"bang\";\n            s.bang = \"fizz\";\n            return signalHtml(\n                context,\n                s,\n                \"This story adds the 'document' as the EventTarget for the Signal\"\n            );\n        },\n    ],\n};\n\nexport const LotsOfProperties: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({}, { target: document });\n            const listener = (evt) => console.log(\"listener on signal\", evt);\n            s.addEventListener(\"signal\", listener);\n            for (let i = 0; i < 1000; ++i) {\n                s[i] = Math.round(Math.random() * 10000);\n            }\n            return signalHtml(context, s);\n        },\n    ],\n};\n\nexport const Interval: Story = {\n    decorators: [\n        (_story, context) => {\n            const s = new Signal({});\n            s.addEventListener(\"signal\", (evt) => console.log(\"listener on signal\", evt));\n            let i = 0;\n            const intervalId = setInterval(() => {\n                s[i] = performance.now();\n                i += 1;\n            }, 500);\n            setTimeout(() => {\n                clearInterval(intervalId);\n            }, 10000);\n            return signalHtml(\n                context,\n                s,\n                \"New events are triggered every 500ms for 10 seconds. The DOM will not change.\"\n            );\n        },\n    ],\n};\n\nexport const UseSuffix = {\n    decorators: [\n        (_story, context) => {\n            const signalName = \"customName\";\n            const s = new Signal({}, { name: signalName, useSuffix: true });\n            s.addEventListener(\"signal\", (evt) => console.error(`This should never trigger!`, evt));\n            s.addEventListener(`signal-${signalName}`, (evt) =>\n                console.log(`listener for signal-${signalName}`, evt)\n            );\n            let i = 0;\n            const intervalId = setInterval(() => {\n                s[i] = performance.now();\n                i += 1;\n            }, 500);\n            setTimeout(() => {\n                clearInterval(intervalId);\n            }, 3000);\n            return signalHtml(\n                context,\n                s,\n                \"The 'useSuffix' option appends the signal name to the end of the emitted event type, should you wish to change it.\"\n            );\n        },\n    ],\n};\n"],"names":["meta","signalHtml","context","s","storySpecificText","cssId","Math","floor","random","html","name","JSON","stringify","Default","decorators","_story","Signal","foo","addEventListener","evt","console","log","fizz","bang","WithDocumentTarget","target","document","LotsOfProperties","listener","i","round","Interval","intervalId","setInterval","performance","now","setTimeout","clearInterval","UseSuffix","signalName","useSuffix","error","parameters","docs","source","originalSource"],"mappings":"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"}