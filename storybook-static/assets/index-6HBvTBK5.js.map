{"version":3,"file":"index-6HBvTBK5.js","sources":["../../packages/i18n-mixin/node_modules/@open-wc/context-protocol/dist/observable-map.js","../../packages/i18n-mixin/node_modules/@open-wc/context-protocol/dist/context-protocol.js","../../packages/i18n-mixin/node_modules/@open-wc/context-protocol/dist/index.js","../../packages/i18n-mixin/index.ts"],"sourcesContent":["export class ObservableMap {\n    #store = new Map;\n    set(key, value, subscribers = new Set()) {\n        const data = this.#store.get(key);\n        subscribers = new Set([...subscribers, ...(data?.subscribers || new Set())]);\n        this.#store.set(key, { value, subscribers });\n        for (const subscriber of subscribers) {\n            subscriber(value);\n        }\n    }\n    get(key) {\n        return this.#store.get(key);\n    }\n}\n","// From: https://github.com/webcomponents-cg/community-protocols/blob/main/proposals/context.md#definitions\n/**\n * A function which creates a Context value object\n */\nexport function createContext(name, initialValue) {\n    return {\n        name,\n        initialValue,\n    };\n}\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `subscribe` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass an `unsubscribe`\n * function to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent extends Event {\n    context;\n    callback;\n    subscribe;\n    constructor(context, callback, subscribe) {\n        super(\"context-request\", { bubbles: true, composed: true });\n        this.context = context;\n        this.callback = callback;\n        this.subscribe = subscribe;\n    }\n}\n","import { ObservableMap } from \"./observable-map.js\";\nimport { createContext, ContextEvent, } from \"./context-protocol.js\";\nexport function ProviderMixin(Class) {\n    return class extends Class {\n        #dataStore = new ObservableMap();\n        connectedCallback() {\n            super.connectedCallback?.();\n            const contexts = \"contexts\" in this ? this.contexts : {};\n            for (const [key, value] of Object.entries(contexts || {})) {\n                this.#dataStore.set(key, value());\n            }\n            this.addEventListener(\"context-request\", this.#handleContextRequest);\n        }\n        disconnectedCallback() {\n            this.#dataStore = new ObservableMap();\n            this.removeEventListener(\"context-request\", this.#handleContextRequest);\n        }\n        updateContext(name, value) {\n            this.#dataStore.set(name, value);\n        }\n        // We listen for a bubbled context request event and provide the event with the context requested.\n        #handleContextRequest(event) {\n            const { name, initialValue } = event.context;\n            const subscribe = event.subscribe;\n            if (initialValue) {\n                this.#dataStore.set(name, initialValue);\n            }\n            const data = this.#dataStore.get(name);\n            if (data) {\n                event.stopPropagation();\n                let unsubscribe = () => undefined;\n                if (subscribe) {\n                    unsubscribe = () => {\n                        data.subscribers.delete(event.callback);\n                    };\n                    data.subscribers.add(event.callback);\n                }\n                event.callback(data.value, unsubscribe);\n            }\n        }\n    };\n}\nexport function ConsumerMixin(Class) {\n    return class extends Class {\n        #unsubscribes = [];\n        getContext(contextName) {\n            let result;\n            this.dispatchEvent(new ContextEvent(createContext(contextName), (data) => {\n                result = data;\n            }));\n            return result;\n        }\n        connectedCallback() {\n            super.connectedCallback?.();\n            const contexts = \"contexts\" in this ? this.contexts : {};\n            for (const [contextName, callback] of Object.entries(contexts || {})) {\n                const context = createContext(contextName);\n                // We dispatch a event with that context. The event will bubble up the tree until it\n                // reaches a component that is able to provide that value to us.\n                // The event has a callback for the the value.\n                this.dispatchEvent(new ContextEvent(context, (data, unsubscribe) => {\n                    callback(data);\n                    if (unsubscribe) {\n                        this.#unsubscribes.push(unsubscribe);\n                    }\n                }, \n                // Always subscribe. Consumers can ignore updates if they'd like.\n                true));\n            }\n        }\n        // Unsubscribe from all callbacks when disconnecting\n        disconnectedCallback() {\n            for (const unsubscribe of this.#unsubscribes) {\n                unsubscribe?.();\n            }\n            // Empty out the array in case this element is still stored in memory but just not connected\n            // to the DOM.\n            this.#unsubscribes = [];\n        }\n    };\n}\n","import { ProviderMixin, ConsumerMixin } from \"@open-wc/context-protocol\";\n\ntype I18nData = Record<string, any>;\n\nexport class I18NProvider extends ProviderMixin(HTMLElement) {\n    #failedToFetch: string[] = [];\n    #i18nData: I18nData = {};\n\n    contexts?: Record<PropertyKey, () => I18nData> | undefined = {\n        i18n: () => {\n            return this.#i18nData;\n        }\n    };\n\n    static get observedAttributes(): string[] {\n        return [\"name\", \"src-template\", \"replacement\", \"lang\", \"fallback\", \"preload\"];\n    }\n\n    async connectedCallback() {\n        super.connectedCallback?.();\n        this.fetchI18nData();\n    }\n\n    attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n        super.attributeChangedCallback?.(name, oldValue, newValue);\n        if (name === \"src-template\" || name === \"replacement\") {\n            this.#failedToFetch = [];\n        }\n        if (name === \"preload\") {\n            // If preload is set, fetch the languages immediately\n            this.preload?.forEach(lang => this.fetchI18nData(lang));\n        } else {\n            this.fetchI18nData();\n        }\n    }\n\n    get srcTemplate(): string | null {\n        if (this.hasAttribute(\"src-template\")) {\n            return this.getAttribute(\"src-template\");\n        } else {\n            return null;\n        }\n    }\n\n    set srcTemplate(value: string | undefined | null) {\n        if (value?.length) {\n            this.setAttribute(\"src-template\", value);\n        } else {\n            this.removeAttribute(\"src-template\");\n        }\n    }\n\n    get replacement(): string {\n        const attrVal = this.getAttribute(\"replacement\");\n        return attrVal?.length ? attrVal : \"%s\";\n    }\n\n    set replacement(value: string | undefined | null) {\n        if (value?.length) {\n            this.setAttribute(\"replacement\", value);\n        } else {\n            this.removeAttribute(\"replacement\");\n        }\n    }\n\n    /**\n     * When no other language is available, what should the default language be?\n     * This is used when the `lang` attribute is not set or when the specified language data cannot be fetched.\n     * If the `fallback` attribute is not set, it defaults to the browser's language or \"en\".\n     * @returns {string} The fallback language code.\n     * @default \"en\" or the browser's language\n     */\n    get fallback(): string {\n        if (this.hasAttribute(\"fallback\")) {\n            return this.getAttribute(\"fallback\") || \"en\";\n        } else {\n            return navigator.language || \"en\";\n        }\n    }\n\n    set fallback(value: string) {\n        if (value?.length) {\n            this.setAttribute(\"fallback\", value);\n        } else {\n            this.removeAttribute(\"fallback\");\n        }\n    }\n\n    get preload(): string[] | undefined {\n        if (this.hasAttribute(\"preload\")) {\n            const str = this.getAttribute(\"preload\");\n            if (!str?.length) return undefined;\n            // Ensure the preload attribute is a comma-separated list of language codes\n            const isValidStr = str && str.split(\",\").every(lang => /^[a-z]{2,3}(-[A-Z]{2})?$/.test(lang.trim()));\n            if (!isValidStr) {\n                console.warn(\"Invalid preload attribute format. Expected a comma-separated list of language codes.\");\n            }\n            return str?.split(\",\").map(lang => lang.trim()).filter(lang => lang.length > 0) || undefined;\n        } else {\n            return undefined;\n        }\n    }\n    set preload(value: string | null) {\n        if (value?.length) {\n            this.setAttribute(\"preload\", value);\n        } else {\n            this.removeAttribute(\"preload\");\n        }\n    }\n\n    get lang(): string {\n        const attrVal = this.getAttribute(\"lang\");\n        if (attrVal?.length) {\n            return attrVal;\n        } else {\n            const userLangs = navigator.languages || [navigator.language];\n            // Filter out languages that couldn't be fetched\n            const availableLangs = userLangs.filter(lang => !this.#failedToFetch.includes(lang));\n            if (availableLangs.length > 0) {\n                return availableLangs[0];\n            } else {\n                return this.fallback;\n            }\n        }\n    }\n\n    set lang(value: string) {\n        if (value?.length) {\n            this.setAttribute(\"lang\", value);\n        } else {\n            this.removeAttribute(\"lang\");\n        }\n    }\n\n    fetchI18nData(langCode?: string): void {\n        if (!this.srcTemplate) return;\n        if (!langCode) {\n            langCode = this.lang ?? undefined;\n        }\n        if (!langCode || this.#failedToFetch.includes(langCode)) {\n            console.warn(`Skipping fetch for language: ${langCode} (already failed or not specified)`);\n            return;\n        }\n        const url = this.srcTemplate.replace(this.replacement, langCode);\n        const failLang = (err?: Error) => {\n            const method = err ? \"error\" : \"warn\";\n            console[method](`Failed to fetch i18n data for language: ${langCode}`, err ?? '');\n            this.#failedToFetch.push(langCode);\n        }\n        fetch(url).then(response => {\n            if (!response.ok) {\n                failLang();\n                return;\n            }\n            return response.json();\n        }).then(data => {\n            if (data) {\n                //@ts-expect-error This comes from the ProviderMixin\n                this.updateContext(\"i18n\", { ...(this.#i18nData ?? {}), [langCode]: data });\n                console.log(`Successfully fetched i18n data for language: ${langCode}`);\n            } else {\n            }\n        }).catch(failLang);\n    };\n}\n\nexport function defineI18NProvider(as: string = \"i18n-provider\") {\n    if (!customElements.get(as)) {\n        customElements.define(as, I18NProvider);\n    } else {\n        console.warn(`Custom element '${as}' is already defined.`);\n    }\n}\n\nexport function I18nConsumerMixin<T extends ReturnType<typeof ConsumerMixin>>(\n    Class: T\n) {\n    return class extends ConsumerMixin(Class) {\n        protected translations: Record<string, any> = {};\n\n        get lang(): string {\n            const attrVal = this.getAttribute(\"lang\");\n            if (attrVal?.length) {\n                return attrVal;\n            } else {\n                const userLangs = navigator.languages || [navigator.language];\n                return userLangs[0] || \"en\";\n            }\n        }\n\n        public contexts = {\n            // Fetch contexts that we care about and subscribe to any changes.\n            \"i18n\": (data: I18nData) => {\n                const langRecord = data[this.lang];\n                if (langRecord) {\n                    this.translations = langRecord;\n                }\n            },\n        };\n    }\n}"],"names":["_store","ObservableMap","__privateAdd","key","value","subscribers","data","__privateGet","subscriber","createContext","name","initialValue","ContextEvent","context","callback","subscribe","__publicField","ProviderMixin","Class","_dataStore","_instances","handleContextRequest_fn","_a","contexts","__privateMethod","__privateSet","event","unsubscribe","ConsumerMixin","_unsubscribes","contextName","result","_failedToFetch","_i18nData","I18NProvider","oldValue","newValue","_b","lang","attrVal","str","availableLangs","langCode","url","failLang","err","response","defineI18NProvider","as","I18nConsumerMixin","langRecord"],"mappings":"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","x_google_ignoreList":[0,1,2]}